---

- name: provision Terraform App - {{ tf_app | replace(playbook_dir, '.') }}
  ansible.builtin.terraform:
    project_path: "{{ tf_app }}"
    plan_file: "{{ var_out__tfplan }}"
    state: present
    force_init: true
    backend_config:
      bucket: "{{ tf_s3_backend.outputs.bucket_name.value }}"
      endpoint: "{{ tf_s3_backend.outputs.bucket_endpoint.value }}"
      region: "{{ tf_s3_backend.outputs.bucket_region.value }}"
      access_key: "{{ tf_s3_backend.outputs.access_key.value }}"
      secret_key: "{{ tf_s3_backend.outputs.secret_key.value }}"
      key: "stage-{{ deploy_stage }}.tfstate"
  register: tf_app__result

#- name: debug print cloud hosts
#  debug:
#    msg: "{{ tf_app.outputs.hosts.value }}"

#- name: debug print out inventory file path
#  debug:
#    msg: "{{ playbook_dir }}/{{ var_out__inventry_file }}"

- name: out inventory file - {{ var_out__inventory_file | replace(playbook_dir, '.') }}
  ansible.builtin.template:
    src:  "ansible-inventory.j2"
    dest: "{{ var_out__inventory_file }}"
    mode: '0644'

- name: out inventory ssh config - {{ var_out__inventory_ssh_config | replace(playbook_dir, '.') }}
  ansible.builtin.template:
    src:  "ssh-via-bastion.config.j2"
    dest: "{{ var_out__inventory_ssh_config }}"
    mode: '0644'

- name: debug print external app access params
  debug:
    msg: "{{ tf_app__result.outputs.app_ext_access.value }}"
