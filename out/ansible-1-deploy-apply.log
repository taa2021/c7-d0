
PLAY [Checkings...] ************************************************************

TASK [deploy_stage_checking : current stage: dev] ******************************
Pausing for 7 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
[[[KPress 'C' to continue the play or 'A' to abort 
ok: [localhost]

PLAY [Wait till reachable] *****************************************************

TASK [wait_for : Wait 600 seconds for target connection to become reachable/usable] ***
ok: [dev-worker0]
ok: [dev-master0]
ok: [dev-bastion0l]

PLAY [Setup bastion] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [dev-bastion0e]

TASK [gresolver : Disable service] *********************************************
changed: [dev-bastion0e] => (item=systemd-resolved)

TASK [gresolver : Stop service] ************************************************
changed: [dev-bastion0e] => (item=systemd-resolved)

TASK [gresolver : configure resolver] ******************************************
changed: [dev-bastion0e] => (item=resolv.conf)

TASK [proxy : Install service] *************************************************
changed: [dev-bastion0e] => (item=tinyproxy)

TASK [proxy : Enable service] **************************************************
ok: [dev-bastion0e] => (item=tinyproxy)

TASK [proxy : configure proxy acl] *********************************************
changed: [dev-bastion0e]

TASK [proxy : configure proxy listen] ******************************************
changed: [dev-bastion0e]

TASK [proxy : Start service] ***************************************************
ok: [dev-bastion0e] => (item=tinyproxy)

TASK [wg : Check config] *******************************************************
ok: [dev-bastion0e]

TASK [wg : Set ip4 forwarding] *************************************************
changed: [dev-bastion0e]

TASK [wg : Set arp_ignore=1] ***************************************************
changed: [dev-bastion0e]

TASK [wg : Set arp_announce=2] *************************************************
changed: [dev-bastion0e]

TASK [wg : Install packages] ***************************************************
changed: [dev-bastion0e] => (item=wireguard)
ok: [dev-bastion0e] => (item=wireguard-tools)

TASK [wg : Generate keys] ******************************************************
changed: [dev-bastion0e]

TASK [wg : Check keys - pub] ***************************************************
ok: [dev-bastion0e]

TASK [wg : Check keys - priv] **************************************************
ok: [dev-bastion0e]

TASK [wg : Set the facts - wg0pubkey] ******************************************
ok: [dev-bastion0e]

TASK [wg : Out server params] **************************************************
ok: [dev-bastion0e] => {
    "msg": "eaddr - 51.250.93.121, laddr - 192.168.133.1, port - 51820, pubkey - C9d3SfpWi7GXG/ylB5AXWKVOKzqY9hYExIF5MFSZL2g="
}

TASK [wg : Template a file to "/etc/wireguard/wg0.conf"] ***********************
changed: [dev-bastion0e]

TASK [wg : Enable service] *****************************************************
changed: [dev-bastion0e] => (item=wg-quick@wg0)

TASK [wg : Start service] ******************************************************
changed: [dev-bastion0e] => (item=wg-quick@wg0)

RUNNING HANDLER [proxy : restart services] *************************************
included: /home/avatar/dev/c7-d0/ansible/roles/proxy/tasks/restart.yml for dev-bastion0e

RUNNING HANDLER [proxy : Restart service] **************************************
changed: [dev-bastion0e] => (item=tinyproxy)

PLAY [Bootstrap hosts] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [dev-bastion0l]
ok: [dev-master0]
ok: [dev-worker0]

TASK [gresolver : Disable service] *********************************************
changed: [dev-worker0] => (item=systemd-resolved)
ok: [dev-bastion0l] => (item=systemd-resolved)
changed: [dev-master0] => (item=systemd-resolved)

TASK [gresolver : Stop service] ************************************************
ok: [dev-bastion0l] => (item=systemd-resolved)
changed: [dev-worker0] => (item=systemd-resolved)
changed: [dev-master0] => (item=systemd-resolved)

TASK [gresolver : configure resolver] ******************************************
ok: [dev-bastion0l] => (item=resolv.conf)
changed: [dev-worker0] => (item=resolv.conf)
changed: [dev-master0] => (item=resolv.conf)

TASK [hostname : set hostname] *************************************************
changed: [dev-worker0]
changed: [dev-bastion0l]
changed: [dev-master0]

TASK [net_conf : Set ip4 forwarding] *******************************************
ok: [dev-bastion0l]
changed: [dev-worker0]
changed: [dev-master0]

TASK [wg_route : set route] ****************************************************
skipping: [dev-bastion0l]
changed: [dev-worker0]
changed: [dev-master0]

TASK [wg_route : set a masquerade iptable rule] ********************************
skipping: [dev-bastion0l]
changed: [dev-worker0]
changed: [dev-master0]

TASK [proxified_pkg : setup proxy settings] ************************************
changed: [dev-worker0]
changed: [dev-bastion0l]
changed: [dev-master0]

TASK [proxified_pkg : configure proxy] *****************************************
skipping: [dev-bastion0l]
skipping: [dev-master0]
skipping: [dev-worker0]

TASK [common : Apt "update_cache=yes" if the last one is more than 3600 seconds ago] ***
changed: [dev-bastion0l]
changed: [dev-master0]
changed: [dev-worker0]

TASK [common : Install common packages] ****************************************
ok: [dev-worker0] => (item=ca-certificates)
ok: [dev-master0] => (item=ca-certificates)
ok: [dev-bastion0l] => (item=ca-certificates)
ok: [dev-worker0] => (item=curl)
ok: [dev-master0] => (item=curl)
ok: [dev-bastion0l] => (item=curl)
ok: [dev-worker0] => (item=python3)
ok: [dev-bastion0l] => (item=python3)
ok: [dev-master0] => (item=python3)
ok: [dev-worker0] => (item=gnupg)
ok: [dev-bastion0l] => (item=gnupg)
ok: [dev-master0] => (item=gnupg)
changed: [dev-worker0] => (item=tmux)
changed: [dev-bastion0l] => (item=tmux)
changed: [dev-master0] => (item=tmux)
changed: [dev-worker0] => (item=git)
changed: [dev-bastion0l] => (item=git)
changed: [dev-master0] => (item=git)
changed: [dev-worker0] => (item=lvm2)
changed: [dev-bastion0l] => (item=lvm2)
changed: [dev-master0] => (item=lvm2)

TASK [common : Install common distr-specific packages] *************************
ok: [dev-worker0] => (item=lsb-release)
ok: [dev-bastion0l] => (item=lsb-release)
ok: [dev-master0] => (item=lsb-release)
changed: [dev-worker0] => (item=language-pack-ru)
changed: [dev-bastion0l] => (item=language-pack-ru)
changed: [dev-master0] => (item=language-pack-ru)
changed: [dev-worker0] => (item=htop)
changed: [dev-master0] => (item=htop)
changed: [dev-worker0] => (item=jq)
changed: [dev-master0] => (item=jq)
changed: [dev-bastion0l] => (item=htop)
changed: [dev-bastion0l] => (item=jq)

TASK [swapoff : Comment swap fs in /etc/fstab] *********************************
ok: [dev-worker0]
ok: [dev-bastion0l]
ok: [dev-master0]

PLAY [Setup microk8s on srv (bastion)] *****************************************

TASK [Gathering Facts] *********************************************************
ok: [dev-bastion0l]

TASK [snapd : Install service] *************************************************
changed: [dev-bastion0l] => (item=snapd)

TASK [snapd : Enable service] **************************************************
ok: [dev-bastion0l] => (item=snapd)

TASK [snapd : Start service] ***************************************************
changed: [dev-bastion0l] => (item=snapd)

TASK [k8s_utils : Install OS packages] *****************************************
ok: [dev-bastion0l] => (item=git)
changed: [dev-bastion0l] => (item=python3-pip)

TASK [k8s_utils : Install k8s tools] *******************************************
changed: [dev-bastion0l]

TASK [k8s_utils : Install k9s] *************************************************
changed: [dev-bastion0l]

TASK [k8s_utils : Install Helm plugin] *****************************************
changed: [dev-bastion0l] => (item=https://github.com/databus23/helm-diff)
changed: [dev-bastion0l] => (item=https://github.com/aslafy-z/helm-git)

TASK [k8s_utils : Install python packages for k8s] *****************************
changed: [dev-bastion0l]

TASK [k8s_utils : Install kubectl linstor plugin] ******************************
changed: [dev-bastion0l]

TASK [microk8s : Install microk8s] *********************************************
changed: [dev-bastion0l]

TASK [microk8s : Configure microk8s addons] ************************************
changed: [dev-bastion0l]

TASK [microk8s : Configure k8s config for microk8s] ****************************
changed: [dev-bastion0l]

TASK [k8s_save_conf : Create dir for k8s configs] ******************************
changed: [dev-bastion0l]

TASK [k8s_save_conf : Fetch k8s cluster config] ********************************
changed: [dev-bastion0l]

TASK [k8s_save_conf : Edit k8s cluseter config] ********************************
ok: [dev-bastion0l]

TASK [k8s_save_conf : Adapt microk8s cluseter name in config] ******************
changed: [dev-bastion0l]

TASK [k8s_save_conf : Create dir for k8s cluster configs] **********************
changed: [dev-bastion0l]

TASK [k8s_save_conf : Copy k8s cluster configs to dev-bastion0l] ***************
ok: [dev-bastion0l]

TASK [k8s_save_conf : Delete tmp dir for k8s configs] **************************
changed: [dev-bastion0l]

TASK [helm_repos : Add helm repo] **********************************************
changed: [dev-bastion0l] => (item={'name': 'bitnami', 'url': 'https://charts.bitnami.com/bitnami'})
changed: [dev-bastion0l] => (item={'name': 'grafana', 'url': 'https://grafana.github.io/helm-charts'})
changed: [dev-bastion0l] => (item={'name': 'purelb', 'url': 'https://gitlab.com/api/v4/projects/20400619/packages/helm/stable'})
changed: [dev-bastion0l] => (item={'name': 'prometheus-community', 'url': 'https://prometheus-community.github.io/helm-charts'})
changed: [dev-bastion0l] => (item={'name': 'actions-runner-controller', 'url': 'https://actions-runner-controller.github.io/actions-runner-controller'})
changed: [dev-bastion0l] => (item={'name': 'openebs', 'url': 'https://openebs.github.io/charts'})
changed: [dev-bastion0l] => (item={'name': 'piraeus-operator', 'url': 'git+https://github.com/piraeusdatastore/piraeus-operator@charts?ref=v1.8.2&sparse=0&package=1&depupdate=0'})
changed: [dev-bastion0l] => (item={'name': 'sig-storage-local-static-provisioner', 'url': 'git+https://github.com/kubernetes-sigs/sig-storage-local-static-provisioner@helm?ref=v2.4.0&sparse=0&package=1&depupdate=0'})

TASK [helm_repos : Update the repository cache] ********************************
ok: [dev-bastion0l]

PLAY [localhost] ***************************************************************

TASK [Check 2.9.0 <= Ansible version < 2.13.0] *********************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Check Ansible version > 2.10.11 when using ansible 2.10] *****************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Check that python netaddr is installed] **********************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Check that jinja is not too old (install via pip)] ***********************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

PLAY [Add kube-master nodes to kube_control_plane] *****************************
skipping: no hosts matched

PLAY [Add kube-node nodes to kube_node] ****************************************
skipping: no hosts matched

PLAY [Add k8s-cluster nodes to k8s_cluster] ************************************
skipping: no hosts matched

PLAY [Add calico-rr nodes to calico_rr] ****************************************
skipping: no hosts matched

PLAY [Add no-floating nodes to no_floating] ************************************
skipping: no hosts matched

PLAY [bastion[0]] **************************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [dev-bastion0e]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [dev-bastion0e]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [dev-bastion0e]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [dev-bastion0e]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [dev-bastion0e]

TASK [download : prep_download | Register docker images info] ******************
skipping: [dev-bastion0e]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [dev-bastion0e]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [dev-bastion0e]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [dev-bastion0e]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
skipping: [dev-bastion0e]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
skipping: [dev-bastion0e]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
skipping: [dev-bastion0e]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
skipping: [dev-bastion0e]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [dev-bastion0e]

TASK [download : download | Download files / images] ***************************
skipping: [dev-bastion0e] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-bastion0e] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-bastion0e] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-bastion0e] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-bastion0e] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-bastion0e] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-bastion0e] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-bastion0e] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-bastion0e] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-bastion0e] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-bastion0e] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-bastion0e] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-bastion0e] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-bastion0e] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-bastion0e] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [dev-bastion0e] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [dev-bastion0e] => (item=dev-worker0) 
skipping: [dev-bastion0e] => (item=dev-master0) 
skipping: [dev-bastion0e] => (item=dev-master0) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
ok: [dev-bastion0e -> localhost(127.0.0.1)]

TASK [kubespray-defaults : set fallback_ips] ***********************************
ok: [dev-bastion0e]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
ok: [dev-bastion0e -> localhost(127.0.0.1)]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
ok: [dev-bastion0e]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [dev-bastion0e]

TASK [bastion-ssh-config : set bastion host IP and port] ***********************
ok: [dev-bastion0e -> localhost(127.0.0.1)]

TASK [bastion-ssh-config : Store the current ansible_user in the real_user fact] ***
ok: [dev-bastion0e]

TASK [bastion-ssh-config : create ssh bastion conf] ****************************
changed: [dev-bastion0e -> localhost(127.0.0.1)]

PLAY [k8s_cluster:etcd] ********************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [dev-worker0]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [dev-worker0]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Register docker images info] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [dev-worker0]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download | Download files / images] ***************************
skipping: [dev-worker0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-worker0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-worker0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [dev-worker0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [dev-master0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [dev-worker0] => (item=dev-worker0) 
skipping: [dev-worker0] => (item=dev-master0) 
skipping: [dev-worker0] => (item=dev-master0) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [dev-worker0]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [dev-worker0]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : Fetch /etc/os-release] ************************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : include_tasks] ********************************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/bootstrap-os/tasks/bootstrap-debian.yml for dev-worker0, dev-master0

TASK [bootstrap-os : Check if bootstrap is needed] *****************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [bootstrap-os : Check http::proxy in apt configuration files] *************
ok: [dev-worker0]
ok: [dev-master0]

TASK [bootstrap-os : Add http_proxy to /etc/apt/apt.conf if http_proxy is defined] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : Check https::proxy in apt configuration files] ************
ok: [dev-worker0]
ok: [dev-master0]

TASK [bootstrap-os : Add https_proxy to /etc/apt/apt.conf if https_proxy is defined] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : Install python3] ******************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : Update Apt cache] *****************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : Set the ansible_python_interpreter fact] ******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [bootstrap-os : Install dbus for the hostname module] *********************
ok: [dev-worker0]
ok: [dev-master0]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : Create remote_tmp for it is used by another module] *******
changed: [dev-worker0]
changed: [dev-master0]

TASK [bootstrap-os : Gather host facts to get ansible_os_family] ***************
ok: [dev-master0]
ok: [dev-worker0]

TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (non-CoreOS, non-Flatcar, Suse and ClearLinux, non-Fedora)] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (CoreOS, Flatcar, Suse, ClearLinux and Fedora only)] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : Update hostname fact (CoreOS, Flatcar, Suse, ClearLinux and Fedora only)] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : Install ceph-commmon package] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [bootstrap-os : Ensure bash_completion.d folder exists] *******************
ok: [dev-master0]
ok: [dev-worker0]

PLAY [Gather facts] ************************************************************

TASK [Gather minimal facts] ****************************************************
ok: [dev-master0]
ok: [dev-worker0]

TASK [Gather necessary facts (network)] ****************************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [Gather necessary facts (hardware)] ***************************************
ok: [dev-worker0]
ok: [dev-master0]

PLAY [k8s_cluster:etcd] ********************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [dev-worker0]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [dev-worker0]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Register docker images info] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [dev-worker0]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download | Download files / images] ***************************
skipping: [dev-worker0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-worker0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-worker0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [dev-worker0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [dev-master0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [dev-worker0] => (item=dev-worker0) 
skipping: [dev-worker0] => (item=dev-master0) 
skipping: [dev-worker0] => (item=dev-master0) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
ok: [dev-worker0 -> localhost(127.0.0.1)]

TASK [kubespray-defaults : set fallback_ips] ***********************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
ok: [dev-worker0 -> localhost(127.0.0.1)]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [adduser : User | Create User Group] **************************************
changed: [dev-worker0]
changed: [dev-master0]

TASK [adduser : User | Create User] ********************************************
changed: [dev-master0]
changed: [dev-worker0]

TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *****************
ok: [dev-master0] => (item=swap)
ok: [dev-worker0] => (item=swap)
ok: [dev-master0] => (item=none)
ok: [dev-worker0] => (item=none)

TASK [kubernetes/preinstall : check swap] **************************************
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : Disable swap] ************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Disable swapOnZram for Fedora] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if either kube_control_plane or kube_node group is empty] ***
ok: [dev-worker0] => (item=kube_control_plane) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_control_plane",
    "msg": "All assertions passed"
}
ok: [dev-worker0] => (item=kube_node) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_node",
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if etcd group is empty in external etcd mode] ***
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if non systemd OS type] *********************
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [dev-master0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown OS] ******************************
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [dev-master0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown network plugin] ******************
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [dev-master0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unsupported version of Kubernetes] *******
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [dev-master0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***
ok: [dev-worker0] => (item={'name': 'download_run_once', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_run_once",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [dev-worker0] => (item={'name': 'deploy_netchecker', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "deploy_netchecker",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [dev-worker0] => (item={'name': 'download_always_pull', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_always_pull",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [dev-worker0] => (item={'name': 'helm_enabled', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "helm_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}
ok: [dev-worker0] => (item={'name': 'openstack_lbaas_enabled', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "openstack_lbaas_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if even number of etcd hosts] ***************
skipping: [dev-worker0]
ok: [dev-master0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if memory is too small for masters] *********
skipping: [dev-worker0]
ok: [dev-master0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if memory is too small for nodes] ***********
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop when dynamic_kubelet_configuration enabled for kubernetes >= 1.22] ***
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [dev-master0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Guarantee that enough network address space is available for all pods] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if ip var does not match local ips] *********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if access_ip is not pingable] ***************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if RBAC is not enabled when dashboard is enabled] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if RBAC is not enabled when OCI cloud controller is enabled] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if RBAC and anonymous-auth are not enabled when insecure port is disabled] ***
skipping: [dev-worker0]
ok: [dev-master0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if kernel version is too low] ***************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if bad hostname] ****************************
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [dev-master0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : check cloud_provider value] **********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Check that kube_service_addresses is a network range] ***
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Check that kube_pods_subnet is a network range] ***
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Check that kube_pods_subnet does not collide with kube_service_addresses] ***
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Check that IP range is enough for the nodes] *****
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown dns mode] ************************
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown kube proxy mode] *****************
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown cert_management] *****************
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if unknown resolvconf_mode] *****************
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if etcd deployment type is not host, docker or kubeadm] ***
skipping: [dev-worker0]
ok: [dev-master0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if container manager is not docker, crio or containerd] ***
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if etcd deployment type is not host or kubeadm when container_manager != docker] ***
skipping: [dev-worker0]
ok: [dev-master0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Warn the user if they are still using `etcd_kubeadm_enabled`] ***
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Stop if `etcd_kubeadm_enabled` is defined and `etcd_deployment_type` is not `kubeadm` or `host`] ***
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Stop if download_localhost is enabled but download_run_once is not] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if kata_containers_enabled is enabled when container_manager is docker] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if kata_containers_version is >= 2.3.0 and kube_version < 1.22.0] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if gvisor_enabled is enabled when container_manager is not containerd] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if download_localhost is enabled for Flatcar Container Linux] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Ensure minimum containerd version] ***************
ok: [dev-worker0] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [kubernetes/preinstall : Stop if using deprecated containerd_config variable] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if auto_renew_certificates is enabled when certificates are managed externally (kube_external_ca_mode is true)] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Force binaries directory for Flatcar Container Linux by Kinvolk] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : check if booted with ostree] *********************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : set is_fedora_coreos] ****************************
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : set is_fedora_coreos] ****************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : check resolvconf] ********************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : check existence of /etc/resolvconf/resolv.conf.d] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : check status of /etc/resolv.conf] ****************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : get content of /etc/resolv.conf] *****************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : get currently configured nameservers] ************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : check systemd-resolved] **************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : set dns facts] ***********************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : check if kubelet is configured] ******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : check if early DNS configuration stage] **********
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : target resolv.conf files] ************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : target temporary resolvconf cloud init file (Flatcar Container Linux by Kinvolk / Fedora CoreOS)] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhclient.conf] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] *********
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : target dhclient hook file for Red Hat family] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *****
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : generate search domains to resolvconf] ***********
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *****
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : generate nameservers for resolvconf, including cluster DNS] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : generate nameservers for resolvconf, not including cluster DNS] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : gather os specific variables] ********************
ok: [dev-worker0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)
ok: [dev-master0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)

TASK [kubernetes/preinstall : set etcd vars if using kubeadm mode] *************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : check /usr readonly] *****************************
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : set alternate flexvolume path] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Ensure IPv6DualStack featureGate is set when enable_dual_stack_networks is true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Ensure IPv6DualStack kubeadm featureGate is set when enable_dual_stack_networks is true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Create kubernetes directories] *******************
changed: [dev-master0] => (item=/etc/kubernetes)
changed: [dev-worker0] => (item=/etc/kubernetes)
changed: [dev-master0] => (item=/etc/kubernetes/ssl)
changed: [dev-worker0] => (item=/etc/kubernetes/ssl)
changed: [dev-master0] => (item=/etc/kubernetes/manifests)
changed: [dev-worker0] => (item=/etc/kubernetes/manifests)
changed: [dev-master0] => (item=/usr/local/bin/kubernetes-scripts)
changed: [dev-worker0] => (item=/usr/local/bin/kubernetes-scripts)
changed: [dev-master0] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
changed: [dev-worker0] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)

TASK [kubernetes/preinstall : Create other directories] ************************
ok: [dev-master0] => (item=/usr/local/bin)
ok: [dev-worker0] => (item=/usr/local/bin)

TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : Create kubernetes kubeadm compat cert dir (kubernetes/kubeadm issue 1498)] ***
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/preinstall : Create cni directories] **************************
changed: [dev-worker0] => (item=/etc/cni/net.d)
changed: [dev-master0] => (item=/etc/cni/net.d)
changed: [dev-master0] => (item=/opt/cni/bin)
changed: [dev-worker0] => (item=/opt/cni/bin)
changed: [dev-master0] => (item=/var/lib/calico)
changed: [dev-worker0] => (item=/var/lib/calico)

TASK [kubernetes/preinstall : Create local volume provisioner directories] *****
changed: [dev-worker0] => (item=local-storage)
changed: [dev-master0] => (item=local-storage)

TASK [kubernetes/preinstall : create temporary resolveconf cloud init file] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Add domain/search/nameservers/options to resolv.conf] ***
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/preinstall : Remove search/domain/nameserver options before block] ***
ok: [dev-worker0] => (item=['/etc/resolv.conf', 'search '])
ok: [dev-master0] => (item=['/etc/resolv.conf', 'search '])
ok: [dev-worker0] => (item=['/etc/resolv.conf', 'nameserver '])
ok: [dev-master0] => (item=['/etc/resolv.conf', 'nameserver '])
ok: [dev-worker0] => (item=['/etc/resolv.conf', 'domain '])
ok: [dev-master0] => (item=['/etc/resolv.conf', 'domain '])
ok: [dev-worker0] => (item=['/etc/resolv.conf', 'options '])
ok: [dev-master0] => (item=['/etc/resolv.conf', 'options '])

TASK [kubernetes/preinstall : Remove search/domain/nameserver options after block] ***
changed: [dev-worker0] => (item=['/etc/resolv.conf', 'search '])
changed: [dev-master0] => (item=['/etc/resolv.conf', 'search '])
changed: [dev-worker0] => (item=['/etc/resolv.conf', 'nameserver '])
changed: [dev-master0] => (item=['/etc/resolv.conf', 'nameserver '])
ok: [dev-master0] => (item=['/etc/resolv.conf', 'domain '])
ok: [dev-worker0] => (item=['/etc/resolv.conf', 'domain '])
ok: [dev-master0] => (item=['/etc/resolv.conf', 'options '])
ok: [dev-worker0] => (item=['/etc/resolv.conf', 'options '])

TASK [kubernetes/preinstall : get temporary resolveconf cloud init file content] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : persist resolvconf cloud init file] **************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Write resolved.conf] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : NetworkManager | Ensure NetworkManager conf.d dir] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : NetworkManager | Prevent NetworkManager from managing Calico interfaces (cali*/tunl*/vxlan.calico)] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : NetworkManager | Prevent NetworkManager from managing K8S interfaces (kube-ipvs0/nodelocaldns)] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : NetworkManager | Add nameservers to NM configuration] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : NetworkManager | Add DNS search to NM configuration] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : NetworkManager | Add DNS options to NM configuration] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Update package management cache (zypper) - SUSE] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Update package management cache (APT)] ***********
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : Remove legacy docker repo file] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Install python3-dnf for latest RedHat versions] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Install epel-release on RHEL derivatives] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Update common_required_pkgs with ipvsadm when kube_proxy_mode is ipvs] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : Install packages requirements] *******************
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/preinstall : Install ipvsadm for ClearLinux] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Confirm selinux deployed] ************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Set selinux policy] ******************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Disable IPv6 DNS lookup] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Clean previously used sysctl file locations] *****
ok: [dev-master0] => (item=ipv4-ip_forward.conf)
ok: [dev-worker0] => (item=ipv4-ip_forward.conf)
ok: [dev-master0] => (item=bridge-nf-call.conf)
ok: [dev-worker0] => (item=bridge-nf-call.conf)

TASK [kubernetes/preinstall : Stat sysctl file configuration] ******************
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] ********
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : Enable ip forwarding] ****************************
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : Enable ipv6 forwarding] **************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Check if we need to set fs.may_detach_mounts] ****
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : Set fs.may_detach_mounts if needed] **************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Ensure kube-bench parameters are set] ************
changed: [dev-master0] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
changed: [dev-worker0] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
changed: [dev-master0] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
changed: [dev-worker0] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
changed: [dev-master0] => (item={'name': 'kernel.panic', 'value': 10})
changed: [dev-worker0] => (item={'name': 'kernel.panic', 'value': 10})
changed: [dev-master0] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
changed: [dev-worker0] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
changed: [dev-master0] => (item={'name': 'vm.overcommit_memory', 'value': 1})
changed: [dev-worker0] => (item={'name': 'vm.overcommit_memory', 'value': 1})
changed: [dev-master0] => (item={'name': 'vm.panic_on_oom', 'value': 0})
changed: [dev-worker0] => (item={'name': 'vm.panic_on_oom', 'value': 0})

TASK [kubernetes/preinstall : Check dummy module] ******************************
changed: [dev-master0]
changed: [dev-worker0]

TASK [kubernetes/preinstall : Hosts | create list from inventory] **************
ok: [dev-worker0 -> localhost(127.0.0.1)]

TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] ******
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/preinstall : Hosts | populate kubernetes loadbalancer address into hosts file] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] *************
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] ***
skipping: [dev-worker0] => (item=# Your system has configured 'manage_etc_hosts' as True.) 
skipping: [dev-worker0] => (item=# As a result, if you wish for changes to this file to persist) 
skipping: [dev-worker0] => (item=# then you will need to either) 
skipping: [dev-worker0] => (item=# a.) make changes to the master file in /etc/cloud/templates/hosts.debian.tmpl) 
skipping: [dev-master0] => (item=# Your system has configured 'manage_etc_hosts' as True.) 
skipping: [dev-worker0] => (item=# b.) change or remove the value of 'manage_etc_hosts' in) 
skipping: [dev-master0] => (item=# As a result, if you wish for changes to this file to persist) 
skipping: [dev-worker0] => (item=#     /etc/cloud/cloud.cfg or cloud-config from user-data) 
skipping: [dev-worker0] => (item=#) 
skipping: [dev-master0] => (item=# then you will need to either) 
skipping: [dev-worker0] => (item=127.0.1.1 fhml9doog79j4inmqlig.auto.internal fhml9doog79j4inmqlig) 
skipping: [dev-master0] => (item=# a.) make changes to the master file in /etc/cloud/templates/hosts.debian.tmpl) 
skipping: [dev-master0] => (item=# b.) change or remove the value of 'manage_etc_hosts' in) 
skipping: [dev-master0] => (item=#     /etc/cloud/cloud.cfg or cloud-config from user-data) 
skipping: [dev-master0] => (item=#) 
skipping: [dev-master0] => (item=127.0.1.1 fhm6mmipcrvt7upuvj96.auto.internal fhm6mmipcrvt7upuvj96) 
ok: [dev-worker0] => (item=127.0.0.1 localhost)
skipping: [dev-worker0] => (item=) 
skipping: [dev-worker0] => (item=# The following lines are desirable for IPv6 capable hosts) 
ok: [dev-master0] => (item=127.0.0.1 localhost)
skipping: [dev-master0] => (item=) 
ok: [dev-worker0] => (item=::1 localhost ip6-localhost ip6-loopback)
skipping: [dev-master0] => (item=# The following lines are desirable for IPv6 capable hosts) 
skipping: [dev-worker0] => (item=ff02::1 ip6-allnodes) 
skipping: [dev-worker0] => (item=ff02::2 ip6-allrouters) 
skipping: [dev-worker0] => (item=) 
skipping: [dev-worker0] => (item=# Ansible inventory hosts BEGIN) 
ok: [dev-master0] => (item=::1 localhost ip6-localhost ip6-loopback)
skipping: [dev-worker0] => (item=192.168.33.11 dev-worker0.cluster.cl0.k8s.dev.local dev-worker0 ) 
skipping: [dev-master0] => (item=ff02::1 ip6-allnodes) 
skipping: [dev-worker0] => (item=192.168.33.14 dev-master0.cluster.cl0.k8s.dev.local dev-master0 ) 
skipping: [dev-master0] => (item=ff02::2 ip6-allrouters) 
skipping: [dev-worker0] => (item=# Ansible inventory hosts END) 
skipping: [dev-master0] => (item=) 
skipping: [dev-master0] => (item=# Ansible inventory hosts BEGIN) 
skipping: [dev-master0] => (item=192.168.33.11 dev-worker0.cluster.cl0.k8s.dev.local dev-worker0 ) 
skipping: [dev-master0] => (item=192.168.33.14 dev-master0.cluster.cl0.k8s.dev.local dev-master0 ) 
skipping: [dev-master0] => (item=# Ansible inventory hosts END) 

TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] ***
ok: [dev-worker0] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [dev-worker0] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [dev-master0] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [dev-master0] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})

TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] ********
changed: [dev-master0] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain']})
changed: [dev-worker0] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain']})
changed: [dev-worker0] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']})
changed: [dev-master0] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']})

TASK [kubernetes/preinstall : Update facts] ************************************
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] ***
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] ***
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (RH-only)] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Remove kubespray specific config from dhclient config] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Remove kubespray specific dhclient hook] *********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Flush handlers] **********************************

RUNNING HANDLER [kubernetes/preinstall : Preinstall | propagate resolvconf to k8s components] ***
changed: [dev-worker0]
changed: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | reload kubelet] **********
skipping: [dev-worker0]
skipping: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | kube-apiserver configured] ***
skipping: [dev-worker0]
ok: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | kube-controller configured] ***
skipping: [dev-worker0]
ok: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | restart kube-controller-manager docker] ***
skipping: [dev-worker0]
skipping: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | restart kube-controller-manager crio/containerd] ***
skipping: [dev-worker0]
skipping: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | restart kube-apiserver docker] ***
skipping: [dev-worker0]
skipping: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | restart kube-apiserver crio/containerd] ***
skipping: [dev-worker0]
changed: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | wait for the apiserver to be running] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] *******
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : install growpart] ********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Gather mounts facts] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Search root filesystem device] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : check if growpart needs to be run] ***************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : check fs type] ***********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : run growpart] ************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : run xfs_growfs] **********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [Run calico checks] *******************************************************

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] ***
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] ***
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Stop if incompatible network plugin and cloudprovider] ***
skipping: [dev-worker0]

TASK [network_plugin/calico : Stop if supported Calico versions] ***************
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Get current calico cluster version] **************
ASYNC FAILED on dev-worker0: jid=361599260552.18945
ok: [dev-worker0 -> dev-master0(192.168.33.14)]

TASK [network_plugin/calico : Check that current calico version is enough for upgrade] ***
skipping: [dev-worker0]

TASK [network_plugin/calico : Check that cluster_id is set if calico_rr enabled] ***
skipping: [dev-worker0]

TASK [network_plugin/calico : Check that calico_rr nodes are in k8s_cluster group] ***
skipping: [dev-worker0]

TASK [network_plugin/calico : Check vars defined correctly] ********************
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Check calico network backend defined correctly] ***
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *****
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***
skipping: [dev-worker0]

TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Get Calico default-pool configuration] ***********
ok: [dev-worker0 -> dev-master0(192.168.33.14)]

TASK [network_plugin/calico : Set calico_pool_conf] ****************************
skipping: [dev-worker0]

TASK [network_plugin/calico : Check if inventory match current cluster configuration] ***
skipping: [dev-worker0]

TASK [network_plugin/calico : Check kdd calico_datastore if calico_apiserver_enabled] ***
skipping: [dev-worker0]

TASK [network_plugin/calico : Check kdd calico_datastore if typha_enabled] *****
skipping: [dev-worker0]

TASK [network_plugin/calico : Check ipip mode is Nerver for calco ipv6] ********
skipping: [dev-worker0]

TASK [container-engine/validate-container-engine : validate-container-engine | check if fedora coreos] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/validate-container-engine : validate-container-engine | set is_ostree] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/validate-container-engine : Ensure kubelet systemd unit exists] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [container-engine/validate-container-engine : Populate service facts] *****
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/validate-container-engine : Check if containerd is installed] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [container-engine/validate-container-engine : Check if docker is installed] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [container-engine/validate-container-engine : Check if crio is installed] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [Drain node] **************************************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/validate-container-engine : Stop kubelet] ***************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd-common : containerd-common | set is_ostree] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd-common : containerd-common | gather os specific variables] ***
skipping: [dev-worker0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml) 
skipping: [dev-master0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml) 

TASK [container-engine/runc : runc | set is_ostree] ****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/runc : runc | Uninstall runc package managed by package manager] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/runc : runc | Download runc binary] *********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/runc : Copy runc binary from download dir] **************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/runc : runc | Remove orphaned binary] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd : containerd | Remove containerd repository for RedHat os family] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd : containerd | Remove containerd repository for Debian os family] ***
skipping: [dev-worker0] => (item=) 
skipping: [dev-master0] => (item=) 

TASK [container-engine/containerd : containerd | Stop containerd service] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd : containerd | Remove configuration files] ***
skipping: [dev-worker0] => (item=/etc/systemd/system/containerd.service) 
skipping: [dev-worker0] => (item=/etc/systemd/system/containerd.service.d) 
skipping: [dev-worker0] => (item=/etc/containerd) 
skipping: [dev-worker0] => (item=/var/lib/containerd) 
skipping: [dev-worker0] => (item=/run/containerd) 
skipping: [dev-master0] => (item=/etc/systemd/system/containerd.service) 
skipping: [dev-master0] => (item=/etc/systemd/system/containerd.service.d) 
skipping: [dev-master0] => (item=/etc/containerd) 
skipping: [dev-master0] => (item=/var/lib/containerd) 
skipping: [dev-master0] => (item=/run/containerd) 

TASK [Drain node] **************************************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/validate-container-engine : Stop kubelet] ***************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd-common : containerd-common | set is_ostree] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd-common : containerd-common | gather os specific variables] ***
skipping: [dev-worker0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dev-master0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 

TASK [container-engine/docker-storage : docker-storage-setup | install git and make] ***
skipping: [dev-worker0] => (item=git) 
skipping: [dev-worker0] => (item=make) 
skipping: [dev-master0] => (item=git) 
skipping: [dev-master0] => (item=make) 

TASK [container-engine/docker-storage : docker-storage-setup | docker-storage-setup sysconfig template] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker-storage : docker-storage-override-directory | docker service storage-setup override dir] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker-storage : docker-storage-override | docker service storage-setup override file] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker-storage : docker-storage-setup | install lvm2] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker-storage : docker-storage-setup | install and run container-storage-setup] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Docker | Get package facts] ********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Docker | Find docker packages] *****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Docker | Stop all running container] ***********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : reset | remove all containers] *****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Docker | Stop docker service] ******************
skipping: [dev-worker0] => (item=docker) 
skipping: [dev-worker0] => (item=docker.socket) 
skipping: [dev-worker0] => (item=containerd) 
skipping: [dev-master0] => (item=docker) 
skipping: [dev-master0] => (item=docker.socket) 
skipping: [dev-master0] => (item=containerd) 

TASK [container-engine/docker : Docker | Remove dpkg hold] *********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Docker | Remove docker package] ****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Docker | ensure docker-ce repository is removed] ***
skipping: [dev-worker0] => (item=) 
skipping: [dev-master0] => (item=) 

TASK [container-engine/docker : Docker | Remove docker repository on Fedora] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Docker | Remove docker repository on RedHat/CentOS/Oracle/AlmaLinux Linux] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Docker | Remove docker configuration files] ****
skipping: [dev-worker0] => (item=/etc/systemd/system/docker.service.d/) 
skipping: [dev-worker0] => (item=/etc/systemd/system/docker.socket) 
skipping: [dev-worker0] => (item=/etc/systemd/system/docker.service) 
skipping: [dev-worker0] => (item=/etc/systemd/system/containerd.service) 
skipping: [dev-master0] => (item=/etc/systemd/system/docker.service.d/) 
skipping: [dev-worker0] => (item=/etc/systemd/system/containerd.service.d) 
skipping: [dev-master0] => (item=/etc/systemd/system/docker.socket) 
skipping: [dev-worker0] => (item=/var/lib/docker) 
skipping: [dev-worker0] => (item=/etc/docker) 
skipping: [dev-master0] => (item=/etc/systemd/system/docker.service) 
skipping: [dev-master0] => (item=/etc/systemd/system/containerd.service) 
skipping: [dev-master0] => (item=/etc/systemd/system/containerd.service.d) 
skipping: [dev-master0] => (item=/var/lib/docker) 
skipping: [dev-master0] => (item=/etc/docker) 

TASK [container-engine/docker : Docker | systemctl daemon-reload] **************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [Drain node] **************************************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/validate-container-engine : Stop kubelet] ***************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : CRI-O | Kubic repo name for debian os family] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : CRI-O | Remove kubic apt repo] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : CRI-O | Remove cri-o apt repo] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : CRI-O | Remove CRI-O kubic yum repo] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : CRI-O | Remove CRI-O kubic yum repo] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : CRI-O | Run yum-clean-metadata] *****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : CRI-O | Remove crictl] **************************
skipping: [dev-worker0] => (item=/etc/crictl.yaml) 
skipping: [dev-worker0] => (item=/usr/local/bin/crictl) 
skipping: [dev-master0] => (item=/etc/crictl.yaml) 
skipping: [dev-master0] => (item=/usr/local/bin/crictl) 

TASK [container-engine/cri-o : CRI-O | Stop crio service] **********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : CRI-O | Remove CRI-O configuration files] *******
skipping: [dev-worker0] => (item=/etc/crio) 
skipping: [dev-worker0] => (item=/etc/containers) 
skipping: [dev-worker0] => (item=/etc/systemd/system/crio.service.d) 
skipping: [dev-master0] => (item=/etc/crio) 
skipping: [dev-master0] => (item=/etc/containers) 
skipping: [dev-master0] => (item=/etc/systemd/system/crio.service.d) 

TASK [container-engine/cri-o : CRI-O | Uninstall CRI-O package] ****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/kata-containers : kata-containers | Download kata binary] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/kata-containers : kata-containers | Copy kata-containers binary] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/kata-containers : kata-containers | Create config directory] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/kata-containers : kata-containers | Set configuration] ***
skipping: [dev-worker0] => (item=configuration-qemu.toml) 
skipping: [dev-master0] => (item=configuration-qemu.toml) 

TASK [container-engine/kata-containers : kata-containers | Set containerd bin] ***
skipping: [dev-worker0] => (item=qemu) 
skipping: [dev-master0] => (item=qemu) 

TASK [container-engine/kata-containers : kata-containers | Load vhost kernel modules] ***
skipping: [dev-worker0] => (item=vhost_vsock) 
skipping: [dev-worker0] => (item=vhost_net) 
skipping: [dev-master0] => (item=vhost_vsock) 
skipping: [dev-master0] => (item=vhost_net) 

TASK [container-engine/kata-containers : kata-containers | Persist vhost kernel modules] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/gvisor : gVisor | Download runsc binary] ****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/gvisor : gVisor | Download containerd-shim-runsc-v1 binary] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/gvisor : gVisor | Copy binaries] ************************
skipping: [dev-worker0] => (item=runsc) 
skipping: [dev-worker0] => (item=containerd-shim-runsc-v1) 
skipping: [dev-master0] => (item=runsc) 
skipping: [dev-master0] => (item=containerd-shim-runsc-v1) 

TASK [container-engine/crun : crun | Download crun binary] *********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/crun : Copy crun binary from download dir] **************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/youki : youki | Download youki] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/youki : youki | Copy youki binary from download dir] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : check if fedora coreos] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : set is_ostree] **********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : get ostree version] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : gather os specific variables] *******************
skipping: [dev-worker0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/cri-o/vars/../vars/ubuntu.yml) 
skipping: [dev-master0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/cri-o/vars/../vars/ubuntu.yml) 

TASK [container-engine/cri-o : Add Debian Backports apt repo] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Set libseccomp2 pin priority to apt_preferences on Debian buster] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : CRI-O kubic repo name for debian os family] *****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Add CRI-O kubic apt repo key] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Add CRI-O kubic apt repo] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Add CRI-O kubic cri-o apt repo] *****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Check that amzn2-extras.repo exists] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Find docker repo in amzn2-extras.repo file] *****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Remove docker repository] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Add container-selinux yum repo] *****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Add CRI-O kubic yum repo] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Add CRI-O kubic yum repo] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Add CRI-O kubic yum repo] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Add CRI-O kubic yum repo] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Enable modular repos for CRI-O] *****************
skipping: [dev-worker0] => (item={'repo': 'fedora-updates-modular', 'section': 'updates-modular'}) 
skipping: [dev-worker0] => (item={'repo': 'fedora-modular', 'section': 'fedora-modular'}) 
skipping: [dev-master0] => (item={'repo': 'fedora-updates-modular', 'section': 'updates-modular'}) 
skipping: [dev-master0] => (item={'repo': 'fedora-modular', 'section': 'fedora-modular'}) 

TASK [container-engine/cri-o : Enable CRI-O ex module] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Enable CRI-O module] ****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [include_role : container-engine/crictl] **********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Build a list of crio runtimes with Katacontainers runtimes] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Build a list of crio runtimes with crun runtime] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Build a list of crio runtimes with youki runtime] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Make sure needed folders exist in the system] ***
skipping: [dev-worker0] => (item=/etc/crio) 
skipping: [dev-worker0] => (item=/etc/containers) 
skipping: [dev-worker0] => (item=/etc/systemd/system/crio.service.d) 
skipping: [dev-master0] => (item=/etc/crio) 
skipping: [dev-master0] => (item=/etc/containers) 
skipping: [dev-master0] => (item=/etc/systemd/system/crio.service.d) 

TASK [container-engine/cri-o : Install cri-o config] ***************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Install config.json] ****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Add skopeo pkg to install] **********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Add libseccomp2 package from Debian Backports to install] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Install cri-o packages] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Check if already installed] *********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Install cri-o packages with ostree] *************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Reboot immediately for updated ostree] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Remove example CNI configs] *********************
skipping: [dev-worker0] => (item=100-crio-bridge.conf) 
skipping: [dev-worker0] => (item=200-loopback.conf) 
skipping: [dev-master0] => (item=100-crio-bridge.conf) 
skipping: [dev-master0] => (item=200-loopback.conf) 

TASK [container-engine/cri-o : Copy mounts.conf] *******************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Create directory for oci hooks] *****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Set metacopy mount options correctly] ***********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Create directory registries configs] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Write registries configs] ***********************

TASK [container-engine/cri-o : Configure unqualified registry settings] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Write cri-o proxy drop-in] **********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Configure the uid/gid space for user namespaces] ***
skipping: [dev-worker0] => (item=/etc/subuid) 
skipping: [dev-worker0] => (item=/etc/subgid) 
skipping: [dev-master0] => (item=/etc/subuid) 
skipping: [dev-master0] => (item=/etc/subgid) 

TASK [container-engine/cri-o : Ensure crio service is started and enabled] *****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Trigger service restart only when needed] *******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-o : Verify that crio is running] ********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [container-engine/containerd-common : containerd-common | set is_ostree] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/containerd-common : containerd-common | gather os specific variables] ***
ok: [dev-worker0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml)
ok: [dev-master0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml)

TASK [container-engine/runc : runc | set is_ostree] ****************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/runc : runc | Uninstall runc package managed by package manager] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/runc : runc | Download runc binary] *********************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/runc/tasks/../../../download/tasks/download_file.yml for dev-worker0, dev-master0

TASK [container-engine/runc : download_file | Starting download of file] *******
ok: [dev-worker0] => {
    "msg": "https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64"
}
ok: [dev-master0] => {
    "msg": "https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64"
}

TASK [container-engine/runc : download_file | Set pathname of cached file] *****
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/runc : download_file | Create dest directory on node] ***
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/runc : download_file | Create local cache directory] ****
skipping: [dev-worker0]

TASK [container-engine/runc : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-worker0]

TASK [container-engine/runc : download_file | Validate mirrors] ****************
ok: [dev-worker0] => (item=None)
ok: [dev-master0] => (item=None)
ok: [dev-worker0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [container-engine/runc : download_file | Get the list of working mirrors] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/runc : download_file | Download item] *******************
changed: [dev-master0]
changed: [dev-worker0]

TASK [container-engine/runc : download_file | Copy file back to ansible host file cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/runc : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/runc : download_file | Set mode and owner] **************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/runc : download_file | Extract file archives] ***********
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-worker0, dev-master0

TASK [container-engine/runc : extract_file | Unpacking archive] ****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/runc : Copy runc binary from download dir] **************
changed: [dev-master0]
changed: [dev-worker0]

TASK [container-engine/runc : runc | Remove orphaned binary] *******************
ok: [dev-master0]
ok: [dev-worker0]

TASK [container-engine/crictl : install crictĺ] ********************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/crictl/tasks/crictl.yml for dev-worker0, dev-master0

TASK [container-engine/crictl : crictl | Download crictl] **********************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/crictl/tasks/../../../download/tasks/download_file.yml for dev-worker0, dev-master0

TASK [container-engine/crictl : download_file | Starting download of file] *****
ok: [dev-worker0] => {
    "msg": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz"
}
ok: [dev-master0] => {
    "msg": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz"
}

TASK [container-engine/crictl : download_file | Set pathname of cached file] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/crictl : download_file | Create dest directory on node] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/crictl : download_file | Create local cache directory] ***
skipping: [dev-worker0]

TASK [container-engine/crictl : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-worker0]

TASK [container-engine/crictl : download_file | Validate mirrors] **************
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dev-worker0] => (item=None)
ok: [dev-worker0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [container-engine/crictl : download_file | Get the list of working mirrors] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/crictl : download_file | Download item] *****************
changed: [dev-master0]
changed: [dev-worker0]

TASK [container-engine/crictl : download_file | Copy file back to ansible host file cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/crictl : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/crictl : download_file | Set mode and owner] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/crictl : download_file | Extract file archives] *********
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-worker0, dev-master0

TASK [container-engine/crictl : extract_file | Unpacking archive] **************
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/crictl : Install crictl config] *************************
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/crictl : Copy crictl binary from download dir] **********
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/crictl : Set fact crictl_installed] *********************
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/nerdctl/tasks/../../../download/tasks/download_file.yml for dev-worker0, dev-master0

TASK [container-engine/nerdctl : download_file | Starting download of file] ****
ok: [dev-worker0] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz"
}
ok: [dev-master0] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz"
}

TASK [container-engine/nerdctl : download_file | Set pathname of cached file] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/nerdctl : download_file | Create dest directory on node] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/nerdctl : download_file | Create local cache directory] ***
skipping: [dev-worker0]

TASK [container-engine/nerdctl : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-worker0]

TASK [container-engine/nerdctl : download_file | Validate mirrors] *************
ok: [dev-worker0] => (item=None)
ok: [dev-worker0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [container-engine/nerdctl : download_file | Get the list of working mirrors] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/nerdctl : download_file | Download item] ****************
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/nerdctl : download_file | Copy file back to ansible host file cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : download_file | Set mode and owner] ***********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : download_file | Extract file archives] ********
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-worker0, dev-master0

TASK [container-engine/nerdctl : extract_file | Unpacking archive] *************
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/containerd : Fail containerd setup if distribution is not supported] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd : containerd | Remove any package manager controlled containerd package] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/containerd : containerd | Remove containerd repository] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd : containerd | Remove containerd repository] ***
ok: [dev-worker0] => (item=deb https://download.docker.com/linux/ubuntu focal stable
)
ok: [dev-master0] => (item=deb https://download.docker.com/linux/ubuntu focal stable
)

TASK [container-engine/containerd : containerd | Download containerd] **********
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/containerd/tasks/../../../download/tasks/download_file.yml for dev-worker0, dev-master0

TASK [container-engine/containerd : download_file | Starting download of file] ***
ok: [dev-worker0] => {
    "msg": "https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz"
}
ok: [dev-master0] => {
    "msg": "https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz"
}

TASK [container-engine/containerd : download_file | Set pathname of cached file] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/containerd : download_file | Create dest directory on node] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [container-engine/containerd : download_file | Create local cache directory] ***
skipping: [dev-worker0]

TASK [container-engine/containerd : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-worker0]

TASK [container-engine/containerd : download_file | Validate mirrors] **********
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dev-worker0] => (item=None)
ok: [dev-worker0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [container-engine/containerd : download_file | Get the list of working mirrors] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/containerd : download_file | Download item] *************
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/containerd : download_file | Copy file back to ansible host file cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd : download_file | Set mode and owner] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd : download_file | Extract file archives] *****
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-worker0, dev-master0

TASK [container-engine/containerd : extract_file | Unpacking archive] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd : containerd | Unpack containerd archive] ****
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/containerd : containerd | Remove orphaned binary] *******
ok: [dev-worker0] => (item=containerd)
ok: [dev-master0] => (item=containerd)
ok: [dev-worker0] => (item=containerd-shim)
ok: [dev-master0] => (item=containerd-shim)
ok: [dev-worker0] => (item=containerd-shim-runc-v1)
ok: [dev-master0] => (item=containerd-shim-runc-v1)
ok: [dev-worker0] => (item=containerd-shim-runc-v2)
ok: [dev-master0] => (item=containerd-shim-runc-v2)
ok: [dev-worker0] => (item=ctr)
ok: [dev-master0] => (item=ctr)

TASK [container-engine/containerd : containerd | Generate systemd service for containerd] ***
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/containerd : containerd | Ensure containerd directories exist] ***
changed: [dev-worker0] => (item=/etc/systemd/system/containerd.service.d)
changed: [dev-master0] => (item=/etc/systemd/system/containerd.service.d)
changed: [dev-worker0] => (item=/etc/containerd)
changed: [dev-master0] => (item=/etc/containerd)
changed: [dev-worker0] => (item=/var/lib/containerd)
changed: [dev-master0] => (item=/var/lib/containerd)
changed: [dev-worker0] => (item=/run/containerd)
changed: [dev-master0] => (item=/run/containerd)

TASK [container-engine/containerd : containerd | Write containerd proxy drop-in] ***
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/containerd : containerd | Copy containerd config file] ***
changed: [dev-master0]
changed: [dev-worker0]

TASK [container-engine/containerd : containerd | Flush handlers] ***************

RUNNING HANDLER [container-engine/crictl : Get crictl completion] **************
ok: [dev-master0]
ok: [dev-worker0]

RUNNING HANDLER [container-engine/crictl : Install crictl completion] **********
changed: [dev-worker0]
changed: [dev-master0]

RUNNING HANDLER [container-engine/nerdctl : Get nerdctl completion] ************
ok: [dev-master0]
ok: [dev-worker0]

RUNNING HANDLER [container-engine/nerdctl : Install nerdctl completion] ********
changed: [dev-worker0]
changed: [dev-master0]

RUNNING HANDLER [container-engine/containerd : restart containerd] *************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/containerd : containerd | Ensure containerd is started and enabled] ***
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/docker-storage : docker-storage-setup | install git and make] ***
skipping: [dev-worker0] => (item=git) 
skipping: [dev-worker0] => (item=make) 
skipping: [dev-master0] => (item=git) 
skipping: [dev-master0] => (item=make) 

TASK [container-engine/docker-storage : docker-storage-setup | docker-storage-setup sysconfig template] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker-storage : docker-storage-override-directory | docker service storage-setup override dir] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker-storage : docker-storage-override | docker service storage-setup override file] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker-storage : docker-storage-setup | install lvm2] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker-storage : docker-storage-setup | install and run container-storage-setup] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : check if fedora coreos] ************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : set is_ostree] *********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : gather os specific variables] ******************
skipping: [dev-worker0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dev-master0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 

TASK [container-engine/docker : Warn about Docker version on SUSE] *************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : include_tasks] *********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Remove legacy docker repo file] ****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Ensure old versions of Docker are not installed. | Debian] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Ensure podman not installed. | RedHat] *********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Ensure old versions of Docker are not installed. | RedHat] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : ensure docker-ce repository public key is installed] ***
skipping: [dev-worker0] => (item=) 
skipping: [dev-master0] => (item=) 

TASK [container-engine/docker : ensure docker-ce repository is enabled] ********
skipping: [dev-worker0] => (item=) 
skipping: [dev-master0] => (item=) 

TASK [container-engine/docker : Configure docker repository on Fedora] *********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Configure docker repository on RedHat/CentOS/Oracle/AlmaLinux Linux] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Remove dpkg hold] ******************************
skipping: [dev-worker0] => (item=containerd.io) 
skipping: [dev-worker0] => (item=docker-ce) 
skipping: [dev-worker0] => (item=docker-ce-cli) 
skipping: [dev-master0] => (item=containerd.io) 
skipping: [dev-master0] => (item=docker-ce) 
skipping: [dev-master0] => (item=docker-ce-cli) 

TASK [container-engine/docker : ensure docker packages are installed] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Tell Debian hosts not to change the docker version with apt upgrade] ***
skipping: [dev-worker0] => (item=containerd.io) 
skipping: [dev-worker0] => (item=docker-ce) 
skipping: [dev-worker0] => (item=docker-ce-cli) 
skipping: [dev-master0] => (item=containerd.io) 
skipping: [dev-master0] => (item=docker-ce) 
skipping: [dev-master0] => (item=docker-ce-cli) 

TASK [container-engine/docker : ensure service is started if docker packages are already present] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : flush handlers so we can wait for docker to come up] ***

TASK [container-engine/docker : include_tasks] *********************************

TASK [container-engine/docker : Create docker service systemd directory if it doesn't exist] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Write docker proxy drop-in] ********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : get systemd version] ***************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Write docker.service systemd file] *************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Write docker options systemd drop-in] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Write docker dns systemd drop-in] **************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Copy docker orphan clean up script to the node] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Write docker orphan clean up systemd drop-in] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Flush handlers] ********************************

TASK [container-engine/docker : ensure docker service is started and enabled] ***
skipping: [dev-worker0] => (item=docker) 
skipping: [dev-master0] => (item=docker) 

TASK [container-engine/docker-storage : docker-storage-setup | install git and make] ***
skipping: [dev-worker0] => (item=git) 
skipping: [dev-worker0] => (item=make) 
skipping: [dev-master0] => (item=git) 
skipping: [dev-master0] => (item=make) 

TASK [container-engine/docker-storage : docker-storage-setup | docker-storage-setup sysconfig template] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker-storage : docker-storage-override-directory | docker service storage-setup override dir] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker-storage : docker-storage-override | docker service storage-setup override file] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker-storage : docker-storage-setup | install lvm2] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker-storage : docker-storage-setup | install and run container-storage-setup] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : check if fedora coreos] ************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : set is_ostree] *********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : gather os specific variables] ******************
skipping: [dev-worker0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 
skipping: [dev-master0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml) 

TASK [container-engine/docker : Warn about Docker version on SUSE] *************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : include_tasks] *********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Remove legacy docker repo file] ****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Ensure old versions of Docker are not installed. | Debian] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Ensure podman not installed. | RedHat] *********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Ensure old versions of Docker are not installed. | RedHat] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : ensure docker-ce repository public key is installed] ***
skipping: [dev-worker0] => (item=) 
skipping: [dev-master0] => (item=) 

TASK [container-engine/docker : ensure docker-ce repository is enabled] ********
skipping: [dev-worker0] => (item=) 
skipping: [dev-master0] => (item=) 

TASK [container-engine/docker : Configure docker repository on Fedora] *********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Configure docker repository on RedHat/CentOS/Oracle/AlmaLinux Linux] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Remove dpkg hold] ******************************
skipping: [dev-worker0] => (item=containerd.io) 
skipping: [dev-worker0] => (item=docker-ce) 
skipping: [dev-worker0] => (item=docker-ce-cli) 
skipping: [dev-master0] => (item=containerd.io) 
skipping: [dev-master0] => (item=docker-ce) 
skipping: [dev-master0] => (item=docker-ce-cli) 

TASK [container-engine/docker : ensure docker packages are installed] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Tell Debian hosts not to change the docker version with apt upgrade] ***
skipping: [dev-worker0] => (item=containerd.io) 
skipping: [dev-worker0] => (item=docker-ce) 
skipping: [dev-worker0] => (item=docker-ce-cli) 
skipping: [dev-master0] => (item=containerd.io) 
skipping: [dev-master0] => (item=docker-ce) 
skipping: [dev-master0] => (item=docker-ce-cli) 

TASK [container-engine/docker : ensure service is started if docker packages are already present] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : flush handlers so we can wait for docker to come up] ***

TASK [container-engine/docker : include_tasks] *********************************

TASK [container-engine/docker : Create docker service systemd directory if it doesn't exist] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Write docker proxy drop-in] ********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : get systemd version] ***************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Write docker.service systemd file] *************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Write docker options systemd drop-in] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Write docker dns systemd drop-in] **************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Copy docker orphan clean up script to the node] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Write docker orphan clean up systemd drop-in] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/docker : Flush handlers] ********************************

TASK [container-engine/docker : ensure docker service is started and enabled] ***
skipping: [dev-worker0] => (item=docker) 
skipping: [dev-master0] => (item=docker) 

TASK [container-engine/cri-dockerd : runc | Download cri-dockerd binary] *******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-dockerd : Copy cri-dockerd binary from download dir] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/cri-dockerd : Generate cri-dockerd systemd unit files] ***
skipping: [dev-worker0] => (item=cri-dockerd.service) 
skipping: [dev-worker0] => (item=cri-dockerd.socket) 
skipping: [dev-master0] => (item=cri-dockerd.service) 
skipping: [dev-master0] => (item=cri-dockerd.socket) 

TASK [download : prep_download | Set a few facts] ******************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [dev-worker0]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [dev-worker0]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Register docker images info] ******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : prep_download | Create staging directory on remote node] ******
changed: [dev-worker0]
changed: [dev-master0]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [dev-worker0]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/container-engine/nerdctl/tasks/../../../download/tasks/download_file.yml for dev-worker0, dev-master0

TASK [container-engine/nerdctl : download_file | Starting download of file] ****
ok: [dev-worker0] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz"
}
ok: [dev-master0] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz"
}

TASK [container-engine/nerdctl : download_file | Set pathname of cached file] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/nerdctl : download_file | Create dest directory on node] ***
changed: [dev-worker0]
changed: [dev-master0]

TASK [container-engine/nerdctl : download_file | Create local cache directory] ***
skipping: [dev-worker0]

TASK [container-engine/nerdctl : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-worker0]

TASK [container-engine/nerdctl : download_file | Validate mirrors] *************
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dev-worker0] => (item=None)
ok: [dev-worker0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [container-engine/nerdctl : download_file | Get the list of working mirrors] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/nerdctl : download_file | Download item] ****************
ok: [dev-master0]
ok: [dev-worker0]

TASK [container-engine/nerdctl : download_file | Copy file back to ansible host file cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : download_file | Set mode and owner] ***********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : download_file | Extract file archives] ********
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-worker0, dev-master0

TASK [container-engine/nerdctl : extract_file | Unpacking archive] *************
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
ok: [dev-master0]
ok: [dev-worker0]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [dev-worker0]
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/prep_kubeadm_images.yml for dev-master0

TASK [download : prep_kubeadm_images | Check kubeadm version matches kubernetes version] ***
skipping: [dev-master0]

TASK [download : prep_kubeadm_images | Download kubeadm binary] ****************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_file.yml for dev-master0

TASK [download : download_file | Starting download of file] ********************
ok: [dev-master0] => {
    "msg": "https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [dev-master0]

TASK [download : download_file | Create dest directory on node] ****************
ok: [dev-master0]

TASK [download : download_file | Create local cache directory] *****************
skipping: [dev-master0]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-master0]

TASK [download : download_file | Validate mirrors] *****************************
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [dev-master0]

TASK [download : download_file | Download item] ********************************
changed: [dev-master0]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [dev-master0]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-master0]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [dev-master0]

TASK [download : download_file | Extract file archives] ************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-master0

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [dev-master0]

TASK [download : prep_kubeadm_images | Create kubeadm config] ******************
changed: [dev-master0]

TASK [download : prep_kubeadm_images | Copy kubeadm binary from download dir to system path] ***
changed: [dev-master0]

TASK [download : prep_kubeadm_images | Set kubeadm binary permissions] *********
ok: [dev-master0]

TASK [download : prep_kubeadm_images | Generate list of required images] *******
ok: [dev-master0]

TASK [download : prep_kubeadm_images | Parse list of images] *******************
ok: [dev-master0] => (item=k8s.gcr.io/kube-apiserver:v1.23.7)
ok: [dev-master0] => (item=k8s.gcr.io/kube-controller-manager:v1.23.7)
ok: [dev-master0] => (item=k8s.gcr.io/kube-scheduler:v1.23.7)
ok: [dev-master0] => (item=k8s.gcr.io/kube-proxy:v1.23.7)

TASK [download : prep_kubeadm_images | Convert list of images to dict for later use] ***
ok: [dev-master0]

TASK [download : download | Download files / images] ***************************
skipping: [dev-worker0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_file.yml for dev-worker0, dev-master0 => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_file.yml for dev-worker0, dev-master0 => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_file.yml for dev-worker0, dev-master0 => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_file.yml for dev-worker0, dev-master0 => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_file.yml for dev-worker0, dev-master0 => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_file.yml for dev-worker0, dev-master0 => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_file.yml for dev-worker0, dev-master0 => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_file.yml for dev-worker0, dev-master0 => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-worker0, dev-master0 => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-worker0, dev-master0 => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-worker0, dev-master0 => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-worker0, dev-master0 => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-worker0, dev-master0 => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-worker0 => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-worker0, dev-master0 => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-worker0 => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-worker0 => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-worker0, dev-master0 => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-apiserver', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-worker0, dev-master0 => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-controller-manager', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-worker0, dev-master0 => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-scheduler', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-worker0, dev-master0 => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-proxy', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_file.yml for dev-master0 => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_file.yml for dev-master0 => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_file.yml for dev-master0 => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-master0 => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-master0 => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}})
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/download_container.yml for dev-master0 => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}})

TASK [download : download_file | Starting download of file] ********************
ok: [dev-worker0] => {
    "msg": "https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz"
}
ok: [dev-master0] => {
    "msg": "https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Create dest directory on node] ****************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Create local cache directory] *****************
skipping: [dev-worker0]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-worker0]

TASK [download : download_file | Validate mirrors] *****************************
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dev-worker0] => (item=None)
ok: [dev-worker0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Download item] ********************************
changed: [dev-worker0]
changed: [dev-master0]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Extract file archives] ************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-worker0, dev-master0

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Starting download of file] ********************
ok: [dev-worker0] => {
    "msg": "https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm"
}
ok: [dev-master0] => {
    "msg": "https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Create dest directory on node] ****************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Create local cache directory] *****************
skipping: [dev-worker0]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-worker0]

TASK [download : download_file | Validate mirrors] *****************************
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dev-worker0] => (item=None)
ok: [dev-worker0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Download item] ********************************
ok: [dev-master0]
changed: [dev-worker0]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Extract file archives] ************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-worker0, dev-master0

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Starting download of file] ********************
ok: [dev-worker0] => {
    "msg": "https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet"
}
ok: [dev-master0] => {
    "msg": "https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Create dest directory on node] ****************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Create local cache directory] *****************
skipping: [dev-worker0]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-worker0]

TASK [download : download_file | Validate mirrors] *****************************
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dev-worker0] => (item=None)
ok: [dev-worker0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Download item] ********************************
changed: [dev-master0]
changed: [dev-worker0]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Extract file archives] ************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-worker0, dev-master0

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Starting download of file] ********************
ok: [dev-worker0] => {
    "msg": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz"
}
ok: [dev-master0] => {
    "msg": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Create dest directory on node] ****************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Create local cache directory] *****************
skipping: [dev-worker0]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-worker0]

TASK [download : download_file | Validate mirrors] *****************************
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dev-worker0] => (item=None)
ok: [dev-worker0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Download item] ********************************
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Extract file archives] ************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-worker0, dev-master0

TASK [download : extract_file | Unpacking archive] *****************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Starting download of file] ********************
ok: [dev-worker0] => {
    "msg": "https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64"
}
ok: [dev-master0] => {
    "msg": "https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Create dest directory on node] ****************
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : download_file | Create local cache directory] *****************
skipping: [dev-worker0]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-worker0]

TASK [download : download_file | Validate mirrors] *****************************
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dev-worker0] => (item=None)
ok: [dev-worker0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Download item] ********************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Extract file archives] ************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-worker0, dev-master0

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Starting download of file] ********************
ok: [dev-worker0] => {
    "msg": "https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz"
}
ok: [dev-master0] => {
    "msg": "https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Create dest directory on node] ****************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Create local cache directory] *****************
skipping: [dev-worker0]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-worker0]

TASK [download : download_file | Validate mirrors] *****************************
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dev-worker0] => (item=None)
ok: [dev-worker0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Download item] ********************************
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Extract file archives] ************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-worker0, dev-master0

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Starting download of file] ********************
ok: [dev-worker0] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz"
}
ok: [dev-master0] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Create dest directory on node] ****************
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : download_file | Create local cache directory] *****************
skipping: [dev-worker0]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-worker0]

TASK [download : download_file | Validate mirrors] *****************************
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]
ok: [dev-worker0] => (item=None)
ok: [dev-worker0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Download item] ********************************
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Extract file archives] ************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-worker0, dev-master0

TASK [download : extract_file | Unpacking archive] *****************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Starting download of file] ********************
ok: [dev-worker0] => {
    "msg": "https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64"
}
ok: [dev-master0] => {
    "msg": "https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Create dest directory on node] ****************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Create local cache directory] *****************
skipping: [dev-worker0]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-worker0]

TASK [download : download_file | Validate mirrors] *****************************
ok: [dev-master0] => (item=None)
ok: [dev-worker0] => (item=None)
FAILED - RETRYING: [dev-worker0]: download_file | Validate mirrors (4 retries left).
FAILED - RETRYING: [dev-master0]: download_file | Validate mirrors (4 retries left).
FAILED - RETRYING: [dev-master0]: download_file | Validate mirrors (3 retries left).
FAILED - RETRYING: [dev-worker0]: download_file | Validate mirrors (3 retries left).
FAILED - RETRYING: [dev-master0]: download_file | Validate mirrors (2 retries left).
FAILED - RETRYING: [dev-worker0]: download_file | Validate mirrors (2 retries left).
FAILED - RETRYING: [dev-master0]: download_file | Validate mirrors (1 retries left).
FAILED - RETRYING: [dev-worker0]: download_file | Validate mirrors (1 retries left).
failed: [dev-master0] (item=None) => {"attempts": 4, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
fatal: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]: FAILED! => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
...ignoring
failed: [dev-worker0] (item=None) => {"attempts": 4, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
fatal: [dev-worker0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]: FAILED! => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
...ignoring

TASK [download : download_file | Get the list of working mirrors] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Download item] ********************************
changed: [dev-worker0]
changed: [dev-master0]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_file | Extract file archives] ************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-worker0, dev-master0

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : set default values for flag variables] ************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-worker0] => {
    "msg": "quay.io/calico/node"
}
ok: [dev-master0] => {
    "msg": "quay.io/calico/node"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-worker0, dev-master0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : debug] ********************************************************
ok: [dev-worker0] => {
    "msg": "Pull quay.io/calico/node:v3.22.3 required is: True"
}
ok: [dev-master0] => {
    "msg": "Pull quay.io/calico/node:v3.22.3 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Download image if required] **************
changed: [dev-worker0]
changed: [dev-master0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-worker0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set default values for flag variables] ************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-worker0] => {
    "msg": "quay.io/calico/cni"
}
ok: [dev-master0] => {
    "msg": "quay.io/calico/cni"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-worker0, dev-master0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : debug] ********************************************************
ok: [dev-worker0] => {
    "msg": "Pull quay.io/calico/cni:v3.22.3 required is: True"
}
ok: [dev-master0] => {
    "msg": "Pull quay.io/calico/cni:v3.22.3 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Download image if required] **************
changed: [dev-worker0]
changed: [dev-master0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-worker0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : set default values for flag variables] ************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-worker0] => {
    "msg": "quay.io/calico/pod2daemon-flexvol"
}
ok: [dev-master0] => {
    "msg": "quay.io/calico/pod2daemon-flexvol"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-worker0, dev-master0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : debug] ********************************************************
ok: [dev-worker0] => {
    "msg": "Pull quay.io/calico/pod2daemon-flexvol:v3.22.3 required is: True"
}
ok: [dev-master0] => {
    "msg": "Pull quay.io/calico/pod2daemon-flexvol:v3.22.3 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Download image if required] **************
changed: [dev-worker0]
changed: [dev-master0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-worker0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : set default values for flag variables] ************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-worker0] => {
    "msg": "quay.io/calico/kube-controllers"
}
ok: [dev-master0] => {
    "msg": "quay.io/calico/kube-controllers"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-worker0, dev-master0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : debug] ********************************************************
ok: [dev-worker0] => {
    "msg": "Pull quay.io/calico/kube-controllers:v3.22.3 required is: True"
}
ok: [dev-master0] => {
    "msg": "Pull quay.io/calico/kube-controllers:v3.22.3 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Download image if required] **************
changed: [dev-worker0]
changed: [dev-master0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-worker0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : set default values for flag variables] ************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-worker0] => {
    "msg": "k8s.gcr.io/pause"
}
ok: [dev-master0] => {
    "msg": "k8s.gcr.io/pause"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-worker0, dev-master0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : debug] ********************************************************
ok: [dev-worker0] => {
    "msg": "Pull k8s.gcr.io/pause:3.3 required is: True"
}
ok: [dev-master0] => {
    "msg": "Pull k8s.gcr.io/pause:3.3 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Download image if required] **************
changed: [dev-worker0]
changed: [dev-master0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-worker0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : set default values for flag variables] ************************
ok: [dev-worker0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-worker0] => {
    "msg": "docker.io/library/nginx"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-worker0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-worker0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-worker0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-worker0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-worker0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-worker0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-worker0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-worker0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-worker0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-worker0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-worker0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-worker0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-worker0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-worker0]

TASK [download : debug] ********************************************************
ok: [dev-worker0] => {
    "msg": "Pull docker.io/library/nginx:1.21.4 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-worker0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-worker0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-worker0]

TASK [download : download_container | Download image if required] **************
changed: [dev-worker0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-worker0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-worker0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-worker0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-worker0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-worker0]

TASK [download : set default values for flag variables] ************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-worker0] => {
    "msg": "k8s.gcr.io/dns/k8s-dns-node-cache"
}
ok: [dev-master0] => {
    "msg": "k8s.gcr.io/dns/k8s-dns-node-cache"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-worker0, dev-master0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : debug] ********************************************************
ok: [dev-worker0] => {
    "msg": "Pull k8s.gcr.io/dns/k8s-dns-node-cache:1.21.1 required is: True"
}
ok: [dev-master0] => {
    "msg": "Pull k8s.gcr.io/dns/k8s-dns-node-cache:1.21.1 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Download image if required] **************
changed: [dev-master0]
changed: [dev-worker0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-worker0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set default values for flag variables] ************************
ok: [dev-worker0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-worker0] => {
    "msg": "k8s.gcr.io/sig-storage/local-volume-provisioner"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-worker0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-worker0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-worker0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-worker0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-worker0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-worker0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-worker0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-worker0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-worker0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-worker0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-worker0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-worker0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-worker0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-worker0]

TASK [download : debug] ********************************************************
ok: [dev-worker0] => {
    "msg": "Pull k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-worker0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-worker0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-worker0]

TASK [download : download_container | Download image if required] **************
changed: [dev-worker0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-worker0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-worker0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-worker0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-worker0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-worker0]

TASK [download : set default values for flag variables] ************************
ok: [dev-worker0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-worker0] => {
    "msg": "docker.io/rancher/local-path-provisioner"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-worker0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-worker0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-worker0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-worker0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-worker0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-worker0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-worker0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-worker0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-worker0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-worker0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-worker0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-worker0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-worker0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-worker0]

TASK [download : debug] ********************************************************
ok: [dev-worker0] => {
    "msg": "Pull docker.io/rancher/local-path-provisioner:v0.0.21 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-worker0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-worker0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-worker0]

TASK [download : download_container | Download image if required] **************
changed: [dev-worker0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-worker0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-worker0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-worker0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-worker0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-worker0]

TASK [download : set default values for flag variables] ************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-worker0] => {
    "msg": "k8s.gcr.io/kube-apiserver"
}
ok: [dev-master0] => {
    "msg": "k8s.gcr.io/kube-apiserver"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-worker0, dev-master0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : debug] ********************************************************
ok: [dev-worker0] => {
    "msg": "Pull k8s.gcr.io/kube-apiserver:v1.23.7 required is: True"
}
ok: [dev-master0] => {
    "msg": "Pull k8s.gcr.io/kube-apiserver:v1.23.7 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Download image if required] **************
changed: [dev-worker0]
changed: [dev-master0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-worker0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set default values for flag variables] ************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-worker0] => {
    "msg": "k8s.gcr.io/kube-controller-manager"
}
ok: [dev-master0] => {
    "msg": "k8s.gcr.io/kube-controller-manager"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-worker0, dev-master0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : debug] ********************************************************
ok: [dev-worker0] => {
    "msg": "Pull k8s.gcr.io/kube-controller-manager:v1.23.7 required is: True"
}
ok: [dev-master0] => {
    "msg": "Pull k8s.gcr.io/kube-controller-manager:v1.23.7 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Download image if required] **************
changed: [dev-worker0]
changed: [dev-master0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-worker0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set default values for flag variables] ************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-worker0] => {
    "msg": "k8s.gcr.io/kube-scheduler"
}
ok: [dev-master0] => {
    "msg": "k8s.gcr.io/kube-scheduler"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-worker0, dev-master0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : debug] ********************************************************
ok: [dev-worker0] => {
    "msg": "Pull k8s.gcr.io/kube-scheduler:v1.23.7 required is: True"
}
ok: [dev-master0] => {
    "msg": "Pull k8s.gcr.io/kube-scheduler:v1.23.7 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Download image if required] **************
changed: [dev-master0]
changed: [dev-worker0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-worker0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set default values for flag variables] ************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-worker0] => {
    "msg": "k8s.gcr.io/kube-proxy"
}
ok: [dev-master0] => {
    "msg": "k8s.gcr.io/kube-proxy"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-worker0, dev-master0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : debug] ********************************************************
ok: [dev-worker0] => {
    "msg": "Pull k8s.gcr.io/kube-proxy:v1.23.7 required is: True"
}
ok: [dev-master0] => {
    "msg": "Pull k8s.gcr.io/kube-proxy:v1.23.7 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Download image if required] **************
changed: [dev-worker0]
changed: [dev-master0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-worker0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-worker0]
ok: [dev-master0]

TASK [download : download_file | Starting download of file] ********************
ok: [dev-master0] => {
    "msg": "https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [dev-master0]

TASK [download : download_file | Create dest directory on node] ****************
ok: [dev-master0]

TASK [download : download_file | Create local cache directory] *****************
skipping: [dev-master0]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-master0]

TASK [download : download_file | Validate mirrors] *****************************
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [dev-master0]

TASK [download : download_file | Download item] ********************************
changed: [dev-master0]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [dev-master0]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-master0]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [dev-master0]

TASK [download : download_file | Extract file archives] ************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-master0

TASK [download : extract_file | Unpacking archive] *****************************
changed: [dev-master0]

TASK [download : download_file | Starting download of file] ********************
ok: [dev-master0] => {
    "msg": "https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [dev-master0]

TASK [download : download_file | Create dest directory on node] ****************
ok: [dev-master0]

TASK [download : download_file | Create local cache directory] *****************
skipping: [dev-master0]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-master0]

TASK [download : download_file | Validate mirrors] *****************************
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [dev-master0]

TASK [download : download_file | Download item] ********************************
changed: [dev-master0]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [dev-master0]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-master0]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [dev-master0]

TASK [download : download_file | Extract file archives] ************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-master0

TASK [download : extract_file | Unpacking archive] *****************************
skipping: [dev-master0]

TASK [download : download_file | Starting download of file] ********************
ok: [dev-master0] => {
    "msg": "https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz"
}

TASK [download : download_file | Set pathname of cached file] ******************
ok: [dev-master0]

TASK [download : download_file | Create dest directory on node] ****************
changed: [dev-master0]

TASK [download : download_file | Create local cache directory] *****************
skipping: [dev-master0]

TASK [download : download_file | Create cache directory on download_delegate host] ***
skipping: [dev-master0]

TASK [download : download_file | Validate mirrors] *****************************
ok: [dev-master0] => (item=None)
ok: [dev-master0 -> {{ download_delegate if download_force_cache else inventory_hostname }}]

TASK [download : download_file | Get the list of working mirrors] **************
ok: [dev-master0]

TASK [download : download_file | Download item] ********************************
changed: [dev-master0]

TASK [download : download_file | Copy file back to ansible host file cache] ****
skipping: [dev-master0]

TASK [download : download_file | Copy file from cache to nodes, if it is available] ***
skipping: [dev-master0]

TASK [download : download_file | Set mode and owner] ***************************
skipping: [dev-master0]

TASK [download : download_file | Extract file archives] ************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/extract_file.yml for dev-master0

TASK [download : extract_file | Unpacking archive] *****************************
changed: [dev-master0]

TASK [download : set default values for flag variables] ************************
ok: [dev-master0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-master0] => {
    "msg": "k8s.gcr.io/coredns/coredns"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-master0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-master0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-master0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-master0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-master0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-master0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-master0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-master0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-master0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-master0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-master0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-master0]

TASK [download : debug] ********************************************************
ok: [dev-master0] => {
    "msg": "Pull k8s.gcr.io/coredns/coredns:v1.8.6 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-master0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-master0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-master0]

TASK [download : download_container | Download image if required] **************
changed: [dev-master0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-master0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-master0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-master0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-master0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-master0]

TASK [download : set default values for flag variables] ************************
ok: [dev-master0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-master0] => {
    "msg": "k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-master0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-master0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-master0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-master0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-master0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-master0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-master0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-master0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-master0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-master0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-master0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-master0]

TASK [download : debug] ********************************************************
ok: [dev-master0] => {
    "msg": "Pull k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64:1.8.5 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-master0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-master0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-master0]

TASK [download : download_container | Download image if required] **************
changed: [dev-master0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-master0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-master0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-master0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-master0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-master0]

TASK [download : set default values for flag variables] ************************
ok: [dev-master0]

TASK [download : set_container_facts | Display the name of the image being processed] ***
ok: [dev-master0] => {
    "msg": "k8s.gcr.io/metrics-server/metrics-server"
}

TASK [download : set_container_facts | Set if containers should be pulled by digest] ***
ok: [dev-master0]

TASK [download : set_container_facts | Define by what name to pull the image] ***
ok: [dev-master0]

TASK [download : set_container_facts | Define file name of image] **************
ok: [dev-master0]

TASK [download : set_container_facts | Define path of image] *******************
ok: [dev-master0]

TASK [download : Set image save/load command for docker] ***********************
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd] *******************
ok: [dev-master0]

TASK [download : Set image save/load command for crio] *************************
skipping: [dev-master0]

TASK [download : Set image save/load command for docker on localhost] **********
skipping: [dev-master0]

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [dev-master0]

TASK [download : Set image save/load command for crio on localhost] ************
skipping: [dev-master0]

TASK [download : download_container | Prepare container download] **************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/download/tasks/check_pull_required.yml for dev-master0

TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
ok: [dev-master0]

TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [dev-master0]

TASK [download : check_pull_required | Check that the local digest sha256 corresponds to the given image tag] ***
skipping: [dev-master0]

TASK [download : debug] ********************************************************
ok: [dev-master0] => {
    "msg": "Pull k8s.gcr.io/metrics-server/metrics-server:v0.5.2 required is: True"
}

TASK [download : download_container | Determine if image is in cache] **********
skipping: [dev-master0]

TASK [download : download_container | Set fact indicating if image is in cache] ***
skipping: [dev-master0]

TASK [download : Stop if image not in cache on ansible host when download_force_cache=true] ***
skipping: [dev-master0]

TASK [download : download_container | Download image if required] **************
changed: [dev-master0]

TASK [download : download_container | Save and compress image] *****************
skipping: [dev-master0]

TASK [download : download_container | Copy image to ansible host cache] ********
skipping: [dev-master0]

TASK [download : download_container | Upload image to node if it is cached] ****
skipping: [dev-master0]

TASK [download : download_container | Load image into the local container registry] ***
skipping: [dev-master0]

TASK [download : download_container | Remove container image from cache] *******
ok: [dev-master0]

PLAY [etcd] ********************************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [dev-master0]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [dev-master0]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [dev-master0]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [dev-master0]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [dev-master0]

TASK [download : prep_download | Register docker images info] ******************
skipping: [dev-master0]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [dev-master0]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [dev-master0]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
skipping: [dev-master0]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [dev-master0]

TASK [download : download | Download files / images] ***************************
skipping: [dev-master0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-master0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-apiserver', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-controller-manager', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-scheduler', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-proxy', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [dev-master0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [dev-master0] => (item=dev-worker0) 
skipping: [dev-master0] => (item=dev-master0) 
skipping: [dev-master0] => (item=dev-master0) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [dev-master0]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [dev-master0]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [dev-master0]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [dev-master0]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [dev-master0]

TASK [adduser : User | Create User Group] **************************************
changed: [dev-master0]

TASK [adduser : User | Create User] ********************************************
changed: [dev-master0]

TASK [adduser : User | Create User Group] **************************************
ok: [dev-master0]

TASK [adduser : User | Create User] ********************************************
ok: [dev-master0]

TASK [etcd : include_tasks] ****************************************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/check_certs.yml for dev-master0

TASK [etcd : Check_certs | Register certs that have already been generated on first etcd node] ***
ok: [dev-master0]

TASK [etcd : Check_certs | Set default value for 'sync_certs', 'gen_certs' and 'etcd_secret_changed' to false] ***
ok: [dev-master0]

TASK [etcd : Check certs | Register ca and etcd admin/member certs on etcd hosts] ***
ok: [dev-master0] => (item=ca.pem)
ok: [dev-master0] => (item=member-dev-master0.pem)
ok: [dev-master0] => (item=member-dev-master0-key.pem)
ok: [dev-master0] => (item=admin-dev-master0.pem)
ok: [dev-master0] => (item=admin-dev-master0-key.pem)

TASK [etcd : Check certs | Register ca and etcd node certs on kubernetes hosts] ***
ok: [dev-master0] => (item=ca.pem)
ok: [dev-master0] => (item=node-dev-master0.pem)
ok: [dev-master0] => (item=node-dev-master0-key.pem)

TASK [etcd : Check_certs | Set 'gen_certs' to true if expected certificates are not on the first etcd node] ***
ok: [dev-master0] => (item=/etc/ssl/etcd/ssl/ca.pem)
ok: [dev-master0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0.pem)
ok: [dev-master0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0-key.pem)
ok: [dev-master0] => (item=/etc/ssl/etcd/ssl/member-dev-master0.pem)
ok: [dev-master0] => (item=/etc/ssl/etcd/ssl/member-dev-master0-key.pem)
ok: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-master0.pem)
ok: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-master0-key.pem)
ok: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0.pem)
ok: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0-key.pem)

TASK [etcd : Check_certs | Set 'gen_master_certs' object to track whether member and admin certs exist on first etcd node] ***
ok: [dev-master0]

TASK [etcd : Check_certs | Set 'gen_node_certs' object to track whether node certs exist on first etcd node] ***
ok: [dev-master0]

TASK [etcd : Check_certs | Set 'etcd_member_requires_sync' to true if ca or member/admin cert and key don't exist on etcd member or checksum doesn't match] ***
ok: [dev-master0]

TASK [etcd : Check_certs | Set 'kubernetes_host_requires_sync' to true if ca or node cert and key don't exist on kubernetes host or checksum doesn't match] ***
skipping: [dev-master0]

TASK [etcd : Check_certs | Set 'sync_certs' to true] ***************************
ok: [dev-master0]

TASK [etcd : include_tasks] ****************************************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/gen_certs_script.yml for dev-master0

TASK [etcd : Gen_certs | create etcd cert dir] *********************************
changed: [dev-master0]

TASK [etcd : Gen_certs | create etcd script dir (on dev-master0)] **************
changed: [dev-master0]

TASK [etcd : Gen_certs | write openssl config] *********************************
changed: [dev-master0]

TASK [etcd : Gen_certs | copy certs generation script] *************************
changed: [dev-master0]

TASK [etcd : Gen_certs | run cert generation script] ***************************
changed: [dev-master0]

TASK [etcd : Gen_certs | Gather etcd member and admin certs from first etcd node] ***
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/ca.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/ca-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/member-dev-master0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/member-dev-master0-key.pem) 

TASK [etcd : Gen_certs | Write etcd member and admin certs to other etcd nodes] ***
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/ca.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/ca-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/member-dev-master0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/member-dev-master0-key.pem) 

TASK [etcd : Gen_certs | Gather node certs from first etcd node] ***************
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-master0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-master0-key.pem) 

TASK [etcd : Gen_certs | Write node certs to other etcd nodes] *****************
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-master0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-master0-key.pem) 

TASK [etcd : Gen_certs | Set cert names per node] ******************************
ok: [dev-master0]

TASK [etcd : Check_certs | Set 'sync_certs' to true on nodes] ******************
skipping: [dev-master0] => (item=ca.pem) 
skipping: [dev-master0] => (item=node-dev-master0.pem) 
skipping: [dev-master0] => (item=node-dev-master0-key.pem) 

TASK [etcd : Gen_certs | Gather node certs] ************************************
skipping: [dev-master0]

TASK [etcd : Gen_certs | Copy certs on nodes] **********************************
skipping: [dev-master0]

TASK [etcd : Gen_certs | check certificate permissions] ************************
changed: [dev-master0]

TASK [etcd : include_tasks] ****************************************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/upd_ca_trust.yml for dev-master0

TASK [etcd : Gen_certs | target ca-certificate store file] *********************
ok: [dev-master0]

TASK [etcd : Gen_certs | add CA to trusted CA dir] *****************************
changed: [dev-master0]

TASK [etcd : Gen_certs | update ca-certificates (Debian/Ubuntu/SUSE/Flatcar)] ***
changed: [dev-master0]

TASK [etcd : Gen_certs | update ca-certificates (RedHat)] **********************
skipping: [dev-master0]

TASK [etcd : Gen_certs | update ca-certificates (ClearLinux)] ******************
skipping: [dev-master0]

TASK [etcd : Gen_certs | Get etcd certificate serials] *************************
ok: [dev-master0]

TASK [etcd : Set etcd_client_cert_serial] **************************************
ok: [dev-master0]

TASK [etcd : include_tasks] ****************************************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/install_host.yml for dev-master0

TASK [etcd : Get currently-deployed etcd version] ******************************
fatal: [dev-master0]: FAILED! => {"changed": false, "cmd": "/usr/local/bin/etcd --version", "msg": "[Errno 2] No such file or directory: b'/usr/local/bin/etcd'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
...ignoring

TASK [etcd : Restart etcd if necessary] ****************************************
changed: [dev-master0]

TASK [etcd : Restart etcd-events if necessary] *********************************
skipping: [dev-master0]

TASK [etcd : install | Copy etcd and etcdctl binary from download dir] *********
changed: [dev-master0] => (item=etcd)
changed: [dev-master0] => (item=etcdctl)

TASK [etcd : include_tasks] ****************************************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/configure.yml for dev-master0

TASK [etcd : Configure | Check if etcd cluster is healthy] *********************
ok: [dev-master0]

TASK [etcd : Configure | Check if etcd-events cluster is healthy] **************
skipping: [dev-master0]

TASK [etcd : include_tasks] ****************************************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/refresh_config.yml for dev-master0

TASK [etcd : Refresh config | Create etcd config file] *************************
changed: [dev-master0]

TASK [etcd : Refresh config | Create etcd-events config file] ******************
skipping: [dev-master0]

TASK [etcd : Configure | Copy etcd.service systemd file] ***********************
changed: [dev-master0]

TASK [etcd : Configure | Copy etcd-events.service systemd file] ****************
skipping: [dev-master0]

TASK [etcd : Configure | reload systemd] ***************************************
ok: [dev-master0]

TASK [etcd : Configure | Ensure etcd is running] *******************************
changed: [dev-master0]

TASK [etcd : Configure | Ensure etcd-events is running] ************************
skipping: [dev-master0]

TASK [etcd : Configure | Wait for etcd cluster to be healthy] ******************
ok: [dev-master0]

TASK [etcd : Configure | Wait for etcd-events cluster to be healthy] ***********
skipping: [dev-master0]

TASK [etcd : Configure | Check if member is in etcd cluster] *******************
ok: [dev-master0]

TASK [etcd : Configure | Check if member is in etcd-events cluster] ************
skipping: [dev-master0]

TASK [etcd : Configure | Join member(s) to etcd cluster one at a time] *********
skipping: [dev-master0] => (item=dev-master0) 

TASK [etcd : Configure | Join member(s) to etcd-events cluster one at a time] ***
skipping: [dev-master0] => (item=dev-master0) 

TASK [etcd : include_tasks] ****************************************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/refresh_config.yml for dev-master0

TASK [etcd : Refresh config | Create etcd config file] *************************
changed: [dev-master0]

TASK [etcd : Refresh config | Create etcd-events config file] ******************
skipping: [dev-master0]

TASK [etcd : Restart etcd if certs changed] ************************************
skipping: [dev-master0]

TASK [etcd : Restart etcd-events if certs changed] *****************************
skipping: [dev-master0]

TASK [etcd : include_tasks] ****************************************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/refresh_config.yml for dev-master0

TASK [etcd : Refresh config | Create etcd config file] *************************
ok: [dev-master0]

TASK [etcd : Refresh config | Create etcd-events config file] ******************
skipping: [dev-master0]

RUNNING HANDLER [etcd : restart etcd] ******************************************
changed: [dev-master0]

RUNNING HANDLER [etcd : Backup etcd data] **************************************
changed: [dev-master0]

RUNNING HANDLER [etcd : Refresh Time Fact] *************************************
ok: [dev-master0]

RUNNING HANDLER [etcd : Set Backup Directory] **********************************
ok: [dev-master0]

RUNNING HANDLER [etcd : Create Backup Directory] *******************************
changed: [dev-master0]

RUNNING HANDLER [etcd : Stat etcd v2 data directory] ***************************
ok: [dev-master0]

RUNNING HANDLER [etcd : Backup etcd v2 data] ***********************************
changed: [dev-master0]

RUNNING HANDLER [etcd : Backup etcd v3 data] ***********************************
changed: [dev-master0]

RUNNING HANDLER [etcd : Remove old etcd backups] *******************************
skipping: [dev-master0]

RUNNING HANDLER [etcd : etcd | reload systemd] *********************************
ok: [dev-master0]

RUNNING HANDLER [etcd : reload etcd] *******************************************
changed: [dev-master0]

RUNNING HANDLER [etcd : wait for etcd up] **************************************
ok: [dev-master0]

RUNNING HANDLER [etcd : set etcd_secret_changed] *******************************
ok: [dev-master0]

PLAY [k8s_cluster] *************************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [dev-worker0]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [dev-worker0]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Register docker images info] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [dev-worker0]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download | Download files / images] ***************************
skipping: [dev-worker0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-worker0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-master0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-apiserver', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-controller-manager', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-scheduler', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-proxy', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-apiserver', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-controller-manager', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-scheduler', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-proxy', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [dev-worker0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [dev-master0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [dev-worker0] => (item=dev-worker0) 
skipping: [dev-worker0] => (item=dev-master0) 
skipping: [dev-worker0] => (item=dev-master0) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [dev-worker0]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [dev-worker0]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [adduser : User | Create User Group] **************************************
ok: [dev-master0]
changed: [dev-worker0]

TASK [adduser : User | Create User] ********************************************
changed: [dev-worker0]
ok: [dev-master0]

TASK [adduser : User | Create User Group] **************************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [adduser : User | Create User] ********************************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [etcd : include_tasks] ****************************************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/check_certs.yml for dev-worker0, dev-master0

TASK [etcd : Check_certs | Register certs that have already been generated on first etcd node] ***
ok: [dev-worker0 -> dev-master0(192.168.33.14)]

TASK [etcd : Check_certs | Set default value for 'sync_certs', 'gen_certs' and 'etcd_secret_changed' to false] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [etcd : Check certs | Register ca and etcd admin/member certs on etcd hosts] ***
skipping: [dev-worker0] => (item=ca.pem) 
skipping: [dev-worker0] => (item=member-dev-worker0.pem) 
skipping: [dev-worker0] => (item=member-dev-worker0-key.pem) 
skipping: [dev-worker0] => (item=admin-dev-worker0.pem) 
skipping: [dev-worker0] => (item=admin-dev-worker0-key.pem) 
ok: [dev-master0] => (item=ca.pem)
ok: [dev-master0] => (item=member-dev-master0.pem)
ok: [dev-master0] => (item=member-dev-master0-key.pem)
ok: [dev-master0] => (item=admin-dev-master0.pem)
ok: [dev-master0] => (item=admin-dev-master0-key.pem)

TASK [etcd : Check certs | Register ca and etcd node certs on kubernetes hosts] ***
ok: [dev-worker0] => (item=ca.pem)
ok: [dev-master0] => (item=ca.pem)
ok: [dev-worker0] => (item=node-dev-worker0.pem)
ok: [dev-master0] => (item=node-dev-master0.pem)
ok: [dev-worker0] => (item=node-dev-worker0-key.pem)
ok: [dev-master0] => (item=node-dev-master0-key.pem)

TASK [etcd : Check_certs | Set 'gen_certs' to true if expected certificates are not on the first etcd node] ***
ok: [dev-worker0] => (item=/etc/ssl/etcd/ssl/ca.pem)
ok: [dev-worker0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0.pem)
ok: [dev-worker0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0-key.pem)
ok: [dev-worker0] => (item=/etc/ssl/etcd/ssl/member-dev-master0.pem)
ok: [dev-worker0] => (item=/etc/ssl/etcd/ssl/member-dev-master0-key.pem)
ok: [dev-worker0] => (item=/etc/ssl/etcd/ssl/node-dev-master0.pem)
ok: [dev-worker0] => (item=/etc/ssl/etcd/ssl/node-dev-master0-key.pem)
ok: [dev-worker0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0.pem)
ok: [dev-worker0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0-key.pem)

TASK [etcd : Check_certs | Set 'gen_master_certs' object to track whether member and admin certs exist on first etcd node] ***
ok: [dev-worker0]

TASK [etcd : Check_certs | Set 'gen_node_certs' object to track whether node certs exist on first etcd node] ***
ok: [dev-worker0]

TASK [etcd : Check_certs | Set 'etcd_member_requires_sync' to true if ca or member/admin cert and key don't exist on etcd member or checksum doesn't match] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [etcd : Check_certs | Set 'kubernetes_host_requires_sync' to true if ca or node cert and key don't exist on kubernetes host or checksum doesn't match] ***
skipping: [dev-master0]
ok: [dev-worker0]

TASK [etcd : Check_certs | Set 'sync_certs' to true] ***************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [etcd : include_tasks] ****************************************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/gen_certs_script.yml for dev-worker0, dev-master0

TASK [etcd : Gen_certs | create etcd cert dir] *********************************
ok: [dev-master0]
changed: [dev-worker0]

TASK [etcd : Gen_certs | create etcd script dir (on dev-master0)] **************
skipping: [dev-worker0]

TASK [etcd : Gen_certs | write openssl config] *********************************
skipping: [dev-worker0]

TASK [etcd : Gen_certs | copy certs generation script] *************************
skipping: [dev-worker0]

TASK [etcd : Gen_certs | run cert generation script] ***************************
changed: [dev-worker0 -> dev-master0(192.168.33.14)]

TASK [etcd : Gen_certs | Gather etcd member and admin certs from first etcd node] ***
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/ca.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/ca-key.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0-key.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/member-dev-master0.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/member-dev-master0-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/ca.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/ca-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/member-dev-master0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/member-dev-master0-key.pem) 

TASK [etcd : Gen_certs | Write etcd member and admin certs to other etcd nodes] ***
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/ca.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/ca-key.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0-key.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/member-dev-master0.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/member-dev-master0-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/ca.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/ca-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/admin-dev-master0-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/member-dev-master0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/member-dev-master0-key.pem) 

TASK [etcd : Gen_certs | Gather node certs from first etcd node] ***************
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0-key.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/node-dev-master0.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/node-dev-master0-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-master0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-master0-key.pem) 

TASK [etcd : Gen_certs | Write node certs to other etcd nodes] *****************
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0-key.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/node-dev-master0.pem) 
skipping: [dev-worker0] => (item=/etc/ssl/etcd/ssl/node-dev-master0-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-worker0-key.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-master0.pem) 
skipping: [dev-master0] => (item=/etc/ssl/etcd/ssl/node-dev-master0-key.pem) 

TASK [etcd : Gen_certs | Set cert names per node] ******************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [etcd : Check_certs | Set 'sync_certs' to true on nodes] ******************
ok: [dev-worker0] => (item=ca.pem)
skipping: [dev-master0] => (item=ca.pem) 
skipping: [dev-master0] => (item=node-dev-master0.pem) 
skipping: [dev-master0] => (item=node-dev-master0-key.pem) 
ok: [dev-worker0] => (item=node-dev-worker0.pem)
ok: [dev-worker0] => (item=node-dev-worker0-key.pem)

TASK [etcd : Gen_certs | Gather node certs] ************************************
skipping: [dev-master0]
changed: [dev-worker0 -> dev-master0(192.168.33.14)]

TASK [etcd : Gen_certs | Copy certs on nodes] **********************************
skipping: [dev-master0]
ok: [dev-worker0]

TASK [etcd : Gen_certs | check certificate permissions] ************************
changed: [dev-worker0]
changed: [dev-master0]

TASK [etcd : include_tasks] ****************************************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/upd_ca_trust.yml for dev-worker0, dev-master0

TASK [etcd : Gen_certs | target ca-certificate store file] *********************
ok: [dev-worker0]
ok: [dev-master0]

TASK [etcd : Gen_certs | add CA to trusted CA dir] *****************************
changed: [dev-worker0]
ok: [dev-master0]

TASK [etcd : Gen_certs | update ca-certificates (Debian/Ubuntu/SUSE/Flatcar)] ***
skipping: [dev-master0]
changed: [dev-worker0]

TASK [etcd : Gen_certs | update ca-certificates (RedHat)] **********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [etcd : Gen_certs | update ca-certificates (ClearLinux)] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [etcd : Gen_certs | Get etcd certificate serials] *************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [etcd : Set etcd_client_cert_serial] **************************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [etcd : include_tasks] ****************************************************
skipping: [dev-worker0]
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/install_host.yml for dev-master0

TASK [etcd : Get currently-deployed etcd version] ******************************
skipping: [dev-master0]

TASK [etcd : Restart etcd if necessary] ****************************************
skipping: [dev-master0]

TASK [etcd : Restart etcd-events if necessary] *********************************
skipping: [dev-master0]

TASK [etcd : install | Copy etcd and etcdctl binary from download dir] *********
skipping: [dev-master0] => (item=etcd) 
skipping: [dev-master0] => (item=etcdctl) 

TASK [etcd : include_tasks] ****************************************************
skipping: [dev-worker0]
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/configure.yml for dev-master0

TASK [etcd : Configure | Check if etcd cluster is healthy] *********************
skipping: [dev-master0]

TASK [etcd : Configure | Check if etcd-events cluster is healthy] **************
skipping: [dev-master0]

TASK [etcd : include_tasks] ****************************************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/refresh_config.yml for dev-master0

TASK [etcd : Refresh config | Create etcd config file] *************************
skipping: [dev-master0]

TASK [etcd : Refresh config | Create etcd-events config file] ******************
skipping: [dev-master0]

TASK [etcd : Configure | Copy etcd.service systemd file] ***********************
skipping: [dev-master0]

TASK [etcd : Configure | Copy etcd-events.service systemd file] ****************
skipping: [dev-master0]

TASK [etcd : Configure | reload systemd] ***************************************
ok: [dev-master0]

TASK [etcd : Configure | Ensure etcd is running] *******************************
skipping: [dev-master0]

TASK [etcd : Configure | Ensure etcd-events is running] ************************
skipping: [dev-master0]

TASK [etcd : Configure | Wait for etcd cluster to be healthy] ******************
skipping: [dev-master0]

TASK [etcd : Configure | Wait for etcd-events cluster to be healthy] ***********
skipping: [dev-master0]

TASK [etcd : Configure | Check if member is in etcd cluster] *******************
skipping: [dev-master0]

TASK [etcd : Configure | Check if member is in etcd-events cluster] ************
skipping: [dev-master0]

TASK [etcd : Configure | Join member(s) to etcd cluster one at a time] *********
skipping: [dev-master0] => (item=dev-master0) 

TASK [etcd : Configure | Join member(s) to etcd-events cluster one at a time] ***
skipping: [dev-master0] => (item=dev-master0) 

TASK [etcd : include_tasks] ****************************************************
skipping: [dev-worker0]
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/refresh_config.yml for dev-master0

TASK [etcd : Refresh config | Create etcd config file] *************************
skipping: [dev-master0]

TASK [etcd : Refresh config | Create etcd-events config file] ******************
skipping: [dev-master0]

TASK [etcd : Restart etcd if certs changed] ************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [etcd : Restart etcd-events if certs changed] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [etcd : include_tasks] ****************************************************
skipping: [dev-worker0]
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/etcd/tasks/refresh_config.yml for dev-master0

TASK [etcd : Refresh config | Create etcd config file] *************************
skipping: [dev-master0]

TASK [etcd : Refresh config | Create etcd-events config file] ******************
skipping: [dev-master0]

RUNNING HANDLER [etcd : set etcd_secret_changed] *******************************
ok: [dev-worker0]

PLAY [k8s_cluster] *************************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [dev-worker0]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [dev-worker0]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Register docker images info] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [dev-worker0]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download | Download files / images] ***************************
skipping: [dev-worker0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-worker0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-worker0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-apiserver', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-controller-manager', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-scheduler', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-proxy', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-apiserver', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-controller-manager', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-scheduler', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-proxy', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [dev-worker0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [dev-master0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [dev-worker0] => (item=dev-worker0) 
skipping: [dev-worker0] => (item=dev-master0) 
skipping: [dev-worker0] => (item=dev-master0) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [dev-worker0]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [dev-worker0]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : look up docker cgroup driver] **************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : set kubelet_cgroup_driver_detected fact for docker] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : look up crio cgroup driver] ****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : set kubelet_cgroup_driver_detected fact for crio] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : set kubelet_cgroup_driver_detected fact for containerd] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/node : set kubelet_cgroup_driver] *****************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/node : set kubelet_cgroups options when cgroupfs is used] *****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : set kubelet_config_extra_args options when cgroupfs is used] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : os specific vars] **************************************
ok: [dev-worker0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/kubernetes/node/vars/ubuntu-20.yml)
ok: [dev-master0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/kubernetes/node/vars/ubuntu-20.yml)

TASK [kubernetes/node : Pre-upgrade | check if kubelet container exists] *******
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/node : Pre-upgrade | copy /var/lib/cni from kubelet] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : Pre-upgrade | ensure kubelet container service is stopped if using host deployment] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : Pre-upgrade | ensure kubelet container is removed if using host deployment] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : Ensure /var/lib/cni exists] ****************************
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/node : install | Copy kubeadm binary from download dir] *******
skipping: [dev-master0]
changed: [dev-worker0]

TASK [kubernetes/node : install | Copy kubelet binary from download dir] *******
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/node : install | Copy socat wrapper for Container Linux with Docker] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : install | Copy socat wrapper for Container Linux with Containerd] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : install | Copy socat wrapper for Container Linux with crio] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : kube-vip | Write static pod] ***************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : haproxy | Cleanup potentially deployed haproxy] ********
skipping: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/node : nginx-proxy | Make nginx directory] ********************
skipping: [dev-master0]
changed: [dev-worker0]

TASK [kubernetes/node : nginx-proxy | Write nginx-proxy configuration] *********
skipping: [dev-master0]
changed: [dev-worker0]

TASK [kubernetes/node : nginx-proxy | Get checksum from config] ****************
skipping: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/node : nginx-proxy | Write static pod] ************************
skipping: [dev-master0]
changed: [dev-worker0]

TASK [kubernetes/node : haproxy | Cleanup potentially deployed nginx-proxy] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : haproxy | Make haproxy directory] **********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : haproxy | Write haproxy configuration] *****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : haproxy | Get checksum from config] ********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : haproxy | Write static pod] ****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : Ensure nodePort range is reserved] *********************
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/node : Verify if br_netfilter module exists] ******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/node : Verify br_netfilter module path exists] ****************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/node : Enable br_netfilter module] ****************************
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/node : Persist br_netfilter module] ***************************
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/node : Check if bridge-nf-call-iptables key exists] ***********
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/node : Enable bridge-nf-call tables] **************************
changed: [dev-worker0] => (item=net.bridge.bridge-nf-call-iptables)
changed: [dev-master0] => (item=net.bridge.bridge-nf-call-iptables)
changed: [dev-worker0] => (item=net.bridge.bridge-nf-call-arptables)
changed: [dev-master0] => (item=net.bridge.bridge-nf-call-arptables)
changed: [dev-worker0] => (item=net.bridge.bridge-nf-call-ip6tables)
changed: [dev-master0] => (item=net.bridge.bridge-nf-call-ip6tables)

TASK [kubernetes/node : Modprobe Kernel Module for IPVS] ***********************
changed: [dev-worker0] => (item=ip_vs)
changed: [dev-master0] => (item=ip_vs)
changed: [dev-worker0] => (item=ip_vs_rr)
changed: [dev-master0] => (item=ip_vs_rr)
changed: [dev-worker0] => (item=ip_vs_wrr)
changed: [dev-master0] => (item=ip_vs_wrr)
changed: [dev-worker0] => (item=ip_vs_sh)
changed: [dev-master0] => (item=ip_vs_sh)

TASK [kubernetes/node : Modprobe nf_conntrack_ipv4] ****************************
fatal: [dev-worker0]: FAILED! => {"changed": false, "msg": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic\n", "name": "nf_conntrack_ipv4", "params": "", "rc": 1, "state": "present", "stderr": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic\n", "stderr_lines": ["modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic"], "stdout": "", "stdout_lines": []}
...ignoring
fatal: [dev-master0]: FAILED! => {"changed": false, "msg": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic\n", "name": "nf_conntrack_ipv4", "params": "", "rc": 1, "state": "present", "stderr": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic\n", "stderr_lines": ["modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.4.0-121-generic"], "stdout": "", "stdout_lines": []}
...ignoring

TASK [kubernetes/node : Persist ip_vs modules] *********************************
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/node : include_tasks] *****************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : Test if openstack_cacert is a base64 string] ***********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : Write cacert file] *************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : Write cloud-config] ************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : Make sure dynamic kubelet configuration directory is writeable] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node : Set kubelet api version to v1beta1] ********************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/node : Write kubelet environment config file (kubeadm)] *******
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/node : Write kubelet config file] *****************************
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/node : Write kubelet systemd init file] ***********************
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/node : flush_handlers and reload-systemd] *********************

RUNNING HANDLER [kubernetes/node : Node | restart kubelet] *********************
changed: [dev-worker0]
changed: [dev-master0]

RUNNING HANDLER [kubernetes/node : Kubelet | reload systemd] *******************
ok: [dev-worker0]
ok: [dev-master0]

RUNNING HANDLER [kubernetes/node : Kubelet | restart kubelet] ******************
changed: [dev-worker0]
changed: [dev-master0]

TASK [kubernetes/node : Enable kubelet] ****************************************
changed: [dev-worker0]
changed: [dev-master0]

RUNNING HANDLER [kubernetes/node : Kubelet | restart kubelet] ******************
changed: [dev-worker0]
changed: [dev-master0]

PLAY [kube_control_plane] ******************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [dev-master0]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [dev-master0]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [dev-master0]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [dev-master0]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [dev-master0]

TASK [download : prep_download | Register docker images info] ******************
skipping: [dev-master0]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [dev-master0]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [dev-master0]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
skipping: [dev-master0]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [dev-master0]

TASK [download : download | Download files / images] ***************************
skipping: [dev-master0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-master0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-apiserver', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-controller-manager', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-scheduler', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-proxy', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [dev-master0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [dev-master0] => (item=dev-worker0) 
skipping: [dev-master0] => (item=dev-master0) 
skipping: [dev-master0] => (item=dev-master0) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [dev-master0]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [dev-master0]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [dev-master0]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [dev-master0]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [dev-master0]

TASK [kubernetes/tokens : Check_tokens | check if the tokens have already been generated on first master] ***
skipping: [dev-master0]

TASK [kubernetes/tokens : Check_tokens | Set default value for 'sync_tokens' and 'gen_tokens' to false] ***
skipping: [dev-master0]

TASK [kubernetes/tokens : Check_tokens | Set 'sync_tokens' and 'gen_tokens' to true] ***
skipping: [dev-master0]

TASK [kubernetes/tokens : Check tokens | check if a cert already exists] *******
skipping: [dev-master0]

TASK [kubernetes/tokens : Check_tokens | Set 'sync_tokens' to true] ************
skipping: [dev-master0]

TASK [kubernetes/tokens : Make sure the tokens directory exits] ****************
skipping: [dev-master0]

TASK [kubernetes/tokens : Gen_tokens | copy tokens generation script] **********
skipping: [dev-master0]

TASK [kubernetes/tokens : Gen_tokens | generate tokens for master components] ***
skipping: [dev-master0] => (item=['system:kubectl', 'dev-master0']) 

TASK [kubernetes/tokens : Gen_tokens | generate tokens for node components] ****
skipping: [dev-master0] => (item=['system:kubelet', 'dev-worker0']) 

TASK [kubernetes/tokens : Gen_tokens | Get list of tokens from first master] ***
skipping: [dev-master0]

TASK [kubernetes/tokens : Gen_tokens | Gather tokens] **************************
skipping: [dev-master0]

TASK [kubernetes/tokens : Gen_tokens | Copy tokens on masters] *****************
skipping: [dev-master0]

TASK [kubernetes/control-plane : Pre-upgrade | Delete master manifests if etcd secrets changed] ***
skipping: [dev-master0] => (item=kube-apiserver) 
skipping: [dev-master0] => (item=kube-controller-manager) 
skipping: [dev-master0] => (item=kube-scheduler) 

TASK [kubernetes/control-plane : Pre-upgrade | Delete master containers forcefully] ***
skipping: [dev-master0] => (item=kube-apiserver) 
skipping: [dev-master0] => (item=kube-controller-manager) 
skipping: [dev-master0] => (item=kube-scheduler) 

TASK [kubernetes/control-plane : Create webhook token auth config] *************
skipping: [dev-master0]

TASK [kubernetes/control-plane : Create webhook authorization config] **********
skipping: [dev-master0]

TASK [kubernetes/control-plane : Create kube-scheduler config] *****************
changed: [dev-master0]

TASK [kubernetes/control-plane : Check if secret for encrypting data at rest already exist] ***
skipping: [dev-master0]

TASK [kubernetes/control-plane : Slurp secrets_encryption file if it exists] ***
skipping: [dev-master0]

TASK [kubernetes/control-plane : Base 64 Decode slurped secrets_encryption.yaml file] ***
skipping: [dev-master0]

TASK [kubernetes/control-plane : Extract secret value from secrets_encryption.yaml] ***
skipping: [dev-master0]

TASK [kubernetes/control-plane : Set kube_encrypt_token across master nodes] ***
skipping: [dev-master0] => (item=dev-master0) 

TASK [kubernetes/control-plane : Write secrets for encrypting secret data at rest] ***
skipping: [dev-master0]

TASK [kubernetes/control-plane : Install | Copy kubectl binary from download dir] ***
changed: [dev-master0]

TASK [kubernetes/control-plane : Install kubectl bash completion] **************
changed: [dev-master0]

TASK [kubernetes/control-plane : Set kubectl bash completion file permissions] ***
changed: [dev-master0]

TASK [kubernetes/control-plane : Disable SecurityContextDeny admission-controller and enable PodSecurityPolicy] ***
skipping: [dev-master0]

TASK [kubernetes/control-plane : Check which kube-control nodes are already members of the cluster] ***
fatal: [dev-master0]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "get", "nodes", "--selector=node-role.kubernetes.io/control-plane", "-o", "json"], "delta": "0:00:00.085499", "end": "2022-07-13 22:18:27.816428", "msg": "non-zero return code", "rc": 1, "start": "2022-07-13 22:18:27.730929", "stderr": "The connection to the server localhost:8080 was refused - did you specify the right host or port?", "stderr_lines": ["The connection to the server localhost:8080 was refused - did you specify the right host or port?"], "stdout": "", "stdout_lines": []}
...ignoring

TASK [kubernetes/control-plane : Set fact joined_control_panes] ****************
skipping: [dev-master0] => (item=dev-master0) 

TASK [kubernetes/control-plane : Set fact first_kube_control_plane] ************
ok: [dev-master0]

TASK [kubernetes/control-plane : Install OIDC certificate] *********************
skipping: [dev-master0]

TASK [kubernetes/control-plane : kubeadm | Check if kubeadm has already run] ***
ok: [dev-master0]

TASK [kubernetes/control-plane : Backup old certs and keys] ********************
skipping: [dev-master0] => (item=apiserver.crt) 
skipping: [dev-master0] => (item=apiserver.key) 
skipping: [dev-master0] => (item=apiserver-kubelet-client.crt) 
skipping: [dev-master0] => (item=apiserver-kubelet-client.key) 
skipping: [dev-master0] => (item=front-proxy-client.crt) 
skipping: [dev-master0] => (item=front-proxy-client.key) 

TASK [kubernetes/control-plane : Backup old confs] *****************************
skipping: [dev-master0] => (item=admin.conf) 
skipping: [dev-master0] => (item=controller-manager.conf) 
skipping: [dev-master0] => (item=kubelet.conf) 
skipping: [dev-master0] => (item=scheduler.conf) 

TASK [kubernetes/control-plane : kubeadm | aggregate all SANs] *****************
ok: [dev-master0]

TASK [kubernetes/control-plane : Create audit-policy directory] ****************
skipping: [dev-master0]

TASK [kubernetes/control-plane : Write api audit policy yaml] ******************
skipping: [dev-master0]

TASK [kubernetes/control-plane : Write api audit webhook config yaml] **********
skipping: [dev-master0]

TASK [kubernetes/control-plane : set kubeadm_config_api_fqdn define] ***********
skipping: [dev-master0]

TASK [kubernetes/control-plane : Set kubeadm api version to v1beta2] ***********
ok: [dev-master0]

TASK [kubernetes/control-plane : kubeadm | Create kubeadm config] **************
changed: [dev-master0]

TASK [kubernetes/control-plane : kubeadm | Create directory to store admission control configurations] ***
skipping: [dev-master0]

TASK [kubernetes/control-plane : kubeadm | Push admission control config file] ***
skipping: [dev-master0]

TASK [kubernetes/control-plane : kubeadm | Push admission control config files] ***
skipping: [dev-master0]

TASK [kubernetes/control-plane : kubeadm | Check if apiserver.crt contains all needed SANs] ***
skipping: [dev-master0]

TASK [kubernetes/control-plane : kubeadm | regenerate apiserver cert 1/2] ******
skipping: [dev-master0] => (item=apiserver.crt) 
skipping: [dev-master0] => (item=apiserver.key) 

TASK [kubernetes/control-plane : kubeadm | regenerate apiserver cert 2/2] ******
skipping: [dev-master0]

TASK [kubernetes/control-plane : kubeadm | Initialize first master] ************
changed: [dev-master0]

TASK [kubernetes/control-plane : set kubeadm certificate key] ******************
skipping: [dev-master0] => (item=[init] Using Kubernetes version: v1.23.7) 
skipping: [dev-master0] => (item=[preflight] Running pre-flight checks) 
skipping: [dev-master0] => (item=[preflight] Pulling images required for setting up a Kubernetes cluster) 
skipping: [dev-master0] => (item=[preflight] This might take a minute or two, depending on the speed of your internet connection) 
skipping: [dev-master0] => (item=[preflight] You can also perform this action in beforehand using 'kubeadm config images pull') 
skipping: [dev-master0] => (item=[certs] Using certificateDir folder "/etc/kubernetes/ssl") 
skipping: [dev-master0] => (item=[certs] Generating "ca" certificate and key) 
skipping: [dev-master0] => (item=[certs] Generating "apiserver" certificate and key) 
skipping: [dev-master0] => (item=[certs] apiserver serving cert is signed for DNS names [dev-master0 dev-master0.cluster.cl0.k8s.dev.local kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.cl0.k8s.dev.local lb-apiserver.kubernetes.local localhost] and IPs [10.233.0.1 192.168.33.14 127.0.0.1]) 
skipping: [dev-master0] => (item=[certs] Generating "apiserver-kubelet-client" certificate and key) 
skipping: [dev-master0] => (item=[certs] Generating "front-proxy-ca" certificate and key) 
skipping: [dev-master0] => (item=[certs] Generating "front-proxy-client" certificate and key) 
skipping: [dev-master0] => (item=[certs] External etcd mode: Skipping etcd/ca certificate authority generation) 
skipping: [dev-master0] => (item=[certs] External etcd mode: Skipping etcd/server certificate generation) 
skipping: [dev-master0] => (item=[certs] External etcd mode: Skipping etcd/peer certificate generation) 
skipping: [dev-master0] => (item=[certs] External etcd mode: Skipping etcd/healthcheck-client certificate generation) 
skipping: [dev-master0] => (item=[certs] External etcd mode: Skipping apiserver-etcd-client certificate generation) 
skipping: [dev-master0] => (item=[certs] Generating "sa" key and public key) 
skipping: [dev-master0] => (item=[kubeconfig] Using kubeconfig folder "/etc/kubernetes") 
skipping: [dev-master0] => (item=[kubeconfig] Writing "admin.conf" kubeconfig file) 
skipping: [dev-master0] => (item=[kubeconfig] Writing "kubelet.conf" kubeconfig file) 
skipping: [dev-master0] => (item=[kubeconfig] Writing "controller-manager.conf" kubeconfig file) 
skipping: [dev-master0] => (item=[kubeconfig] Writing "scheduler.conf" kubeconfig file) 
skipping: [dev-master0] => (item=[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env") 
skipping: [dev-master0] => (item=[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml") 
skipping: [dev-master0] => (item=[kubelet-start] Starting the kubelet) 
skipping: [dev-master0] => (item=[control-plane] Using manifest folder "/etc/kubernetes/manifests") 
skipping: [dev-master0] => (item=[control-plane] Creating static Pod manifest for "kube-apiserver") 
skipping: [dev-master0] => (item=[control-plane] Creating static Pod manifest for "kube-controller-manager") 
skipping: [dev-master0] => (item=[control-plane] Creating static Pod manifest for "kube-scheduler") 
skipping: [dev-master0] => (item=[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 5m0s) 
skipping: [dev-master0] => (item=[apiclient] All control plane components are healthy after 19.004574 seconds) 
skipping: [dev-master0] => (item=[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace) 
skipping: [dev-master0] => (item=[kubelet] Creating a ConfigMap "kubelet-config-1.23" in namespace kube-system with the configuration for the kubelets in the cluster) 
skipping: [dev-master0] => (item=NOTE: The "kubelet-config-1.23" naming of the kubelet ConfigMap is deprecated. Once the UnversionedKubeletConfigMap feature gate graduates to Beta the default name will become just "kubelet-config". Kubeadm upgrade will handle this transition transparently.) 
skipping: [dev-master0] => (item=[upload-certs] Storing the certificates in Secret "kubeadm-certs" in the "kube-system" Namespace) 
skipping: [dev-master0] => (item=[upload-certs] Using certificate key:) 
skipping: [dev-master0] => (item=d8e3a53414fa7e832c9c270525a71f0217541a1b2dfcb4ef457f6fefb9720036) 
skipping: [dev-master0] => (item=[mark-control-plane] Marking the node dev-master0 as control-plane by adding the labels: [node-role.kubernetes.io/master(deprecated) node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]) 
skipping: [dev-master0] => (item=[mark-control-plane] Marking the node dev-master0 as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule]) 
skipping: [dev-master0] => (item=[bootstrap-token] Using token: xjlp3i.buge3zn5uj9hc8nj) 
skipping: [dev-master0] => (item=[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles) 
skipping: [dev-master0] => (item=[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to get nodes) 
skipping: [dev-master0] => (item=[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials) 
skipping: [dev-master0] => (item=[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token) 
skipping: [dev-master0] => (item=[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster) 
skipping: [dev-master0] => (item=[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace) 
skipping: [dev-master0] => (item=[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key) 
skipping: [dev-master0] => (item=[addons] Applied essential addon: kube-proxy) 
skipping: [dev-master0] => (item=) 
skipping: [dev-master0] => (item=Your Kubernetes control-plane has initialized successfully!) 
skipping: [dev-master0] => (item=) 
skipping: [dev-master0] => (item=To start using your cluster, you need to run the following as a regular user:) 
skipping: [dev-master0] => (item=) 
skipping: [dev-master0] => (item=  mkdir -p $HOME/.kube) 
skipping: [dev-master0] => (item=  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config) 
skipping: [dev-master0] => (item=  sudo chown $(id -u):$(id -g) $HOME/.kube/config) 
skipping: [dev-master0] => (item=) 
skipping: [dev-master0] => (item=Alternatively, if you are the root user, you can run:) 
skipping: [dev-master0] => (item=) 
skipping: [dev-master0] => (item=  export KUBECONFIG=/etc/kubernetes/admin.conf) 
skipping: [dev-master0] => (item=) 
skipping: [dev-master0] => (item=You should now deploy a pod network to the cluster.) 
skipping: [dev-master0] => (item=Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:) 
skipping: [dev-master0] => (item=  https://kubernetes.io/docs/concepts/cluster-administration/addons/) 
skipping: [dev-master0] => (item=) 
skipping: [dev-master0] => (item=You can now join any number of the control-plane node running the following command on each as root:) 
skipping: [dev-master0] => (item=) 
skipping: [dev-master0] => (item=  kubeadm join 192.168.33.14:6443 --token xjlp3i.buge3zn5uj9hc8nj \) 
skipping: [dev-master0] => (item=	--discovery-token-ca-cert-hash sha256:bd4fc29699a52d233c96ba8cf3373af8db7d13da461dedf251a2c903e7de7a4b \) 
ok: [dev-master0] => (item=	--control-plane --certificate-key d8e3a53414fa7e832c9c270525a71f0217541a1b2dfcb4ef457f6fefb9720036)
skipping: [dev-master0] => (item=) 
skipping: [dev-master0] => (item=Please note that the certificate-key gives access to cluster sensitive data, keep it secret!) 
skipping: [dev-master0] => (item=As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use) 
skipping: [dev-master0] => (item="kubeadm init phase upload-certs --upload-certs" to reload certs afterward.) 
skipping: [dev-master0] => (item=) 
skipping: [dev-master0] => (item=Then you can join any number of worker nodes by running the following on each as root:) 
skipping: [dev-master0] => (item=) 
skipping: [dev-master0] => (item=kubeadm join 192.168.33.14:6443 --token xjlp3i.buge3zn5uj9hc8nj \) 
skipping: [dev-master0] => (item=	--discovery-token-ca-cert-hash sha256:bd4fc29699a52d233c96ba8cf3373af8db7d13da461dedf251a2c903e7de7a4b ) 

TASK [kubernetes/control-plane : Create hardcoded kubeadm token for joining nodes with 24h expiration (if defined)] ***
skipping: [dev-master0]

TASK [kubernetes/control-plane : Create kubeadm token for joining nodes with 24h expiration (default)] ***
ok: [dev-master0]

TASK [kubernetes/control-plane : Set kubeadm_token] ****************************
ok: [dev-master0]

TASK [kubernetes/control-plane : PodSecurityPolicy | install PodSecurityPolicy] ***
skipping: [dev-master0]

TASK [kubernetes/control-plane : kubeadm | Join other masters] *****************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/kubernetes/control-plane/tasks/kubeadm-secondary.yml for dev-master0

TASK [kubernetes/control-plane : Set kubeadm_discovery_address] ****************
ok: [dev-master0]

TASK [kubernetes/control-plane : Upload certificates so they are fresh and not expired] ***
changed: [dev-master0]

TASK [kubernetes/control-plane : Parse certificate key if not set] *************
ok: [dev-master0]

TASK [kubernetes/control-plane : Create kubeadm ControlPlane config] ***********
skipping: [dev-master0]

TASK [kubernetes/control-plane : Wait for k8s apiserver] ***********************
ok: [dev-master0]

TASK [kubernetes/control-plane : check already run] ****************************
ok: [dev-master0] => {
    "msg": false
}

TASK [kubernetes/control-plane : Reset cert directory] *************************
skipping: [dev-master0]

TASK [kubernetes/control-plane : Joining control plane node to the cluster.] ***
skipping: [dev-master0]

TASK [kubernetes/control-plane : kubeadm | upgrade kubernetes cluster] *********
skipping: [dev-master0]

TASK [kubernetes/control-plane : kubeadm | Remove taint for master with node role] ***
skipping: [dev-master0] => (item=node-role.kubernetes.io/master:NoSchedule-) 
skipping: [dev-master0] => (item=node-role.kubernetes.io/control-plane:NoSchedule-) 

TASK [kubernetes/control-plane : Include kubeadm etcd extra tasks] *************
skipping: [dev-master0]

TASK [kubernetes/control-plane : Include kubeadm secondary server apiserver fixes] ***
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/kubernetes/control-plane/tasks/kubeadm-fix-apiserver.yml for dev-master0

TASK [kubernetes/control-plane : Update server field in component kubeconfigs] ***
changed: [dev-master0] => (item=admin.conf)
changed: [dev-master0] => (item=controller-manager.conf)
changed: [dev-master0] => (item=kubelet.conf)
changed: [dev-master0] => (item=scheduler.conf)

TASK [kubernetes/control-plane : Update etcd-servers for apiserver] ************
ok: [dev-master0]

TASK [kubernetes/control-plane : Include kubelet client cert rotation fixes] ***
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/kubernetes/control-plane/tasks/kubelet-fix-client-cert-rotation.yml for dev-master0

TASK [kubernetes/control-plane : Fixup kubelet client cert rotation 1/2] *******
ok: [dev-master0]

TASK [kubernetes/control-plane : Fixup kubelet client cert rotation 2/2] *******
ok: [dev-master0]

TASK [kubernetes/control-plane : Install script to renew K8S control plane certificates] ***
changed: [dev-master0]

TASK [kubernetes/control-plane : Renew K8S control plane certificates monthly 1/2] ***
skipping: [dev-master0] => (item=k8s-certs-renew.service) 
skipping: [dev-master0] => (item=k8s-certs-renew.timer) 

TASK [kubernetes/control-plane : Renew K8S control plane certificates monthly 2/2] ***
skipping: [dev-master0]

TASK [kubernetes/client : Set external kube-apiserver endpoint] ****************
ok: [dev-master0]

TASK [kubernetes/client : Create kube config dir for current/ansible become user] ***
changed: [dev-master0]

TASK [kubernetes/client : Copy admin kubeconfig to current/ansible become user home] ***
changed: [dev-master0]

TASK [kubernetes/client : Create kube artifacts dir] ***************************
skipping: [dev-master0]

TASK [kubernetes/client : Wait for k8s apiserver] ******************************
ok: [dev-master0]

TASK [kubernetes/client : Create external_kubeconfig dir] **********************
skipping: [dev-master0]

TASK [kubernetes/client : Generate admin kubeconfig with external api endpoint] ***
skipping: [dev-master0]

TASK [kubernetes/client : Convert kubeconfig to YAML] **************************
skipping: [dev-master0]

TASK [kubernetes/client : Override username in kubeconfig] *********************
skipping: [dev-master0]

TASK [kubernetes/client : Write admin kubeconfig on ansible host] **************
skipping: [dev-master0]

TASK [kubernetes/client : Copy kubectl binary to ansible host] *****************
skipping: [dev-master0]

TASK [kubernetes/client : create helper script kubectl.sh on ansible host] *****
skipping: [dev-master0]

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Wait for kube-apiserver] ***
ok: [dev-master0]

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Add ClusterRoleBinding to admit nodes] ***
changed: [dev-master0]

TASK [kubernetes-apps/cluster_roles : Apply workaround to allow all nodes with cert O=system:nodes to register] ***
ok: [dev-master0]

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Add webhook ClusterRole that grants access to proxy, stats, log, spec, and metrics on a kubelet] ***
changed: [dev-master0]

TASK [kubernetes-apps/cluster_roles : Apply webhook ClusterRole] ***************
ok: [dev-master0]

TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Add ClusterRoleBinding for system:nodes to webhook ClusterRole] ***
changed: [dev-master0]

TASK [kubernetes-apps/cluster_roles : Grant system:nodes the webhook ClusterRole] ***
ok: [dev-master0]

TASK [kubernetes-apps/cluster_roles : include_tasks] ***************************
skipping: [dev-master0]

TASK [kubernetes-apps/cluster_roles : PriorityClass | Copy k8s-cluster-critical-pc.yml file] ***
changed: [dev-master0]

TASK [kubernetes-apps/cluster_roles : PriorityClass | Create k8s-cluster-critical] ***
ok: [dev-master0]

RUNNING HANDLER [kubernetes/control-plane : Master | restart kubelet] **********
changed: [dev-master0]

RUNNING HANDLER [kubernetes/control-plane : Master | wait for master static pods] ***
changed: [dev-master0]

RUNNING HANDLER [kubernetes/control-plane : Master | Restart kube-scheduler] ***
changed: [dev-master0]

RUNNING HANDLER [kubernetes/control-plane : Master | Restart kube-controller-manager] ***
changed: [dev-master0]

RUNNING HANDLER [kubernetes/control-plane : Master | reload systemd] ***********
ok: [dev-master0]

RUNNING HANDLER [kubernetes/control-plane : Master | reload kubelet] ***********
changed: [dev-master0]

RUNNING HANDLER [kubernetes/control-plane : Master | Remove scheduler container docker] ***
skipping: [dev-master0]

RUNNING HANDLER [kubernetes/control-plane : Master | Remove scheduler container containerd/crio] ***
changed: [dev-master0]

RUNNING HANDLER [kubernetes/control-plane : Master | Remove controller manager container docker] ***
skipping: [dev-master0]

RUNNING HANDLER [kubernetes/control-plane : Master | Remove controller manager container containerd/crio] ***
changed: [dev-master0]

RUNNING HANDLER [kubernetes/control-plane : Master | wait for kube-scheduler] ***
ok: [dev-master0]

RUNNING HANDLER [kubernetes/control-plane : Master | wait for kube-controller-manager] ***
ok: [dev-master0]

RUNNING HANDLER [kubernetes/control-plane : Master | wait for the apiserver to be running] ***
ok: [dev-master0]

PLAY [k8s_cluster] *************************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [dev-worker0]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [dev-worker0]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Register docker images info] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [dev-worker0]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download | Download files / images] ***************************
skipping: [dev-worker0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-worker0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-worker0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-apiserver', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-controller-manager', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-scheduler', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-proxy', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-apiserver', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-controller-manager', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-scheduler', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-proxy', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [dev-worker0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [dev-master0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [dev-worker0] => (item=dev-worker0) 
skipping: [dev-worker0] => (item=dev-master0) 
skipping: [dev-worker0] => (item=dev-master0) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [dev-worker0]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [dev-worker0]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/kubeadm : Set kubeadm_discovery_address] **********************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/kubeadm : Check if kubelet.conf exists] ***********************
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/kubeadm : Check if kubeadm CA cert is accessible] *************
ok: [dev-worker0 -> dev-master0(192.168.33.14)]

TASK [kubernetes/kubeadm : Calculate kubeadm CA cert hash] *********************
ok: [dev-worker0 -> dev-master0(192.168.33.14)]

TASK [kubernetes/kubeadm : Create kubeadm token for joining nodes with 24h expiration (default)] ***
skipping: [dev-master0]
ok: [dev-worker0 -> dev-master0(192.168.33.14)]

TASK [kubernetes/kubeadm : Set kubeadm_token to generated token] ***************
ok: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/kubeadm : Set kubeadm api version to v1beta2] *****************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/kubeadm : Create kubeadm client config] ***********************
skipping: [dev-master0]
changed: [dev-worker0]

TASK [kubernetes/kubeadm : Join to cluster] ************************************
skipping: [dev-master0]
changed: [dev-worker0]

TASK [kubernetes/kubeadm : Display kubeadm join stderr if any] *****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/kubeadm : Update server field in kubelet kubeconfig] **********
skipping: [dev-master0]
changed: [dev-worker0]

TASK [kubernetes/kubeadm : Update server field in kube-proxy kubeconfig] *******
changed: [dev-worker0 -> dev-master0(192.168.33.14)]

TASK [kubernetes/kubeadm : Set ca.crt file permission] *************************
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/kubeadm : Restart all kube-proxy pods to ensure that they load the new configmap] ***
changed: [dev-worker0 -> dev-master0(192.168.33.14)]

TASK [kubernetes/kubeadm : Extract etcd certs from control plane if using etcd kubeadm mode] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node-label : Kubernetes Apps | Wait for kube-apiserver] *******
skipping: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/node-label : Set role node label to empty list] ***************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/node-label : Node label for nvidia GPU nodes] *****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/node-label : Set inventory node label to empty list] **********
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/node-label : Populate inventory node label] *******************

TASK [kubernetes/node-label : debug] *******************************************
ok: [dev-worker0] => {
    "role_node_labels": []
}
ok: [dev-master0] => {
    "role_node_labels": []
}

TASK [kubernetes/node-label : debug] *******************************************
ok: [dev-worker0] => {
    "inventory_node_labels": []
}
ok: [dev-master0] => {
    "inventory_node_labels": []
}

TASK [kubernetes/node-label : Set label to node] *******************************

TASK [network_plugin/cni : CNI | make sure /opt/cni/bin exists] ****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cni : CNI | Copy cni plugins] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cilium : Cilium | Check Cilium encryption `cilium_ipsec_key` for ipsec] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cilium : Stop if `cilium_ipsec_enabled` is defined and `cilium_encryption_type` is not `ipsec`] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cilium : Stop if kernel version is too low for Cilium Wireguard encryption] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cilium : Stop if bad Cilium identity allocation mode] *****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cilium : Stop if bad Cilium Cluster ID] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cilium : Stop if bad encryption type] *********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cilium : Stop if `cilium_encryption_type` is set to "wireguard" and cilium_version is < v1.10.0] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cilium : Set `cilium_encryption_type` to "ipsec" and  if `cilium_ipsec_enabled` is true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cilium : include_tasks] ***********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cilium : include_tasks] ***********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Slurp CNI config] ********************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [network_plugin/calico : Set fact calico_cni_config from slurped CNI config] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Set fact calico_datastore to etcd if needed] *****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Get kubelet hostname] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Gather os specific variables] ***********
ok: [dev-worker0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/network_plugin/calico/vars/../vars/debian.yml)
ok: [dev-master0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/network_plugin/calico/vars/../vars/debian.yml)

TASK [network_plugin/calico : Calico | Add wireguard yum repo] *****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : include_tasks] ***********************************
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/network_plugin/calico/tasks/install.yml for dev-worker0, dev-master0

TASK [network_plugin/calico : Calico | Install Wireguard packages] *************
skipping: [dev-worker0] => (item=wireguard) 
skipping: [dev-master0] => (item=wireguard) 

TASK [network_plugin/calico : Calico | Copy calicoctl binary from download dir] ***
changed: [dev-master0]
changed: [dev-worker0]

TASK [network_plugin/calico : Calico | Write Calico cni config] ****************
changed: [dev-master0]
changed: [dev-worker0]

TASK [network_plugin/calico : Calico | Create calico certs directory] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Link etcd certificates for calico-node] ***
skipping: [dev-worker0] => (item={'s': 'ca.pem', 'd': 'ca_cert.crt'}) 
skipping: [dev-worker0] => (item={'s': 'node-dev-worker0.pem', 'd': 'cert.crt'}) 
skipping: [dev-worker0] => (item={'s': 'node-dev-worker0-key.pem', 'd': 'key.pem'}) 
skipping: [dev-master0] => (item={'s': 'ca.pem', 'd': 'ca_cert.crt'}) 
skipping: [dev-master0] => (item={'s': 'node-dev-master0.pem', 'd': 'cert.crt'}) 
skipping: [dev-master0] => (item={'s': 'node-dev-master0-key.pem', 'd': 'key.pem'}) 

TASK [network_plugin/calico : Calico | Generate typha certs] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Generate apiserver certs] ***************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Install calicoctl wrapper script] *******
changed: [dev-master0]
changed: [dev-worker0]

TASK [network_plugin/calico : Calico | wait for etcd] **************************
skipping: [dev-worker0]

TASK [network_plugin/calico : Calico | Check if calico network pool has already been configured] ***
skipping: [dev-worker0]
ok: [dev-master0]

TASK [network_plugin/calico : Calico | Ensure that calico_pool_cidr is within kube_pods_subnet when defined] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Check if calico IPv6 network pool has already been configured] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Ensure that calico_pool_cidr_ipv6 is within kube_pods_subnet_ipv6 when defined] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Check if extra directory is needed] *****
skipping: [dev-worker0]
ok: [dev-master0]

TASK [network_plugin/calico : Calico | Set kdd path when calico < v3.22.3] *****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Set kdd path when calico > v3.22.2] *****
skipping: [dev-worker0]
ok: [dev-master0]

TASK [network_plugin/calico : Calico | Create calico manifests for kdd] ********
skipping: [dev-worker0]
changed: [dev-master0]

TASK [network_plugin/calico : Calico | Create Calico Kubernetes datastore resources] ***
skipping: [dev-worker0]
ok: [dev-master0]

TASK [network_plugin/calico : Calico | Get existing FelixConfiguration] ********
skipping: [dev-worker0]
fatal: [dev-master0]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "felixconfig", "default", "-o", "json"], "delta": "0:00:00.170073", "end": "2022-07-13 22:25:23.028320", "msg": "non-zero return code", "rc": 1, "start": "2022-07-13 22:25:22.858247", "stderr": "resource does not exist: FelixConfiguration(default) with error: felixconfigurations.crd.projectcalico.org \"default\" not found", "stderr_lines": ["resource does not exist: FelixConfiguration(default) with error: felixconfigurations.crd.projectcalico.org \"default\" not found"], "stdout": "null", "stdout_lines": ["null"]}
...ignoring

TASK [network_plugin/calico : Calico | Set kubespray FelixConfiguration] *******
skipping: [dev-worker0]
ok: [dev-master0]

TASK [network_plugin/calico : Calico | Process FelixConfiguration] *************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Configure calico FelixConfiguration] ****
skipping: [dev-worker0]
ok: [dev-master0]

TASK [network_plugin/calico : Calico | Get existing calico network pool] *******
skipping: [dev-worker0]
fatal: [dev-master0]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "ippool", "default-pool", "-o", "json"], "delta": "0:00:00.119846", "end": "2022-07-13 22:25:34.974918", "msg": "non-zero return code", "rc": 1, "start": "2022-07-13 22:25:34.855072", "stderr": "resource does not exist: IPPool(default-pool) with error: ippools.crd.projectcalico.org \"default-pool\" not found", "stderr_lines": ["resource does not exist: IPPool(default-pool) with error: ippools.crd.projectcalico.org \"default-pool\" not found"], "stdout": "null", "stdout_lines": ["null"]}
...ignoring

TASK [network_plugin/calico : Calico | Set kubespray calico network pool] ******
skipping: [dev-worker0]
ok: [dev-master0]

TASK [network_plugin/calico : Calico | Process calico network pool] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Configure calico network pool] **********
skipping: [dev-worker0]
ok: [dev-master0]

TASK [network_plugin/calico : Calico | Get existing calico ipv6 network pool] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Set kubespray calico network pool] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Process calico ipv6 network pool] *******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Configure calico ipv6 network pool] *****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Populate Service External IPs] *******************

TASK [network_plugin/calico : Populate Service LoadBalancer IPs] ***************

TASK [network_plugin/calico : Determine nodeToNodeMesh needed state] ***********
skipping: [dev-worker0]

TASK [network_plugin/calico : Calico | Get existing BGP Configuration] *********
skipping: [dev-worker0]
fatal: [dev-master0]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "bgpconfig", "default", "-o", "json"], "delta": "0:00:00.112452", "end": "2022-07-13 22:25:46.491104", "msg": "non-zero return code", "rc": 1, "start": "2022-07-13 22:25:46.378652", "stderr": "resource does not exist: BGPConfiguration(default) with error: bgpconfigurations.crd.projectcalico.org \"default\" not found", "stderr_lines": ["resource does not exist: BGPConfiguration(default) with error: bgpconfigurations.crd.projectcalico.org \"default\" not found"], "stdout": "null", "stdout_lines": ["null"]}
...ignoring

TASK [network_plugin/calico : Calico | Set kubespray BGP Configuration] ********
skipping: [dev-worker0]
ok: [dev-master0]

TASK [network_plugin/calico : Calico | Process BGP Configuration] **************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Set up BGP Configuration] ***************
skipping: [dev-worker0]
ok: [dev-master0]

TASK [network_plugin/calico : Calico | Configure peering with router(s) at global scope] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Configure peering with route reflectors at global scope] ***

TASK [network_plugin/calico : Calico | Configure route reflectors to peer with each other] ***

TASK [network_plugin/calico : Calico | Create calico manifests] ****************
skipping: [dev-worker0] => (item={'name': 'calico-config', 'file': 'calico-config.yml', 'type': 'cm'}) 
skipping: [dev-worker0] => (item={'name': 'calico-node', 'file': 'calico-node.yml', 'type': 'ds'}) 
skipping: [dev-worker0] => (item={'name': 'calico', 'file': 'calico-node-sa.yml', 'type': 'sa'}) 
skipping: [dev-worker0] => (item={'name': 'calico', 'file': 'calico-cr.yml', 'type': 'clusterrole'}) 
skipping: [dev-worker0] => (item={'name': 'calico', 'file': 'calico-crb.yml', 'type': 'clusterrolebinding'}) 
skipping: [dev-worker0] => (item={'name': 'kubernetes-services-endpoint', 'file': 'kubernetes-services-endpoint.yml', 'type': 'cm'}) 
changed: [dev-master0] => (item={'name': 'calico-config', 'file': 'calico-config.yml', 'type': 'cm'})
changed: [dev-master0] => (item={'name': 'calico-node', 'file': 'calico-node.yml', 'type': 'ds'})
changed: [dev-master0] => (item={'name': 'calico', 'file': 'calico-node-sa.yml', 'type': 'sa'})
changed: [dev-master0] => (item={'name': 'calico', 'file': 'calico-cr.yml', 'type': 'clusterrole'})
changed: [dev-master0] => (item={'name': 'calico', 'file': 'calico-crb.yml', 'type': 'clusterrolebinding'})
changed: [dev-master0] => (item={'name': 'kubernetes-services-endpoint', 'file': 'kubernetes-services-endpoint.yml', 'type': 'cm'})

TASK [network_plugin/calico : Calico | Create calico manifests for typha] ******
skipping: [dev-worker0] => (item={'name': 'calico', 'file': 'calico-typha.yml', 'type': 'typha'}) 
skipping: [dev-master0] => (item={'name': 'calico', 'file': 'calico-typha.yml', 'type': 'typha'}) 

TASK [network_plugin/calico : Calico | get calico apiserver caBundle] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | set calico apiserver caBundle fact] *****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Create calico manifests for apiserver] ***
skipping: [dev-worker0] => (item={'name': 'calico', 'file': 'calico-apiserver.yml', 'type': 'calico-apiserver'}) 
skipping: [dev-master0] => (item={'name': 'calico', 'file': 'calico-apiserver.yml', 'type': 'calico-apiserver'}) 

TASK [network_plugin/calico : Start Calico resources] **************************
skipping: [dev-worker0] => (item=calico-config.yml) 
skipping: [dev-worker0] => (item=calico-node.yml) 
skipping: [dev-worker0] => (item=calico-node-sa.yml) 
skipping: [dev-worker0] => (item=calico-cr.yml) 
skipping: [dev-worker0] => (item=calico-crb.yml) 
skipping: [dev-worker0] => (item=kubernetes-services-endpoint.yml) 
skipping: [dev-worker0] => (item=calico-typha.yml) 
ok: [dev-master0] => (item=calico-config.yml)
ok: [dev-master0] => (item=calico-node.yml)
ok: [dev-master0] => (item=calico-node-sa.yml)
ok: [dev-master0] => (item=calico-cr.yml)
ok: [dev-master0] => (item=calico-crb.yml)
ok: [dev-master0] => (item=kubernetes-services-endpoint.yml)
skipping: [dev-master0] => (item=calico-typha.yml) 

TASK [network_plugin/calico : Start Calico apiserver resources] ****************
skipping: [dev-worker0] => (item=calico-apiserver.yml) 
skipping: [dev-master0] => (item=calico-apiserver.yml) 

TASK [network_plugin/calico : Wait for calico kubeconfig to be created] ********
skipping: [dev-master0]
ok: [dev-worker0]

TASK [network_plugin/calico : Calico | Configure node asNumber for per node peering] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Configure peering with router(s) at node scope] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/calico : Calico | Create Calico ipam manifests] ***********
skipping: [dev-worker0] => (item={'name': 'calico', 'file': 'calico-ipamconfig.yml', 'type': 'ipam'}) 
changed: [dev-master0] => (item={'name': 'calico', 'file': 'calico-ipamconfig.yml', 'type': 'ipam'})

TASK [network_plugin/calico : Calico | Create ipamconfig resources] ************
skipping: [dev-worker0]
ok: [dev-master0]

TASK [network_plugin/cni : CNI | make sure /opt/cni/bin exists] ****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cni : CNI | Copy cni plugins] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/flannel : Flannel | Create Flannel manifests] *************
skipping: [dev-worker0] => (item={'name': 'flannel', 'file': 'cni-flannel-rbac.yml', 'type': 'sa'}) 
skipping: [dev-worker0] => (item={'name': 'kube-flannel', 'file': 'cni-flannel.yml', 'type': 'ds'}) 
skipping: [dev-master0] => (item={'name': 'flannel', 'file': 'cni-flannel-rbac.yml', 'type': 'sa'}) 
skipping: [dev-master0] => (item={'name': 'kube-flannel', 'file': 'cni-flannel.yml', 'type': 'ds'}) 

TASK [network_plugin/cni : CNI | make sure /opt/cni/bin exists] ****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cni : CNI | Copy cni plugins] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/weave : Weave | Create manifest] **************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/weave : Weave | Fix nodePort for Weave] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/canal : Canal | Write Canal cni config] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/canal : Canal | Create canal certs directory] *************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/canal : Canal | Link etcd certificates for canal-node] ****
skipping: [dev-worker0] => (item={'s': 'ca.pem', 'd': 'ca_cert.crt'}) 
skipping: [dev-worker0] => (item={'s': 'node-dev-worker0.pem', 'd': 'cert.crt'}) 
skipping: [dev-worker0] => (item={'s': 'node-dev-worker0-key.pem', 'd': 'key.pem'}) 
skipping: [dev-master0] => (item={'s': 'ca.pem', 'd': 'ca_cert.crt'}) 
skipping: [dev-master0] => (item={'s': 'node-dev-master0.pem', 'd': 'cert.crt'}) 
skipping: [dev-master0] => (item={'s': 'node-dev-master0-key.pem', 'd': 'key.pem'}) 

TASK [network_plugin/canal : Canal | Set Flannel etcd configuration] ***********
skipping: [dev-worker0]

TASK [network_plugin/canal : Canal | Create canal node manifests] **************
skipping: [dev-worker0] => (item={'name': 'canal-config', 'file': 'canal-config.yaml', 'type': 'cm'}) 
skipping: [dev-worker0] => (item={'name': 'canal-node', 'file': 'canal-node.yaml', 'type': 'ds'}) 
skipping: [dev-worker0] => (item={'name': 'canal', 'file': 'canal-node-sa.yml', 'type': 'sa'}) 
skipping: [dev-worker0] => (item={'name': 'calico', 'file': 'canal-cr-calico.yml', 'type': 'clusterrole'}) 
skipping: [dev-worker0] => (item={'name': 'flannel', 'file': 'canal-cr-flannel.yml', 'type': 'clusterrole'}) 
skipping: [dev-worker0] => (item={'name': 'canal-calico', 'file': 'canal-crb-calico.yml', 'type': 'clusterrolebinding'}) 
skipping: [dev-worker0] => (item={'name': 'canal-flannel', 'file': 'canal-crb-flannel.yml', 'type': 'clusterrolebinding'}) 
skipping: [dev-master0] => (item={'name': 'canal-config', 'file': 'canal-config.yaml', 'type': 'cm'}) 
skipping: [dev-master0] => (item={'name': 'canal-node', 'file': 'canal-node.yaml', 'type': 'ds'}) 
skipping: [dev-master0] => (item={'name': 'canal', 'file': 'canal-node-sa.yml', 'type': 'sa'}) 
skipping: [dev-master0] => (item={'name': 'calico', 'file': 'canal-cr-calico.yml', 'type': 'clusterrole'}) 
skipping: [dev-master0] => (item={'name': 'flannel', 'file': 'canal-cr-flannel.yml', 'type': 'clusterrole'}) 
skipping: [dev-master0] => (item={'name': 'canal-calico', 'file': 'canal-crb-calico.yml', 'type': 'clusterrolebinding'}) 
skipping: [dev-master0] => (item={'name': 'canal-flannel', 'file': 'canal-crb-flannel.yml', 'type': 'clusterrolebinding'}) 

TASK [network_plugin/canal : Canal | Install calicoctl wrapper script] *********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/canal : Canal | Create network policy directory] **********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cni : CNI | make sure /opt/cni/bin exists] ****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cni : CNI | Copy cni plugins] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cni : CNI | make sure /opt/cni/bin exists] ****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cni : CNI | Copy cni plugins] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/macvlan : Macvlan | Retrieve Pod Cidr] ********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/macvlan : Macvlan | set node_pod_cidr] ********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/macvlan : Macvlan | Retrieve default gateway network interface] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/macvlan : Macvlan | set node_default_gateway_interface] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/macvlan : Macvlan | Install network gateway interface on debian] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/macvlan : Macvlan | Install macvlan script on centos] *****
skipping: [dev-worker0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/network_plugin/macvlan/files/ifdown-macvlan) 
skipping: [dev-worker0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/network_plugin/macvlan/files/ifup-macvlan) 
skipping: [dev-worker0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/network_plugin/macvlan/files/ifdown-local) 
skipping: [dev-worker0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/network_plugin/macvlan/files/ifup-local) 
skipping: [dev-master0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/network_plugin/macvlan/files/ifdown-macvlan) 
skipping: [dev-master0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/network_plugin/macvlan/files/ifup-macvlan) 
skipping: [dev-master0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/network_plugin/macvlan/files/ifdown-local) 
skipping: [dev-master0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/network_plugin/macvlan/files/ifup-local) 

TASK [network_plugin/macvlan : Macvlan | Install post-up script on centos] *****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/macvlan : Macvlan | Install network gateway interface on centos] ***
skipping: [dev-worker0] => (item={'src': 'centos-network-macvlan.cfg', 'dst': 'ifcfg-mac0'}) 
skipping: [dev-worker0] => (item={'src': 'centos-routes-macvlan.cfg', 'dst': 'route-mac0'}) 
skipping: [dev-worker0] => (item={'src': 'centos-postup-macvlan.cfg', 'dst': 'post-up-mac0'}) 
skipping: [dev-master0] => (item={'src': 'centos-network-macvlan.cfg', 'dst': 'ifcfg-mac0'}) 
skipping: [dev-master0] => (item={'src': 'centos-routes-macvlan.cfg', 'dst': 'route-mac0'}) 
skipping: [dev-master0] => (item={'src': 'centos-postup-macvlan.cfg', 'dst': 'post-up-mac0'}) 

TASK [network_plugin/macvlan : Macvlan | Install service nat via gateway on Flatcar Container Linux] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/macvlan : Macvlan | Enable service nat via gateway on Flatcar Container Linux] ***
skipping: [dev-worker0] => (item=systemctl daemon-reload) 
skipping: [dev-worker0] => (item=systemctl enable enable_nat_ouside.service) 
skipping: [dev-master0] => (item=systemctl daemon-reload) 
skipping: [dev-master0] => (item=systemctl enable enable_nat_ouside.service) 

TASK [network_plugin/macvlan : Macvlan | Install network gateway interface on Flatcar Container Linux] ***
skipping: [dev-worker0] => (item={'src': 'coreos-device-macvlan.cfg', 'dst': 'macvlan.netdev'}) 
skipping: [dev-worker0] => (item={'src': 'coreos-interface-macvlan.cfg', 'dst': 'output.network'}) 
skipping: [dev-worker0] => (item={'src': 'coreos-network-macvlan.cfg', 'dst': 'macvlan.network'}) 
skipping: [dev-master0] => (item={'src': 'coreos-device-macvlan.cfg', 'dst': 'macvlan.netdev'}) 
skipping: [dev-master0] => (item={'src': 'coreos-interface-macvlan.cfg', 'dst': 'output.network'}) 
skipping: [dev-master0] => (item={'src': 'coreos-network-macvlan.cfg', 'dst': 'macvlan.network'}) 

TASK [network_plugin/macvlan : Macvlan | Install cni definition for Macvlan] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/macvlan : Macvlan | Install loopback definition for Macvlan] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/macvlan : Enable net.ipv4.conf.all.arp_notify in sysctl] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/kube-ovn : Kube-OVN | Label ovn-db node] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/kube-ovn : Kube-OVN | Create Kube-OVN manifests] **********
skipping: [dev-worker0] => (item={'name': 'kube-ovn-crd', 'file': 'cni-kube-ovn-crd.yml'}) 
skipping: [dev-worker0] => (item={'name': 'ovn', 'file': 'cni-ovn.yml'}) 
skipping: [dev-worker0] => (item={'name': 'kube-ovn', 'file': 'cni-kube-ovn.yml'}) 
skipping: [dev-master0] => (item={'name': 'kube-ovn-crd', 'file': 'cni-kube-ovn-crd.yml'}) 
skipping: [dev-master0] => (item={'name': 'ovn', 'file': 'cni-ovn.yml'}) 
skipping: [dev-master0] => (item={'name': 'kube-ovn', 'file': 'cni-kube-ovn.yml'}) 

TASK [network_plugin/cni : CNI | make sure /opt/cni/bin exists] ****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cni : CNI | Copy cni plugins] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/kube-router : kube-router | Add annotations on kube_control_plane] ***

TASK [network_plugin/kube-router : kube-router | Add annotations on kube_node] ***

TASK [network_plugin/kube-router : kube-router | Add common annotations on all servers] ***

TASK [network_plugin/kube-router : kube-router | Create config directory] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/kube-router : kube-router | Create kubeconfig] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/kube-router : kube-router | Slurp cni config] *************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/kube-router : kube-router | Set cni_config variable] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/kube-router : kube-router | Set host_subnet variable] *****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/kube-router : kube-router | Create cni config] ************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/kube-router : kube-router | Delete old configuration] *****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/kube-router : kube-router | Create manifest] **************
skipping: [dev-worker0]

TASK [network_plugin/cni : CNI | make sure /opt/cni/bin exists] ****************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/cni : CNI | Copy cni plugins] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [network_plugin/multus : Multus | Copy manifest files] ********************
skipping: [dev-worker0] => (item={'name': 'multus-crd', 'file': 'multus-crd.yml', 'type': 'customresourcedefinition'}) 
skipping: [dev-worker0] => (item={'name': 'multus-serviceaccount', 'file': 'multus-serviceaccount.yml', 'type': 'serviceaccount'}) 
skipping: [dev-worker0] => (item={'name': 'multus-clusterrole', 'file': 'multus-clusterrole.yml', 'type': 'clusterrole'}) 
skipping: [dev-worker0] => (item={'name': 'multus-clusterrolebinding', 'file': 'multus-clusterrolebinding.yml', 'type': 'clusterrolebinding'}) 
skipping: [dev-master0] => (item={'name': 'multus-crd', 'file': 'multus-crd.yml', 'type': 'customresourcedefinition'}) 
skipping: [dev-master0] => (item={'name': 'multus-serviceaccount', 'file': 'multus-serviceaccount.yml', 'type': 'serviceaccount'}) 
skipping: [dev-master0] => (item={'name': 'multus-clusterrole', 'file': 'multus-clusterrole.yml', 'type': 'clusterrole'}) 
skipping: [dev-master0] => (item={'name': 'multus-clusterrolebinding', 'file': 'multus-clusterrolebinding.yml', 'type': 'clusterrolebinding'}) 

TASK [network_plugin/multus : Multus | Copy manifest templates] ****************
skipping: [dev-worker0] => (item={'name': 'multus-daemonset', 'file': 'multus-daemonset.yml', 'type': 'daemonset'}) 
skipping: [dev-master0] => (item={'name': 'multus-daemonset', 'file': 'multus-daemonset.yml', 'type': 'daemonset'}) 

RUNNING HANDLER [kubernetes/kubeadm : Kubeadm | restart kubelet] ***************
changed: [dev-worker0]

RUNNING HANDLER [kubernetes/kubeadm : Kubeadm | reload systemd] ****************
ok: [dev-worker0]

RUNNING HANDLER [kubernetes/kubeadm : Kubeadm | reload kubelet] ****************
changed: [dev-worker0]

RUNNING HANDLER [network_plugin/calico : reset_calico_cni] *********************
skipping: [dev-master0]
skipping: [dev-worker0]

PLAY [calico_rr] ***************************************************************
skipping: no hosts matched

PLAY [kube_control_plane[0]] ***************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [dev-master0]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [dev-master0]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [dev-master0]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [dev-master0]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [dev-master0]

TASK [download : prep_download | Register docker images info] ******************
skipping: [dev-master0]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [dev-master0]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [dev-master0]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
skipping: [dev-master0]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [dev-master0]

TASK [download : download | Download files / images] ***************************
skipping: [dev-master0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-master0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-apiserver', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-controller-manager', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-scheduler', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-proxy', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [dev-master0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [dev-master0] => (item=dev-worker0) 
skipping: [dev-master0] => (item=dev-master0) 
skipping: [dev-master0] => (item=dev-master0) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [dev-master0]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [dev-master0]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [dev-master0]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [dev-master0]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [dev-master0]

TASK [win_nodes/kubernetes_patch : Ensure that user manifests directory exists] ***
changed: [dev-master0]

TASK [win_nodes/kubernetes_patch : Check current nodeselector for kube-proxy daemonset] ***
ok: [dev-master0]

TASK [win_nodes/kubernetes_patch : Apply nodeselector patch for kube-proxy daemonset] ***
changed: [dev-master0]

TASK [win_nodes/kubernetes_patch : debug] **************************************
ok: [dev-master0] => {
    "msg": [
        "daemonset.apps/kube-proxy patched (no change)"
    ]
}

TASK [win_nodes/kubernetes_patch : debug] **************************************
ok: [dev-master0] => {
    "msg": []
}

PLAY [kube_control_plane] ******************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [dev-master0]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [dev-master0]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [dev-master0]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [dev-master0]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [dev-master0]

TASK [download : prep_download | Register docker images info] ******************
skipping: [dev-master0]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [dev-master0]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [dev-master0]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
skipping: [dev-master0]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [dev-master0]

TASK [download : download | Download files / images] ***************************
skipping: [dev-master0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-master0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-apiserver', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-controller-manager', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-scheduler', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-proxy', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [dev-master0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [dev-master0] => (item=dev-worker0) 
skipping: [dev-master0] => (item=dev-master0) 
skipping: [dev-master0] => (item=dev-master0) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [dev-master0]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [dev-master0]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [dev-master0]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [dev-master0]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_cloud_controller/openstack : include_tasks] *****
skipping: [dev-master0]

TASK [kubernetes-apps/external_cloud_controller/openstack : External OpenStack Cloud Controller | Get base64 cacert] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_cloud_controller/openstack : External OpenStack Cloud Controller | Get base64 cloud-config] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_cloud_controller/openstack : External OpenStack Cloud Controller | Generate Manifests] ***
skipping: [dev-master0] => (item={'name': 'external-openstack-cloud-config-secret', 'file': 'external-openstack-cloud-config-secret.yml'}) 
skipping: [dev-master0] => (item={'name': 'external-openstack-cloud-controller-manager-roles', 'file': 'external-openstack-cloud-controller-manager-roles.yml'}) 
skipping: [dev-master0] => (item={'name': 'external-openstack-cloud-controller-manager-role-bindings', 'file': 'external-openstack-cloud-controller-manager-role-bindings.yml'}) 
skipping: [dev-master0] => (item={'name': 'external-openstack-cloud-controller-manager-ds', 'file': 'external-openstack-cloud-controller-manager-ds.yml'}) 

TASK [kubernetes-apps/external_cloud_controller/openstack : External OpenStack Cloud Controller | Apply Manifests] ***
skipping: [dev-master0] => (item=external-openstack-cloud-config-secret.yml) 
skipping: [dev-master0] => (item=external-openstack-cloud-controller-manager-roles.yml) 
skipping: [dev-master0] => (item=external-openstack-cloud-controller-manager-role-bindings.yml) 
skipping: [dev-master0] => (item=external-openstack-cloud-controller-manager-ds.yml) 

TASK [kubernetes-apps/external_cloud_controller/vsphere : include_tasks] *******
skipping: [dev-master0]

TASK [kubernetes-apps/external_cloud_controller/vsphere : External vSphere Cloud Controller | Generate CPI cloud-config] ***
skipping: [dev-master0] => (item=external-vsphere-cpi-cloud-config) 

TASK [kubernetes-apps/external_cloud_controller/vsphere : External vSphere Cloud Controller | Generate Manifests] ***
skipping: [dev-master0] => (item=external-vsphere-cpi-cloud-config-secret.yml) 
skipping: [dev-master0] => (item=external-vsphere-cloud-controller-manager-roles.yml) 
skipping: [dev-master0] => (item=external-vsphere-cloud-controller-manager-role-bindings.yml) 
skipping: [dev-master0] => (item=external-vsphere-cloud-controller-manager-ds.yml) 

TASK [kubernetes-apps/external_cloud_controller/vsphere : External vSphere Cloud Provider Interface | Create a CPI configMap manifest] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_cloud_controller/vsphere : External vSphere Cloud Provider Interface | Apply a CPI configMap manifest] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_cloud_controller/vsphere : External vSphere Cloud Controller | Apply Manifests] ***
skipping: [dev-master0] => (item=external-vsphere-cpi-cloud-config-secret.yml) 
skipping: [dev-master0] => (item=external-vsphere-cloud-controller-manager-roles.yml) 
skipping: [dev-master0] => (item=external-vsphere-cloud-controller-manager-role-bindings.yml) 
skipping: [dev-master0] => (item=external-vsphere-cloud-controller-manager-ds.yml) 

TASK [kubernetes-apps/external_cloud_controller/hcloud : External Hcloud Cloud Controller | Generate Manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_cloud_controller/hcloud : External Hcloud Cloud Controller | Apply Manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/network_plugin/canal : Canal | Start Resources] **********
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'canal-config', 'file': 'canal-config.yaml', 'type': 'cm'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'canal-node', 'file': 'canal-node.yaml', 'type': 'ds'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'canal', 'file': 'canal-node-sa.yml', 'type': 'sa'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'calico', 'file': 'canal-cr-calico.yml', 'type': 'clusterrole'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'flannel', 'file': 'canal-cr-flannel.yml', 'type': 'clusterrole'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'canal-calico', 'file': 'canal-crb-calico.yml', 'type': 'clusterrolebinding'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'canal-flannel', 'file': 'canal-crb-flannel.yml', 'type': 'clusterrolebinding'}, 'ansible_loop_var': 'item'}) 

TASK [kubernetes-apps/network_plugin/flannel : Flannel | Start Resources] ******
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'flannel', 'file': 'cni-flannel-rbac.yml', 'type': 'sa'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'kube-flannel', 'file': 'cni-flannel.yml', 'type': 'ds'}, 'ansible_loop_var': 'item'}) 

TASK [kubernetes-apps/network_plugin/flannel : Flannel | Wait for flannel subnet.env file presence] ***
skipping: [dev-master0]

TASK [kubernetes-apps/network_plugin/kube-ovn : Kube-OVN | Start Resources] ****
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'kube-ovn-crd', 'file': 'cni-kube-ovn-crd.yml'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'ovn', 'file': 'cni-ovn.yml'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'kube-ovn', 'file': 'cni-kube-ovn.yml'}, 'ansible_loop_var': 'item'}) 

TASK [kubernetes-apps/network_plugin/weave : Weave | Start Resources] **********
skipping: [dev-master0]

TASK [kubernetes-apps/network_plugin/weave : Weave | Wait for Weave to become available] ***
skipping: [dev-master0]

TASK [kubernetes-apps/network_plugin/kube-router : kube-router | Start Resources] ***
skipping: [dev-master0]

TASK [kubernetes-apps/network_plugin/kube-router : kube-router | Wait for kube-router pods to be ready] ***
skipping: [dev-master0]

TASK [kubernetes-apps/network_plugin/multus : Multus | Start resources] ********
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'multus-crd', 'file': 'multus-crd.yml', 'type': 'customresourcedefinition'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'multus-serviceaccount', 'file': 'multus-serviceaccount.yml', 'type': 'serviceaccount'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'multus-clusterrole', 'file': 'multus-clusterrole.yml', 'type': 'clusterrole'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'multus-clusterrolebinding', 'file': 'multus-clusterrolebinding.yml', 'type': 'clusterrolebinding'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'multus-daemonset', 'file': 'multus-daemonset.yml', 'type': 'daemonset'}, 'ansible_loop_var': 'item'}) 

TASK [policy_controller/calico : Set cert dir] *********************************
skipping: [dev-master0]

TASK [policy_controller/calico : Create calico-kube-controllers manifests] *****
changed: [dev-master0] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-controllers.yml', 'type': 'deployment'})
changed: [dev-master0] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-sa.yml', 'type': 'sa'})
changed: [dev-master0] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-cr.yml', 'type': 'clusterrole'})
changed: [dev-master0] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-crb.yml', 'type': 'clusterrolebinding'})

TASK [policy_controller/calico : Start of Calico kube controllers] *************
ok: [dev-master0] => (item=calico-kube-controllers.yml)
ok: [dev-master0] => (item=calico-kube-sa.yml)
ok: [dev-master0] => (item=calico-kube-cr.yml)
ok: [dev-master0] => (item=calico-kube-crb.yml)

TASK [policy_controller/calico : Set cert dir] *********************************
skipping: [dev-master0]

TASK [policy_controller/calico : Create calico-kube-controllers manifests] *****
skipping: [dev-master0] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-controllers.yml', 'type': 'deployment'}) 
skipping: [dev-master0] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-sa.yml', 'type': 'sa'}) 
skipping: [dev-master0] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-cr.yml', 'type': 'clusterrole'}) 
skipping: [dev-master0] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-crb.yml', 'type': 'clusterrolebinding'}) 

TASK [policy_controller/calico : Start of Calico kube controllers] *************
skipping: [dev-master0] => (item=calico-kube-controllers.yml) 
skipping: [dev-master0] => (item=calico-kube-sa.yml) 
skipping: [dev-master0] => (item=calico-kube-cr.yml) 
skipping: [dev-master0] => (item=calico-kube-crb.yml) 

TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Create addon dir] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Templates list] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Append extra templates to NGINX Ingress Templates list for PodSecurityPolicy] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Create manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Apply manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ingress_controller/cert_manager : Cert Manager | Remove legacy addon dir and manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ingress_controller/cert_manager : Cert Manager | Remove legacy namespace] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ingress_controller/cert_manager : Cert Manager | Create addon dir] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ingress_controller/cert_manager : Cert Manager | Templates list] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ingress_controller/cert_manager : Cert Manager | Create manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ingress_controller/cert_manager : Cert Manager | Apply manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ingress_controller/alb_ingress_controller : ALB Ingress Controller | Create addon dir] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ingress_controller/alb_ingress_controller : ALB Ingress Controller | Create manifests] ***
skipping: [dev-master0] => (item={'name': 'alb-ingress-clusterrole', 'file': 'alb-ingress-clusterrole.yml', 'type': 'clusterrole'}) 
skipping: [dev-master0] => (item={'name': 'alb-ingress-clusterrolebinding', 'file': 'alb-ingress-clusterrolebinding.yml', 'type': 'clusterrolebinding'}) 
skipping: [dev-master0] => (item={'name': 'alb-ingress-ns', 'file': 'alb-ingress-ns.yml', 'type': 'ns'}) 
skipping: [dev-master0] => (item={'name': 'alb-ingress-sa', 'file': 'alb-ingress-sa.yml', 'type': 'sa'}) 
skipping: [dev-master0] => (item={'name': 'alb-ingress-deploy', 'file': 'alb-ingress-deploy.yml', 'type': 'deploy'}) 

TASK [kubernetes-apps/ingress_controller/alb_ingress_controller : ALB Ingress Controller | Apply manifests] ***
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'alb-ingress-clusterrole', 'file': 'alb-ingress-clusterrole.yml', 'type': 'clusterrole'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'alb-ingress-clusterrolebinding', 'file': 'alb-ingress-clusterrolebinding.yml', 'type': 'clusterrolebinding'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'alb-ingress-ns', 'file': 'alb-ingress-ns.yml', 'type': 'ns'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'alb-ingress-sa', 'file': 'alb-ingress-sa.yml', 'type': 'sa'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'alb-ingress-deploy', 'file': 'alb-ingress-deploy.yml', 'type': 'deploy'}, 'ansible_loop_var': 'item'}) 

TASK [kubernetes-apps/external_provisioner/local_volume_provisioner : Local Volume Provisioner | Ensure base dir is created on all hosts] ***
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/kubernetes-apps/external_provisioner/local_volume_provisioner/tasks/basedirs.yml for dev-master0 => (item=['dev-worker0', 'local-storage'])
included: /home/avatar/dev/c7-d0/ansible/kubespray/roles/kubernetes-apps/external_provisioner/local_volume_provisioner/tasks/basedirs.yml for dev-master0 => (item=['dev-master0', 'local-storage'])

TASK [kubernetes-apps/external_provisioner/local_volume_provisioner : Local Volume Provisioner | Ensure base dir local-storage is created on dev-worker0] ***
ok: [dev-master0 -> dev-worker0(192.168.33.11)]

TASK [kubernetes-apps/external_provisioner/local_volume_provisioner : Local Volume Provisioner | Ensure base dir local-storage is created on dev-master0] ***
ok: [dev-master0]

TASK [kubernetes-apps/external_provisioner/local_volume_provisioner : Local Volume Provisioner | Create addon dir] ***
changed: [dev-master0]

TASK [kubernetes-apps/external_provisioner/local_volume_provisioner : Local Volume Provisioner | Templates list] ***
ok: [dev-master0]

TASK [kubernetes-apps/external_provisioner/local_volume_provisioner : Local Volume Provisioner | Insert extra templates to Local Volume Provisioner templates list for PodSecurityPolicy] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/local_volume_provisioner : Local Volume Provisioner | Create manifests] ***
changed: [dev-master0] => (item={'name': 'local-volume-provisioner-ns', 'file': 'local-volume-provisioner-ns.yml', 'type': 'ns'})
changed: [dev-master0] => (item={'name': 'local-volume-provisioner-sa', 'file': 'local-volume-provisioner-sa.yml', 'type': 'sa'})
changed: [dev-master0] => (item={'name': 'local-volume-provisioner-clusterrole', 'file': 'local-volume-provisioner-clusterrole.yml', 'type': 'clusterrole'})
changed: [dev-master0] => (item={'name': 'local-volume-provisioner-clusterrolebinding', 'file': 'local-volume-provisioner-clusterrolebinding.yml', 'type': 'clusterrolebinding'})
changed: [dev-master0] => (item={'name': 'local-volume-provisioner-cm', 'file': 'local-volume-provisioner-cm.yml', 'type': 'cm'})
changed: [dev-master0] => (item={'name': 'local-volume-provisioner-ds', 'file': 'local-volume-provisioner-ds.yml', 'type': 'ds'})
changed: [dev-master0] => (item={'name': 'local-volume-provisioner-sc', 'file': 'local-volume-provisioner-sc.yml', 'type': 'sc'})

TASK [kubernetes-apps/external_provisioner/local_volume_provisioner : Local Volume Provisioner | Apply manifests] ***
ok: [dev-master0] => (item=local-volume-provisioner-ns.yml)
ok: [dev-master0] => (item=local-volume-provisioner-sa.yml)
ok: [dev-master0] => (item=local-volume-provisioner-clusterrole.yml)
ok: [dev-master0] => (item=local-volume-provisioner-clusterrolebinding.yml)
ok: [dev-master0] => (item=local-volume-provisioner-cm.yml)
ok: [dev-master0] => (item=local-volume-provisioner-ds.yml)
ok: [dev-master0] => (item=local-volume-provisioner-sc.yml)

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Remove legacy addon dir and manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Remove legacy namespace] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Remove legacy storageclass] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Create addon dir] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Templates list] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Append extra templates to CephFS Provisioner Templates list for PodSecurityPolicy] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Create manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/cephfs_provisioner : CephFS Provisioner | Apply manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Remove legacy addon dir and manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Remove legacy namespace] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Remove legacy storageclass] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Create addon dir] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Templates list] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Append extra templates to RBD Provisioner Templates list for PodSecurityPolicy] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Create manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/rbd_provisioner : RBD Provisioner | Apply manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/local_path_provisioner : Local Path Provisioner | Create addon dir] ***
changed: [dev-master0]

TASK [kubernetes-apps/external_provisioner/local_path_provisioner : Local Path Provisioner | Create claim root dir] ***
changed: [dev-master0]

TASK [kubernetes-apps/external_provisioner/local_path_provisioner : Local Path Provisioner | Render Template] ***
ok: [dev-master0]

TASK [kubernetes-apps/external_provisioner/local_path_provisioner : Local Path Provisioner | Insert extra templates to Local Path Provisioner templates list for PodSecurityPolicy] ***
skipping: [dev-master0]

TASK [kubernetes-apps/external_provisioner/local_path_provisioner : Local Path Provisioner | Create manifests] ***
changed: [dev-master0] => (item={'name': 'local-path-storage-ns', 'file': 'local-path-storage-ns.yml', 'type': 'ns'})
changed: [dev-master0] => (item={'name': 'local-path-storage-sa', 'file': 'local-path-storage-sa.yml', 'type': 'sa'})
changed: [dev-master0] => (item={'name': 'local-path-storage-cr', 'file': 'local-path-storage-cr.yml', 'type': 'cr'})
changed: [dev-master0] => (item={'name': 'local-path-storage-clusterrolebinding', 'file': 'local-path-storage-clusterrolebinding.yml', 'type': 'clusterrolebinding'})
changed: [dev-master0] => (item={'name': 'local-path-storage-cm', 'file': 'local-path-storage-cm.yml', 'type': 'cm'})
changed: [dev-master0] => (item={'name': 'local-path-storage-deployment', 'file': 'local-path-storage-deployment.yml', 'type': 'deployment'})
changed: [dev-master0] => (item={'name': 'local-path-storage-sc', 'file': 'local-path-storage-sc.yml', 'type': 'sc'})

TASK [kubernetes-apps/external_provisioner/local_path_provisioner : Local Path Provisioner | Apply manifests] ***
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/local_path_provisioner/local-path-storage-ns.yml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751548.49715-1375481-85880361164278/source', 'md5sum': 'ae2cd547a9ac4b01f3be45671ee9e876', 'checksum': 'e48a3bbdbc8f618eac7a8da4ac344b70ae8a0879', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 72, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751548.49715-1375481-85880361164278/source', 'dest': '/etc/kubernetes/addons/local_path_provisioner/local-path-storage-ns.yml', 'mode': 420, 'follow': False, '_original_basename': 'local-path-storage-ns.yml.j2', 'checksum': 'e48a3bbdbc8f618eac7a8da4ac344b70ae8a0879', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'local-path-storage-ns', 'file': 'local-path-storage-ns.yml', 'type': 'ns'}, 'ansible_loop_var': 'item'})
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/local_path_provisioner/local-path-storage-sa.yml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751559.1575286-1375481-14221480469998/source', 'md5sum': '9026c7b25157e2486501bd92c2462ca4', 'checksum': '62c16dc0edf0cb7706c2404516e28c4e48626f35', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 129, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751559.1575286-1375481-14221480469998/source', 'dest': '/etc/kubernetes/addons/local_path_provisioner/local-path-storage-sa.yml', 'mode': 420, 'follow': False, '_original_basename': 'local-path-storage-sa.yml.j2', 'checksum': '62c16dc0edf0cb7706c2404516e28c4e48626f35', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'local-path-storage-sa', 'file': 'local-path-storage-sa.yml', 'type': 'sa'}, 'ansible_loop_var': 'item'})
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/local_path_provisioner/local-path-storage-cr.yml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751570.0136633-1375481-61741987770552/source', 'md5sum': '5dd02c6be63af99d5409d82129af7f9b', 'checksum': '541c7318bf23314f073e1d2d2e43a27c48ad5a6e', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 513, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751570.0136633-1375481-61741987770552/source', 'dest': '/etc/kubernetes/addons/local_path_provisioner/local-path-storage-cr.yml', 'mode': 420, 'follow': False, '_original_basename': 'local-path-storage-cr.yml.j2', 'checksum': '541c7318bf23314f073e1d2d2e43a27c48ad5a6e', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'local-path-storage-cr', 'file': 'local-path-storage-cr.yml', 'type': 'cr'}, 'ansible_loop_var': 'item'})
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/local_path_provisioner/local-path-storage-clusterrolebinding.yml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751580.9457934-1375481-29366512737094/source', 'md5sum': '5627ede9c9ac8ad27b9fa59a5a7d85f7', 'checksum': 'efeef0935202aa1006ff8cf25692ae069ddcaef4', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 337, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751580.9457934-1375481-29366512737094/source', 'dest': '/etc/kubernetes/addons/local_path_provisioner/local-path-storage-clusterrolebinding.yml', 'mode': 420, 'follow': False, '_original_basename': 'local-path-storage-clusterrolebinding.yml.j2', 'checksum': 'efeef0935202aa1006ff8cf25692ae069ddcaef4', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'local-path-storage-clusterrolebinding', 'file': 'local-path-storage-clusterrolebinding.yml', 'type': 'clusterrolebinding'}, 'ansible_loop_var': 'item'})
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/local_path_provisioner/local-path-storage-cm.yml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751592.2000022-1375481-110537394453587/source', 'md5sum': '4f9d0fb05eec1dc2d1a46c73042c1522', 'checksum': 'bc754eeb69c619f5add38ee9932650dbd5f0505e', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 1340, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751592.2000022-1375481-110537394453587/source', 'dest': '/etc/kubernetes/addons/local_path_provisioner/local-path-storage-cm.yml', 'mode': 420, 'follow': False, '_original_basename': 'local-path-storage-cm.yml.j2', 'checksum': 'bc754eeb69c619f5add38ee9932650dbd5f0505e', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'local-path-storage-cm', 'file': 'local-path-storage-cm.yml', 'type': 'cm'}, 'ansible_loop_var': 'item'})
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/local_path_provisioner/local-path-storage-deployment.yml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751603.489709-1375481-192305576020668/source', 'md5sum': 'bea5ecf8a7b562e5af856714258a3f50', 'checksum': 'dc91b774997d892ac3d2044ec94bda390e6c5bf6', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 942, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751603.489709-1375481-192305576020668/source', 'dest': '/etc/kubernetes/addons/local_path_provisioner/local-path-storage-deployment.yml', 'mode': 420, 'follow': False, '_original_basename': 'local-path-storage-deployment.yml.j2', 'checksum': 'dc91b774997d892ac3d2044ec94bda390e6c5bf6', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'local-path-storage-deployment', 'file': 'local-path-storage-deployment.yml', 'type': 'deployment'}, 'ansible_loop_var': 'item'})
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/local_path_provisioner/local-path-storage-sc.yml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751614.608201-1375481-29113780745333/source', 'md5sum': '3679441b34b6a82675d3430157c07aad', 'checksum': '525c1fe790f7a638860a9c359365f8cc249dc80f', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 251, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751614.608201-1375481-29113780745333/source', 'dest': '/etc/kubernetes/addons/local_path_provisioner/local-path-storage-sc.yml', 'mode': 420, 'follow': False, '_original_basename': 'local-path-storage-sc.yml.j2', 'checksum': '525c1fe790f7a638860a9c359365f8cc249dc80f', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'local-path-storage-sc', 'file': 'local-path-storage-sc.yml', 'type': 'sc'}, 'ansible_loop_var': 'item'})

TASK [kubernetes-apps/ansible : Kubernetes Apps | Wait for kube-apiserver] *****
ok: [dev-master0]

TASK [kubernetes-apps/ansible : Kubernetes Apps | Register coredns deployment annotation `createdby`] ***
fatal: [dev-master0]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "get", "deploy", "-n", "kube-system", "coredns", "-o", "jsonpath={ .spec.template.metadata.annotations.createdby }"], "delta": "0:00:00.094045", "end": "2022-07-13 22:34:34.945680", "msg": "non-zero return code", "rc": 1, "start": "2022-07-13 22:34:34.851635", "stderr": "Error from server (NotFound): deployments.apps \"coredns\" not found", "stderr_lines": ["Error from server (NotFound): deployments.apps \"coredns\" not found"], "stdout": "", "stdout_lines": []}
...ignoring

TASK [kubernetes-apps/ansible : Kubernetes Apps | Register coredns service annotation `createdby`] ***
fatal: [dev-master0]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "get", "svc", "-n", "kube-system", "coredns", "-o", "jsonpath={ .metadata.annotations.createdby }"], "delta": "0:00:00.105138", "end": "2022-07-13 22:34:40.284573", "msg": "non-zero return code", "rc": 1, "start": "2022-07-13 22:34:40.179435", "stderr": "Error from server (NotFound): services \"coredns\" not found", "stderr_lines": ["Error from server (NotFound): services \"coredns\" not found"], "stdout": "", "stdout_lines": []}
...ignoring

TASK [kubernetes-apps/ansible : Kubernetes Apps | Delete kubeadm CoreDNS] ******
ok: [dev-master0]

TASK [kubernetes-apps/ansible : Kubernetes Apps | Delete kubeadm Kube-DNS service] ***
ok: [dev-master0]

TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down CoreDNS templates] ***
changed: [dev-master0] => (item={'name': 'coredns', 'file': 'coredns-clusterrole.yml', 'type': 'clusterrole'})
changed: [dev-master0] => (item={'name': 'coredns', 'file': 'coredns-clusterrolebinding.yml', 'type': 'clusterrolebinding'})
changed: [dev-master0] => (item={'name': 'coredns', 'file': 'coredns-config.yml', 'type': 'configmap'})
changed: [dev-master0] => (item={'name': 'coredns', 'file': 'coredns-deployment.yml', 'type': 'deployment'})
changed: [dev-master0] => (item={'name': 'coredns', 'file': 'coredns-sa.yml', 'type': 'sa'})
changed: [dev-master0] => (item={'name': 'coredns', 'file': 'coredns-svc.yml', 'type': 'svc'})
changed: [dev-master0] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler.yml', 'type': 'deployment'})
changed: [dev-master0] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler-clusterrole.yml', 'type': 'clusterrole'})
changed: [dev-master0] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler-clusterrolebinding.yml', 'type': 'clusterrolebinding'})
changed: [dev-master0] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler-sa.yml', 'type': 'sa'})

TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down Secondary CoreDNS Template] ***
skipping: [dev-master0] => (item={'name': 'coredns', 'src': 'coredns-deployment.yml', 'file': 'coredns-deployment-secondary.yml', 'type': 'deployment'}) 
skipping: [dev-master0] => (item={'name': 'coredns', 'src': 'coredns-svc.yml', 'file': 'coredns-svc-secondary.yml', 'type': 'svc'}) 
skipping: [dev-master0] => (item={'name': 'dns-autoscaler', 'src': 'dns-autoscaler.yml', 'file': 'coredns-autoscaler-secondary.yml', 'type': 'deployment'}) 

TASK [kubernetes-apps/ansible : Kubernetes Apps | set up necessary nodelocaldns parameters] ***
ok: [dev-master0]

TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down nodelocaldns Template] ***
changed: [dev-master0] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-config.yml', 'type': 'configmap'})
changed: [dev-master0] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-sa.yml', 'type': 'sa'})
changed: [dev-master0] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-daemonset.yml', 'type': 'daemonset'})

TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down nodelocaldns-secondary Template] ***
skipping: [dev-master0] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-second-daemonset.yml', 'type': 'daemonset'}) 

TASK [kubernetes-apps/ansible : Kubernetes Apps | Start Resources] *************
ok: [dev-master0] => (item=coredns-clusterrole.yml)
ok: [dev-master0] => (item=coredns-clusterrolebinding.yml)
ok: [dev-master0] => (item=coredns-config.yml)
ok: [dev-master0] => (item=coredns-deployment.yml)
ok: [dev-master0] => (item=coredns-sa.yml)
ok: [dev-master0] => (item=coredns-svc.yml)
ok: [dev-master0] => (item=dns-autoscaler.yml)
ok: [dev-master0] => (item=dns-autoscaler-clusterrole.yml)
ok: [dev-master0] => (item=dns-autoscaler-clusterrolebinding.yml)
ok: [dev-master0] => (item=dns-autoscaler-sa.yml)
skipping: [dev-master0] => (item=coredns-deployment-secondary.yml) 
skipping: [dev-master0] => (item=coredns-svc-secondary.yml) 
skipping: [dev-master0] => (item=coredns-autoscaler-secondary.yml) 
ok: [dev-master0] => (item=nodelocaldns-config.yml)
ok: [dev-master0] => (item=nodelocaldns-sa.yml)
ok: [dev-master0] => (item=nodelocaldns-daemonset.yml)
skipping: [dev-master0] => (item=nodelocaldns-second-daemonset.yml) 

TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay down etcd_metrics templates] ***
skipping: [dev-master0] => (item={'file': 'etcd_metrics-endpoints.yml', 'type': 'endpoints', 'name': 'etcd-metrics'}) 
skipping: [dev-master0] => (item={'file': 'etcd_metrics-service.yml', 'type': 'service', 'name': 'etcd-metrics'}) 

TASK [kubernetes-apps/ansible : Kubernetes Apps | Start etcd_metrics] **********
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'file': 'etcd_metrics-endpoints.yml', 'type': 'endpoints', 'name': 'etcd-metrics'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'file': 'etcd_metrics-service.yml', 'type': 'service', 'name': 'etcd-metrics'}, 'ansible_loop_var': 'item'}) 

TASK [kubernetes-apps/ansible : Kubernetes Apps | Check AppArmor status] *******
skipping: [dev-master0]

TASK [kubernetes-apps/ansible : Kubernetes Apps | Set apparmor_enabled] ********
skipping: [dev-master0]

TASK [kubernetes-apps/ansible : Kubernetes Apps | Netchecker Templates list] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ansible : Kubernetes Apps | Append extra templates to Netchecker Templates list for PodSecurityPolicy] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down Netchecker Template] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ansible : Kubernetes Apps | Start Netchecker Resources] ***
skipping: [dev-master0]

TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay down dashboard template] ***
skipping: [dev-master0] => (item={'file': 'dashboard.yml', 'type': 'deploy', 'name': 'kubernetes-dashboard'}) 

TASK [kubernetes-apps/ansible : Kubernetes Apps | Start dashboard] *************
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'file': 'dashboard.yml', 'type': 'deploy', 'name': 'kubernetes-dashboard'}, 'ansible_loop_var': 'item'}) 

TASK [kubernetes-apps/helm : Helm | Download helm] *****************************
skipping: [dev-master0]

TASK [kubernetes-apps/helm : Helm | Copy helm binary from download dir] ********
skipping: [dev-master0]

TASK [kubernetes-apps/helm : Helm | Get helm completion] ***********************
skipping: [dev-master0]

TASK [kubernetes-apps/helm : Helm | Install helm completion] *******************
skipping: [dev-master0]

TASK [kubernetes-apps/krew : Krew | Download krew] *****************************
skipping: [dev-master0]

TASK [kubernetes-apps/krew : Krew | krew env] **********************************
skipping: [dev-master0]

TASK [kubernetes-apps/krew : Krew | Copy krew manifest] ************************
skipping: [dev-master0]

TASK [kubernetes-apps/krew : Krew | Install krew] ******************************
skipping: [dev-master0]

TASK [kubernetes-apps/krew : Krew | Get krew completion] ***********************
skipping: [dev-master0]

TASK [kubernetes-apps/krew : Krew | Install krew completion] *******************
skipping: [dev-master0]

TASK [kubernetes-apps/krew : Krew | Download krew] *****************************
skipping: [dev-master0]

TASK [kubernetes-apps/krew : Krew | krew env] **********************************
skipping: [dev-master0]

TASK [kubernetes-apps/krew : Krew | Copy krew manifest] ************************
skipping: [dev-master0]

TASK [kubernetes-apps/krew : Krew | Install krew] ******************************
skipping: [dev-master0]

TASK [kubernetes-apps/krew : Krew | Get krew completion] ***********************
skipping: [dev-master0]

TASK [kubernetes-apps/krew : Krew | Install krew completion] *******************
skipping: [dev-master0]

TASK [kubernetes-apps/registry : Registry | check registry_service_type value] ***
skipping: [dev-master0]

TASK [kubernetes-apps/registry : Registry | Stop if registry_service_cluster_ip is defined when registry_service_type is not 'ClusterIP'] ***
skipping: [dev-master0]

TASK [kubernetes-apps/registry : Registry | Stop if registry_service_loadbalancer_ip is defined when registry_service_type is not 'LoadBalancer'] ***
skipping: [dev-master0]

TASK [kubernetes-apps/registry : Registry | Stop if registry_service_nodeport is defined when registry_service_type is not 'NodePort'] ***
skipping: [dev-master0]

TASK [kubernetes-apps/registry : Registry | Create addon dir] ******************
skipping: [dev-master0]

TASK [kubernetes-apps/registry : Registry | Templates list] ********************
skipping: [dev-master0]

TASK [kubernetes-apps/registry : Registry | Append extra templates to Registry Templates list for PodSecurityPolicy] ***
skipping: [dev-master0]

TASK [kubernetes-apps/registry : Registry | Append nginx ingress templates to Registry Templates list when ingress enabled] ***
skipping: [dev-master0] => (item={'name': 'registry-ing', 'file': 'registry-ing.yml', 'type': 'ing'}) 

TASK [kubernetes-apps/registry : Registry | Create manifests] ******************
skipping: [dev-master0]

TASK [kubernetes-apps/registry : Registry | Apply manifests] *******************
skipping: [dev-master0]

TASK [kubernetes-apps/registry : Registry | Create PVC manifests] **************
skipping: [dev-master0] => (item={'name': 'registry-pvc', 'file': 'registry-pvc.yml', 'type': 'pvc'}) 

TASK [kubernetes-apps/registry : Registry | Apply PVC manifests] ***************
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'registry-pvc', 'file': 'registry-pvc.yml', 'type': 'pvc'}, 'ansible_loop_var': 'item'}) 

TASK [kubernetes-apps/metrics_server : Check all masters are node or not] ******
ok: [dev-master0]

TASK [kubernetes-apps/metrics_server : Metrics Server | Delete addon dir] ******
ok: [dev-master0]

TASK [kubernetes-apps/metrics_server : Metrics Server | Create addon dir] ******
changed: [dev-master0]

TASK [kubernetes-apps/metrics_server : Metrics Server | Templates list] ********
ok: [dev-master0]

TASK [kubernetes-apps/metrics_server : Metrics Server | Create manifests] ******
changed: [dev-master0] => (item={'name': 'auth-delegator', 'file': 'auth-delegator.yaml', 'type': 'clusterrolebinding'})
changed: [dev-master0] => (item={'name': 'auth-reader', 'file': 'auth-reader.yaml', 'type': 'rolebinding'})
changed: [dev-master0] => (item={'name': 'metrics-server-sa', 'file': 'metrics-server-sa.yaml', 'type': 'sa'})
changed: [dev-master0] => (item={'name': 'metrics-server-deployment', 'file': 'metrics-server-deployment.yaml', 'type': 'deploy'})
changed: [dev-master0] => (item={'name': 'metrics-server-service', 'file': 'metrics-server-service.yaml', 'type': 'service'})
changed: [dev-master0] => (item={'name': 'metrics-apiservice', 'file': 'metrics-apiservice.yaml', 'type': 'service'})
changed: [dev-master0] => (item={'name': 'resource-reader-clusterrolebinding', 'file': 'resource-reader-clusterrolebinding.yaml', 'type': 'clusterrolebinding'})
changed: [dev-master0] => (item={'name': 'resource-reader', 'file': 'resource-reader.yaml', 'type': 'clusterrole'})

TASK [kubernetes-apps/metrics_server : Metrics Server | Apply manifests] *******
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/metrics_server/auth-delegator.yaml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751926.5674157-1376064-102172215591744/source', 'md5sum': 'a2e49286b8bbafb52f97f0368ff89c43', 'checksum': '8cfc753862a1346516e9c5e042e0cf676f10b4fa', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 356, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751926.5674157-1376064-102172215591744/source', 'dest': '/etc/kubernetes/addons/metrics_server/auth-delegator.yaml', 'mode': 420, 'follow': False, '_original_basename': 'auth-delegator.yaml.j2', 'checksum': '8cfc753862a1346516e9c5e042e0cf676f10b4fa', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'auth-delegator', 'file': 'auth-delegator.yaml', 'type': 'clusterrolebinding'}, 'ansible_loop_var': 'item'})
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/metrics_server/auth-reader.yaml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751937.6289682-1376064-260759260231589/source', 'md5sum': 'a39930ff9d867fbf611179c50d3df238', 'checksum': 'b3996d26650d597868c364128e541469818f30c5', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 377, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751937.6289682-1376064-260759260231589/source', 'dest': '/etc/kubernetes/addons/metrics_server/auth-reader.yaml', 'mode': 420, 'follow': False, '_original_basename': 'auth-reader.yaml.j2', 'checksum': 'b3996d26650d597868c364128e541469818f30c5', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'auth-reader', 'file': 'auth-reader.yaml', 'type': 'rolebinding'}, 'ansible_loop_var': 'item'})
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/metrics_server/metrics-server-sa.yaml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751948.7407568-1376064-101681171643421/source', 'md5sum': 'f00ec451a258e5b1e559d846372e5409', 'checksum': 'fe40a9b0eed0c5c27b769fe60501ebaf40feafb9', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 155, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751948.7407568-1376064-101681171643421/source', 'dest': '/etc/kubernetes/addons/metrics_server/metrics-server-sa.yaml', 'mode': 420, 'follow': False, '_original_basename': 'metrics-server-sa.yaml.j2', 'checksum': 'fe40a9b0eed0c5c27b769fe60501ebaf40feafb9', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'metrics-server-sa', 'file': 'metrics-server-sa.yaml', 'type': 'sa'}, 'ansible_loop_var': 'item'})
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/metrics_server/metrics-server-deployment.yaml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751959.9657583-1376064-260212929562458/source', 'md5sum': '443af71f342885886fd3939411401169', 'checksum': '4f4854b3a9492fdde8bf77dda20f8794799dab81', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 2571, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751959.9657583-1376064-260212929562458/source', 'dest': '/etc/kubernetes/addons/metrics_server/metrics-server-deployment.yaml', 'mode': 420, 'follow': False, '_original_basename': 'metrics-server-deployment.yaml.j2', 'checksum': '4f4854b3a9492fdde8bf77dda20f8794799dab81', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'metrics-server-deployment', 'file': 'metrics-server-deployment.yaml', 'type': 'deploy'}, 'ansible_loop_var': 'item'})
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/metrics_server/metrics-server-service.yaml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751971.2820745-1376064-67703545673986/source', 'md5sum': 'f7d491045015277ce9ed340a146b1686', 'checksum': '11587f8dea9295b1f158f96fbc1b6777d612466b', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 347, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751971.2820745-1376064-67703545673986/source', 'dest': '/etc/kubernetes/addons/metrics_server/metrics-server-service.yaml', 'mode': 420, 'follow': False, '_original_basename': 'metrics-server-service.yaml.j2', 'checksum': '11587f8dea9295b1f158f96fbc1b6777d612466b', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'metrics-server-service', 'file': 'metrics-server-service.yaml', 'type': 'service'}, 'ansible_loop_var': 'item'})
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/metrics_server/metrics-apiservice.yaml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751982.5338304-1376064-127495382737181/source', 'md5sum': 'ed1e6d9f13ca7c524245006a1f3f3a58', 'checksum': 'b19bf502a84bf126504527f20d46a74e55bbb5dd', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 346, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751982.5338304-1376064-127495382737181/source', 'dest': '/etc/kubernetes/addons/metrics_server/metrics-apiservice.yaml', 'mode': 420, 'follow': False, '_original_basename': 'metrics-apiservice.yaml.j2', 'checksum': 'b19bf502a84bf126504527f20d46a74e55bbb5dd', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'metrics-apiservice', 'file': 'metrics-apiservice.yaml', 'type': 'service'}, 'ansible_loop_var': 'item'})
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/metrics_server/resource-reader-clusterrolebinding.yaml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751993.817031-1376064-84180276344033/source', 'md5sum': 'fcc1f0bb7c7242dad4ac63a46421ba0f', 'checksum': '8fa6f59e380e7cd19b24a7cda2873e459218c718', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 345, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657751993.817031-1376064-84180276344033/source', 'dest': '/etc/kubernetes/addons/metrics_server/resource-reader-clusterrolebinding.yaml', 'mode': 420, 'follow': False, '_original_basename': 'resource-reader-clusterrolebinding.yaml.j2', 'checksum': '8fa6f59e380e7cd19b24a7cda2873e459218c718', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'resource-reader-clusterrolebinding', 'file': 'resource-reader-clusterrolebinding.yaml', 'type': 'clusterrolebinding'}, 'ansible_loop_var': 'item'})
ok: [dev-master0] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/metrics_server/resource-reader.yaml', 'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657752005.0791018-1376064-51682509412978/source', 'md5sum': '29be837905b09b4a56719eea56ca63e4', 'checksum': '68de1c12f565488cdd8ca6cbfb08159e8649a865', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 339, 'invocation': {'module_args': {'src': '/home/ruser0/.ansible/tmp/ansible-tmp-1657752005.0791018-1376064-51682509412978/source', 'dest': '/etc/kubernetes/addons/metrics_server/resource-reader.yaml', 'mode': 420, 'follow': False, '_original_basename': 'resource-reader.yaml.j2', 'checksum': '68de1c12f565488cdd8ca6cbfb08159e8649a865', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'resource-reader', 'file': 'resource-reader.yaml', 'type': 'clusterrole'}, 'ansible_loop_var': 'item'})

TASK [kubernetes-apps/csi_driver/csi_crd : CSI CRD | Generate Manifests] *******
skipping: [dev-master0] => (item={'name': 'volumesnapshotclasses', 'file': 'volumesnapshotclasses.yml'}) 
skipping: [dev-master0] => (item={'name': 'volumesnapshotcontents', 'file': 'volumesnapshotcontents.yml'}) 
skipping: [dev-master0] => (item={'name': 'volumesnapshots', 'file': 'volumesnapshots.yml'}) 

TASK [kubernetes-apps/csi_driver/csi_crd : CSI CRD | Apply Manifests] **********
skipping: [dev-master0] => (item=volumesnapshotclasses.yml) 
skipping: [dev-master0] => (item=volumesnapshotcontents.yml) 
skipping: [dev-master0] => (item=volumesnapshots.yml) 

TASK [kubernetes-apps/csi_driver/cinder : include_tasks] ***********************
skipping: [dev-master0]

TASK [kubernetes-apps/csi_driver/cinder : Cinder CSI Driver | Write cacert file] ***
skipping: [dev-master0] => (item=dev-worker0) 
skipping: [dev-master0] => (item=dev-master0) 

TASK [kubernetes-apps/csi_driver/cinder : Cinder CSI Driver | Write Cinder cloud-config] ***
skipping: [dev-master0]

TASK [kubernetes-apps/csi_driver/cinder : Cinder CSI Driver | Get base64 cloud-config] ***
skipping: [dev-master0]

TASK [kubernetes-apps/csi_driver/cinder : Cinder CSI Driver | Generate Manifests] ***
skipping: [dev-master0] => (item={'name': 'cinder-csi-driver', 'file': 'cinder-csi-driver.yml'}) 
skipping: [dev-master0] => (item={'name': 'cinder-csi-cloud-config-secret', 'file': 'cinder-csi-cloud-config-secret.yml'}) 
skipping: [dev-master0] => (item={'name': 'cinder-csi-controllerplugin', 'file': 'cinder-csi-controllerplugin-rbac.yml'}) 
skipping: [dev-master0] => (item={'name': 'cinder-csi-controllerplugin', 'file': 'cinder-csi-controllerplugin.yml'}) 
skipping: [dev-master0] => (item={'name': 'cinder-csi-nodeplugin', 'file': 'cinder-csi-nodeplugin-rbac.yml'}) 
skipping: [dev-master0] => (item={'name': 'cinder-csi-nodeplugin', 'file': 'cinder-csi-nodeplugin.yml'}) 
skipping: [dev-master0] => (item={'name': 'cinder-csi-poddisruptionbudget', 'file': 'cinder-csi-poddisruptionbudget.yml'}) 

TASK [kubernetes-apps/csi_driver/cinder : Cinder CSI Driver | Apply Manifests] ***
skipping: [dev-master0] => (item=cinder-csi-driver.yml) 
skipping: [dev-master0] => (item=cinder-csi-cloud-config-secret.yml) 
skipping: [dev-master0] => (item=cinder-csi-controllerplugin-rbac.yml) 
skipping: [dev-master0] => (item=cinder-csi-controllerplugin.yml) 
skipping: [dev-master0] => (item=cinder-csi-nodeplugin-rbac.yml) 
skipping: [dev-master0] => (item=cinder-csi-nodeplugin.yml) 
skipping: [dev-master0] => (item=cinder-csi-poddisruptionbudget.yml) 

TASK [kubernetes-apps/csi_driver/aws_ebs : AWS CSI Driver | Generate Manifests] ***
skipping: [dev-master0] => (item={'name': 'aws-ebs-csi-driver', 'file': 'aws-ebs-csi-driver.yml'}) 
skipping: [dev-master0] => (item={'name': 'aws-ebs-csi-controllerservice', 'file': 'aws-ebs-csi-controllerservice-rbac.yml'}) 
skipping: [dev-master0] => (item={'name': 'aws-ebs-csi-controllerservice', 'file': 'aws-ebs-csi-controllerservice.yml'}) 
skipping: [dev-master0] => (item={'name': 'aws-ebs-csi-nodeservice', 'file': 'aws-ebs-csi-nodeservice.yml'}) 

TASK [kubernetes-apps/csi_driver/aws_ebs : AWS CSI Driver | Apply Manifests] ***
skipping: [dev-master0] => (item=aws-ebs-csi-driver.yml) 
skipping: [dev-master0] => (item=aws-ebs-csi-controllerservice-rbac.yml) 
skipping: [dev-master0] => (item=aws-ebs-csi-controllerservice.yml) 
skipping: [dev-master0] => (item=aws-ebs-csi-nodeservice.yml) 

TASK [kubernetes-apps/csi_driver/azuredisk : include_tasks] ********************
skipping: [dev-master0]

TASK [kubernetes-apps/csi_driver/azuredisk : Azure CSI Driver | Write Azure CSI cloud-config] ***
skipping: [dev-master0]

TASK [kubernetes-apps/csi_driver/azuredisk : Azure CSI Driver | Get base64 cloud-config] ***
skipping: [dev-master0]

TASK [kubernetes-apps/csi_driver/azuredisk : Azure CSI Driver | Generate Manifests] ***
skipping: [dev-master0] => (item={'name': 'azure-csi-azuredisk-driver', 'file': 'azure-csi-azuredisk-driver.yml'}) 
skipping: [dev-master0] => (item={'name': 'azure-csi-cloud-config-secret', 'file': 'azure-csi-cloud-config-secret.yml'}) 
skipping: [dev-master0] => (item={'name': 'azure-csi-azuredisk-controller', 'file': 'azure-csi-azuredisk-controller-rbac.yml'}) 
skipping: [dev-master0] => (item={'name': 'azure-csi-azuredisk-controller', 'file': 'azure-csi-azuredisk-controller.yml'}) 
skipping: [dev-master0] => (item={'name': 'azure-csi-azuredisk-node', 'file': 'azure-csi-azuredisk-node.yml'}) 
skipping: [dev-master0] => (item={'name': 'azure-csi-node-info-crd.yml.j2', 'file': 'azure-csi-node-info-crd.yml'}) 

TASK [kubernetes-apps/csi_driver/azuredisk : Azure CSI Driver | Apply Manifests] ***
skipping: [dev-master0] => (item=azure-csi-azuredisk-driver.yml) 
skipping: [dev-master0] => (item=azure-csi-cloud-config-secret.yml) 
skipping: [dev-master0] => (item=azure-csi-azuredisk-controller-rbac.yml) 
skipping: [dev-master0] => (item=azure-csi-azuredisk-controller.yml) 
skipping: [dev-master0] => (item=azure-csi-azuredisk-node.yml) 
skipping: [dev-master0] => (item=azure-csi-node-info-crd.yml) 

TASK [kubernetes-apps/csi_driver/gcp_pd : GCP PD CSI Driver | Check if cloud-sa.json exists] ***
skipping: [dev-master0]

TASK [kubernetes-apps/csi_driver/gcp_pd : GCP PD CSI Driver | Copy GCP credentials file] ***
skipping: [dev-master0]

TASK [kubernetes-apps/csi_driver/gcp_pd : GCP PD CSI Driver | Get base64 cloud-sa.json] ***
skipping: [dev-master0]

TASK [kubernetes-apps/csi_driver/gcp_pd : GCP PD CSI Driver | Generate Manifests] ***
skipping: [dev-master0] => (item={'name': 'gcp-pd-csi-cred-secret', 'file': 'gcp-pd-csi-cred-secret.yml'}) 
skipping: [dev-master0] => (item={'name': 'gcp-pd-csi-setup', 'file': 'gcp-pd-csi-setup.yml'}) 
skipping: [dev-master0] => (item={'name': 'gcp-pd-csi-controller', 'file': 'gcp-pd-csi-controller.yml'}) 
skipping: [dev-master0] => (item={'name': 'gcp-pd-csi-node', 'file': 'gcp-pd-csi-node.yml'}) 

TASK [kubernetes-apps/csi_driver/gcp_pd : GCP PD CSI Driver | Apply Manifests] ***
skipping: [dev-master0] => (item=gcp-pd-csi-cred-secret.yml) 
skipping: [dev-master0] => (item=gcp-pd-csi-setup.yml) 
skipping: [dev-master0] => (item=gcp-pd-csi-controller.yml) 
skipping: [dev-master0] => (item=gcp-pd-csi-node.yml) 

TASK [kubernetes-apps/csi_driver/upcloud : UpCloud CSI Driver | Check if UPCLOUD_USERNAME exists] ***
skipping: [dev-master0]

TASK [kubernetes-apps/csi_driver/upcloud : UpCloud CSI Driver | Check if UPCLOUD_PASSWORD exists] ***
skipping: [dev-master0]

TASK [kubernetes-apps/csi_driver/upcloud : UpCloud CSI Driver | Generate Manifests] ***
skipping: [dev-master0] => (item={'name': 'upcloud-csi-cred-secret', 'file': 'upcloud-csi-cred-secret.yml'}) 
skipping: [dev-master0] => (item={'name': 'upcloud-csi-setup', 'file': 'upcloud-csi-setup.yml'}) 
skipping: [dev-master0] => (item={'name': 'upcloud-csi-controller', 'file': 'upcloud-csi-controller.yml'}) 
skipping: [dev-master0] => (item={'name': 'upcloud-csi-node', 'file': 'upcloud-csi-node.yml'}) 
skipping: [dev-master0] => (item={'name': 'upcloud-csi-driver', 'file': 'upcloud-csi-driver.yml'}) 

TASK [kubernetes-apps/csi_driver/upcloud : UpCloud CSI Driver | Apply Manifests] ***
skipping: [dev-master0] => (item=upcloud-csi-cred-secret.yml) 
skipping: [dev-master0] => (item=upcloud-csi-setup.yml) 
skipping: [dev-master0] => (item=upcloud-csi-controller.yml) 
skipping: [dev-master0] => (item=upcloud-csi-node.yml) 
skipping: [dev-master0] => (item=upcloud-csi-driver.yml) 

TASK [kubernetes-apps/csi_driver/vsphere : include_tasks] **********************
skipping: [dev-master0]

TASK [kubernetes-apps/csi_driver/vsphere : vSphere CSI Driver | Generate CSI cloud-config] ***
skipping: [dev-master0] => (item=vsphere-csi-cloud-config) 

TASK [kubernetes-apps/csi_driver/vsphere : vSphere CSI Driver | Generate Manifests] ***
skipping: [dev-master0] => (item=vsphere-csi-driver.yml) 
skipping: [dev-master0] => (item=vsphere-csi-controller-rbac.yml) 
skipping: [dev-master0] => (item=vsphere-csi-node-rbac.yml) 
skipping: [dev-master0] => (item=vsphere-csi-controller-config.yml) 
skipping: [dev-master0] => (item=vsphere-csi-controller-deployment.yml) 
skipping: [dev-master0] => (item=vsphere-csi-controller-service.yml) 
skipping: [dev-master0] => (item=vsphere-csi-node.yml) 

TASK [kubernetes-apps/csi_driver/vsphere : vSphere CSI Driver | Generate a CSI secret manifest] ***
skipping: [dev-master0]

TASK [kubernetes-apps/csi_driver/vsphere : vSphere CSI Driver | Apply a CSI secret manifest] ***
skipping: [dev-master0]

TASK [kubernetes-apps/csi_driver/vsphere : vSphere CSI Driver | Apply Manifests] ***
skipping: [dev-master0] => (item=vsphere-csi-driver.yml) 
skipping: [dev-master0] => (item=vsphere-csi-controller-rbac.yml) 
skipping: [dev-master0] => (item=vsphere-csi-node-rbac.yml) 
skipping: [dev-master0] => (item=vsphere-csi-controller-config.yml) 
skipping: [dev-master0] => (item=vsphere-csi-controller-deployment.yml) 
skipping: [dev-master0] => (item=vsphere-csi-controller-service.yml) 
skipping: [dev-master0] => (item=vsphere-csi-node.yml) 

TASK [kubernetes-apps/persistent_volumes/openstack : Kubernetes Persistent Volumes | Lay down OpenStack Cinder Storage Class template] ***
skipping: [dev-master0]

TASK [kubernetes-apps/persistent_volumes/openstack : Kubernetes Persistent Volumes | Add OpenStack Cinder Storage Class] ***
skipping: [dev-master0]

TASK [kubernetes-apps/persistent_volumes/cinder-csi : Kubernetes Persistent Volumes | Copy Cinder CSI Storage Class template] ***
skipping: [dev-master0]

TASK [kubernetes-apps/persistent_volumes/cinder-csi : Kubernetes Persistent Volumes | Add Cinder CSI Storage Class] ***
skipping: [dev-master0]

TASK [kubernetes-apps/persistent_volumes/aws-ebs-csi : Kubernetes Persistent Volumes | Copy AWS EBS CSI Storage Class template] ***
skipping: [dev-master0]

TASK [kubernetes-apps/persistent_volumes/aws-ebs-csi : Kubernetes Persistent Volumes | Add AWS EBS CSI Storage Class] ***
skipping: [dev-master0]

TASK [kubernetes-apps/persistent_volumes/azuredisk-csi : Kubernetes Persistent Volumes | Copy Azure CSI Storage Class template] ***
skipping: [dev-master0]

TASK [kubernetes-apps/persistent_volumes/azuredisk-csi : Kubernetes Persistent Volumes | Add Azure CSI Storage Class] ***
skipping: [dev-master0]

TASK [kubernetes-apps/persistent_volumes/gcp-pd-csi : Kubernetes Persistent Volumes | Copy GCP PD CSI Storage Class template] ***
skipping: [dev-master0]

TASK [kubernetes-apps/persistent_volumes/gcp-pd-csi : Kubernetes Persistent Volumes | Add GCP PD CSI Storage Class] ***
skipping: [dev-master0]

TASK [kubernetes-apps/persistent_volumes/upcloud-csi : Kubernetes Persistent Volumes | Copy UpCloud CSI Storage Class template] ***
skipping: [dev-master0]

TASK [kubernetes-apps/persistent_volumes/upcloud-csi : Kubernetes Persistent Volumes | Add UpCloud CSI Storage Class] ***
skipping: [dev-master0]

TASK [kubernetes-apps/snapshots/snapshot-controller : Snapshot Controller | Generate Manifests] ***
skipping: [dev-master0] => (item={'name': 'snapshot-ns', 'file': 'snapshot-ns.yml'}) 
skipping: [dev-master0] => (item={'name': 'rbac-snapshot-controller', 'file': 'rbac-snapshot-controller.yml'}) 
skipping: [dev-master0] => (item={'name': 'snapshot-controller', 'file': 'snapshot-controller.yml'}) 

TASK [kubernetes-apps/snapshots/snapshot-controller : Snapshot Controller | Apply Manifests] ***
skipping: [dev-master0] => (item=snapshot-ns.yml) 
skipping: [dev-master0] => (item=rbac-snapshot-controller.yml) 
skipping: [dev-master0] => (item=snapshot-controller.yml) 

TASK [kubernetes-apps/snapshots/cinder-csi : Kubernetes Snapshots | Copy Cinder CSI Snapshot Class template] ***
skipping: [dev-master0]

TASK [kubernetes-apps/snapshots/cinder-csi : Kubernetes Snapshots | Add Cinder CSI Snapshot Class] ***
skipping: [dev-master0]

TASK [kubernetes-apps/container_runtimes/kata_containers : Kata Containers | Create addon dir] ***
skipping: [dev-master0]

TASK [kubernetes-apps/container_runtimes/kata_containers : Kata Containers | Templates list] ***
skipping: [dev-master0]

TASK [kubernetes-apps/container_runtimes/kata_containers : Kata Containers | Create manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/container_runtimes/kata_containers : Kata Containers | Apply manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/container_runtimes/gvisor : gVisor | Create addon dir] ***
skipping: [dev-master0]

TASK [kubernetes-apps/container_runtimes/gvisor : gVisor | Templates List] *****
skipping: [dev-master0]

TASK [kubernetes-apps/container_runtimes/gvisor : gVisort | Create manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/container_runtimes/gvisor : gVisor | Apply manifests] ****
skipping: [dev-master0]

TASK [kubernetes-apps/container_runtimes/crun : crun | Copy runtime class manifest] ***
skipping: [dev-master0]

TASK [kubernetes-apps/container_runtimes/crun : crun | Apply manifests] ********
skipping: [dev-master0]

TASK [kubernetes-apps/container_runtimes/youki : youki | Copy runtime class manifest] ***
skipping: [dev-master0]

TASK [kubernetes-apps/container_runtimes/youki : youki | Apply manifests] ******
skipping: [dev-master0]

TASK [kubernetes-apps/container_engine_accelerator/nvidia_gpu : Container Engine Acceleration Nvidia GPU| gather os specific variables] ***

TASK [kubernetes-apps/container_engine_accelerator/nvidia_gpu : Container Engine Acceleration Nvidia GPU | Set fact of download url Tesla] ***
skipping: [dev-master0]

TASK [kubernetes-apps/container_engine_accelerator/nvidia_gpu : Container Engine Acceleration Nvidia GPU | Set fact of download url GTX] ***
skipping: [dev-master0]

TASK [kubernetes-apps/container_engine_accelerator/nvidia_gpu : Container Engine Acceleration Nvidia GPU | Create addon dir] ***
skipping: [dev-master0]

TASK [kubernetes-apps/container_engine_accelerator/nvidia_gpu : Container Engine Acceleration Nvidia GPU | Create manifests for nvidia accelerators] ***
skipping: [dev-master0] => (item={'name': 'nvidia-driver-install-daemonset', 'file': 'nvidia-driver-install-daemonset.yml', 'type': 'daemonset'}) 
skipping: [dev-master0] => (item={'name': 'k8s-device-plugin-nvidia-daemonset', 'file': 'k8s-device-plugin-nvidia-daemonset.yml', 'type': 'daemonset'}) 

TASK [kubernetes-apps/container_engine_accelerator/nvidia_gpu : Container Engine Acceleration Nvidia GPU | Apply manifests for nvidia accelerators] ***
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'nvidia-driver-install-daemonset', 'file': 'nvidia-driver-install-daemonset.yml', 'type': 'daemonset'}, 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': {'name': 'k8s-device-plugin-nvidia-daemonset', 'file': 'k8s-device-plugin-nvidia-daemonset.yml', 'type': 'daemonset'}, 'ansible_loop_var': 'item'}) 

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_private_key] ***
skipping: [dev-master0]

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_region_id] ***
skipping: [dev-master0]

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_tenancy_id] ***
skipping: [dev-master0]

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_user_id] ***
skipping: [dev-master0]

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_user_fingerprint] ***
skipping: [dev-master0]

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_compartment_id] ***
skipping: [dev-master0]

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_vnc_id] ***
skipping: [dev-master0]

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_subnet1_id] ***
skipping: [dev-master0]

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_subnet2_id] ***
skipping: [dev-master0]

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Credentials Check | oci_security_list_management] ***
skipping: [dev-master0]

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Generate Cloud Provider Configuration] ***
skipping: [dev-master0]

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Slurp Configuration] ***
skipping: [dev-master0]

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Encode Configuration] ***
skipping: [dev-master0]

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Generate Manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/cloud_controller/oci : OCI Cloud Controller | Apply Manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/metallb : Kubernetes Apps | Check cluster settings for MetalLB] ***
skipping: [dev-master0]

TASK [kubernetes-apps/metallb : Kubernetes Apps | Check cluster settings for MetalLB] ***
skipping: [dev-master0]

TASK [kubernetes-apps/metallb : Kubernetes Apps | Check BGP peers for MetalLB] ***
skipping: [dev-master0]

TASK [kubernetes-apps/metallb : Kubernetes Apps | Check AppArmor status] *******
skipping: [dev-master0]

TASK [kubernetes-apps/metallb : Kubernetes Apps | Set apparmor_enabled] ********
skipping: [dev-master0]

TASK [kubernetes-apps/metallb : Kubernetes Apps | Lay Down MetalLB] ************
skipping: [dev-master0] => (item=metallb.yml) 
skipping: [dev-master0] => (item=metallb-config.yml) 

TASK [kubernetes-apps/metallb : Kubernetes Apps | Install and configure MetalLB] ***
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': 'metallb.yml', 'ansible_loop_var': 'item'}) 
skipping: [dev-master0] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'item': 'metallb-config.yml', 'ansible_loop_var': 'item'}) 

TASK [kubernetes-apps/argocd : Kubernetes Apps | Install yq] *******************
skipping: [dev-master0]

TASK [kubernetes-apps/argocd : Kubernetes Apps | Set ArgoCD template list] *****
skipping: [dev-master0]

TASK [kubernetes-apps/argocd : Kubernetes Apps | Download ArgoCD remote manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/argocd : Kubernetes Apps | Set ArgoCD namespace for remote manifests] ***
skipping: [dev-master0]

TASK [kubernetes-apps/argocd : Kubernetes Apps | Create ArgoCD manifests from templates] ***
skipping: [dev-master0]

TASK [kubernetes-apps/argocd : Kubernetes Apps | Install ArgoCD] ***************
skipping: [dev-master0]

TASK [kubernetes-apps/argocd : Kubernetes Apps | Set ArgoCD custom admin password] ***
skipping: [dev-master0]

PLAY [Apply resolv.conf changes now that cluster DNS is up] ********************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [dev-worker0]

TASK [download : prep_download | On localhost, check if user has access to the container runtime without using sudo] ***
skipping: [dev-worker0]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Register docker images info] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [dev-worker0]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Create configuration dir] ***********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [download : download | Download files / images] ***************************
skipping: [dev-worker0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-worker0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-server', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/mirantis/k8s-netchecker-agent', 'tag': 'v1.2.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.3', 'dest': '/tmp/releases/etcd-v3.5.3-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.3', 'sha256': 'e13e119ff9b28234561738cd261c2a031eb1c8688079dcf96d8035b3ad19ca58', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [dev-master0] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.1.1.tgz', 'sha256': 'b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubeadm-v1.23.7-amd64', 'sha256': 'd7d863213eeb4791cdbd7c5fd398cf0cc2ef1547b3a74de8285786040f75efd2', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubelet-v1.23.7-amd64', 'sha256': '518f67200e853253ed6424488d6148476144b6b796ec7c6160cff15769b3e12a', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.23.7', 'dest': '/tmp/releases/kubectl-v1.23.7-amd64', 'sha256': 'b4c27ad52812ebf3164db927af1a01e503be3fb9dc5ffa058c9281d67c76f66e', 'url': 'https://storage.googleapis.com/kubernetes-release/release/v1.23.7/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.23.0', 'dest': '/tmp/releases/crictl-v1.23.0-linux-amd64.tar.gz', 'sha256': 'b754f83c80acdc75f93aba191ff269da6be45d0fc2d3f4079704e7d1424f1ca8', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cri_dockerd', 'value': {'file': True, 'enabled': False, 'version': 'v0.2.0', 'dest': '/tmp/releases/cri-dockerd-v1.23.0-linux-amd64.tar.gz', 'sha256': 'ad0e5f2ac6e7a57af4b560d1638ee26baab68c56a49ff3337e10ff9cea0a3539', 'url': 'https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'crun', 'value': {'file': True, 'enabled': False, 'version': '1.4.4', 'dest': '/tmp/releases/crun', 'sha256': '73f7f89a98f69c0bf0e9fe1e0129201d5b72529785b4b1bcb4d43c31d0c3a8ea', 'url': 'https://github.com/containers/crun/releases/download/1.4.4/crun-1.4.4-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'youki', 'value': {'file': True, 'enabled': False, 'version': '0.0.1', 'dest': '/tmp/releases/youki_v0_0_1_linux.tar.gz', 'sha256': '8bd712fe95c8a81194bfbc54c70516350f95153d67044579af95788fbafd943b', 'url': 'https://github.com/containers/youki/releases/download/v0.0.1/youki_v0_0_1_linux.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.1', 'dest': '/tmp/releases/runc', 'sha256': '5798c85d2c8b6942247ab8d6830ef362924cd72a8e236e77430c3ab1be15f080', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kata_containers', 'value': {'enabled': False, 'file': True, 'version': '2.4.1', 'dest': '/tmp/releases/kata-static-2.4.1-amd64.tar.xz', 'sha256': 'e234ffce779d451dc2a170b394b91d35b96e44ea50dc4a3256defa603efdf607', 'url': 'https://github.com/kata-containers/kata-containers/releases/download/2.4.1/kata-static-2.4.1-x86_64.tar.xz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.6.4', 'dest': '/tmp/releases/containerd-1.6.4-linux-amd64.tar.gz', 'sha256': 'f23c8ac914d748f85df94d3e82d11ca89ca9fe19a220ce61b99a05b070044de0', 'url': 'https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_runsc', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-runsc', 'sha256': 'af5b4527b2d63eea6d0cc2c5522b1e76163df695e9484475e378ec29f7baa661', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/runsc', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'gvisor_containerd_shim', 'value': {'enabled': False, 'file': True, 'version': 20210921, 'dest': '/tmp/releases/gvisor-containerd-shim-runsc-v1', 'sha256': '9ed085fcdbf6f300474e10f2f32b323038568342ce8130298f56e13d14484daa', 'url': 'https://storage.googleapis.com/gvisor/releases/release/20210921/x86_64/containerd-shim-runsc-v1', 'unarchive': False, 'owner': 'root', 'mode': 755, 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '0.19.0', 'dest': '/tmp/releases/nerdctl-0.19.0-linux-amd64.tar.gz', 'sha256': '9cf4d1a2b18baf0c713d7746f896fd6a9d18a130ea8f590c6ed11474748b1733', 'url': 'https://github.com/containerd/nerdctl/releases/download/v0.19.0/nerdctl-0.19.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/cilium/operator', 'tag': 'v1.11.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/k8snetworkplumbingwg/multus-cni', 'tag': 'v3.8', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel', 'tag': 'v0.17.0-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'flannel_init', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/flannelcni/flannel-cni-plugin', 'tag': 'v1.0.1-amd64', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calicoctl', 'sha256': 'a9e5f6bad4ad8c543f6bdcd21d3665cdd23edc780860d8e52a87881a7b3e203c', 'url': 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64', 'mirrors': ['https://github.com/projectcalico/calico/releases/download/v3.22.3/calicoctl-linux-amd64', 'https://github.com/projectcalico/calicoctl/releases/download/v3.22.3/calicoctl-linux-amd64'], 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/typha', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'calico_apiserver', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/calico/apiserver', 'tag': 'v3.22.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.22.3', 'dest': '/tmp/releases/calico-v3.22.3-kdd-crds/v3.22.3.tar.gz', 'sha256': '55ece01da00f82c62619b82b6bfd6442a021acc6fd915a753735e6ebceabaa21', 'url': 'https://github.com/projectcalico/calico/archive/v3.22.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-kube', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/weaveworks/weave-npc', 'tag': '2.8.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubeovn/kube-ovn', 'tag': 'v1.9.2', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-master0] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/cloudnativelabs/kube-router', 'tag': 'v1.4.0', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'kube-vip', 'value': {'enabled': False, 'container': True, 'repo': 'ghcr.io/kube-vip/kube-vip', 'tag': 'v0.4.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.21.4', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/haproxy', 'tag': '2.4.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/coredns/coredns', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/dns/k8s-dns-node-cache', 'tag': '1.21.1', 'sha256': '', 'groups': ['k8s_cluster']}}) 
skipping: [dev-worker0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.5', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.8.2', 'dest': '/tmp/releases/helm-v3.8.2/helm-v3.8.2-linux-amd64.tar.gz', 'sha256': '6cb9a48f72ab9ddfecab88d264c2f6508ab3cd42d9c09666be16a7bf006bed7b', 'url': 'https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'krew', 'value': {'enabled': False, 'file': True, 'version': 'v0.4.2', 'dest': '/tmp/releases/krew-linux_amd64.tar.gz', 'sha256': '203bfd8006b304c1e58d9e96f9afdc5f4a055e0fbd7ee397fac9f36bf202e721', 'url': 'https://github.com/kubernetes-sigs/krew/releases/download/v0.4.2/krew-linux_amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}}) 
skipping: [dev-worker0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'metrics_server', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/metrics-server/metrics-server', 'tag': 'v0.5.2', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/local-volume-provisioner', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'local_path_provisioner', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/rancher/local-path-provisioner', 'tag': 'v0.0.21', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/ingress-nginx/controller', 'tag': 'v1.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-cainjector', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/jetstack/cert-manager-webhook', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-master0] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-attacher', 'tag': 'v3.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-provisioner', 'tag': 'v3.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-snapshotter', 'tag': 'v5.0.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/snapshot-controller', 'tag': 'v4.2.1', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-resizer', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-apiserver', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'k8s.gcr.io/sig-storage/csi-node-driver-registrar', 'tag': 'v2.4.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-controller-manager', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.22.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-scheduler', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube_node']}}) 
skipping: [dev-worker0] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-proxy', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard-amd64', 'tag': 'v2.5.0', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.7', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_speaker', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/speaker', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'metallb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'quay.io/metallb/controller', 'tag': 'v0.12.1', 'sha256': '', 'groups': ['kube_control_plane']}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-apiserver', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-controller-manager', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-scheduler', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 
skipping: [dev-master0] => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'k8s.gcr.io/kube-proxy', 'tag': 'v1.23.7', 'groups': 'k8s_cluster'}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [dev-worker0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
ok: [dev-master0] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [dev-worker0] => (item=dev-worker0) 
skipping: [dev-worker0] => (item=dev-master0) 
skipping: [dev-worker0] => (item=dev-master0) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [dev-worker0]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [dev-worker0]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [adduser : User | Create User Group] **************************************
ok: [dev-master0]
ok: [dev-worker0]

TASK [adduser : User | Create User] ********************************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *****************
skipping: [dev-worker0] => (item=swap) 
skipping: [dev-worker0] => (item=none) 
skipping: [dev-master0] => (item=swap) 
skipping: [dev-master0] => (item=none) 

TASK [kubernetes/preinstall : check swap] **************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Disable swap] ************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Disable swapOnZram for Fedora] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if either kube_control_plane or kube_node group is empty] ***
skipping: [dev-worker0] => (item=kube_control_plane) 
skipping: [dev-worker0] => (item=kube_node) 

TASK [kubernetes/preinstall : Stop if etcd group is empty in external etcd mode] ***
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Stop if non systemd OS type] *********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if unknown OS] ******************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if unknown network plugin] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if unsupported version of Kubernetes] *******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***
skipping: [dev-worker0] => (item={'name': 'download_run_once', 'value': False}) 
skipping: [dev-worker0] => (item={'name': 'deploy_netchecker', 'value': False}) 
skipping: [dev-worker0] => (item={'name': 'download_always_pull', 'value': False}) 
skipping: [dev-worker0] => (item={'name': 'helm_enabled', 'value': False}) 
skipping: [dev-worker0] => (item={'name': 'openstack_lbaas_enabled', 'value': False}) 

TASK [kubernetes/preinstall : Stop if even number of etcd hosts] ***************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if memory is too small for masters] *********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if memory is too small for nodes] ***********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop when dynamic_kubelet_configuration enabled for kubernetes >= 1.22] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Guarantee that enough network address space is available for all pods] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if ip var does not match local ips] *********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if access_ip is not pingable] ***************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if RBAC is not enabled when dashboard is enabled] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if RBAC is not enabled when OCI cloud controller is enabled] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if RBAC and anonymous-auth are not enabled when insecure port is disabled] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if kernel version is too low] ***************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if bad hostname] ****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : check cloud_provider value] **********************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Check that kube_service_addresses is a network range] ***
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Check that kube_pods_subnet is a network range] ***
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Check that kube_pods_subnet does not collide with kube_service_addresses] ***
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Check that IP range is enough for the nodes] *****
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Stop if unknown dns mode] ************************
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Stop if unknown kube proxy mode] *****************
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Stop if unknown cert_management] *****************
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Stop if unknown resolvconf_mode] *****************
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Stop if etcd deployment type is not host, docker or kubeadm] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if container manager is not docker, crio or containerd] ***
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Stop if etcd deployment type is not host or kubeadm when container_manager != docker] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Warn the user if they are still using `etcd_kubeadm_enabled`] ***
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Stop if `etcd_kubeadm_enabled` is defined and `etcd_deployment_type` is not `kubeadm` or `host`] ***
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Stop if download_localhost is enabled but download_run_once is not] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if kata_containers_enabled is enabled when container_manager is docker] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if kata_containers_version is >= 2.3.0 and kube_version < 1.22.0] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if gvisor_enabled is enabled when container_manager is not containerd] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if download_localhost is enabled for Flatcar Container Linux] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Ensure minimum containerd version] ***************
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Stop if using deprecated containerd_config variable] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Stop if auto_renew_certificates is enabled when certificates are managed externally (kube_external_ca_mode is true)] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Force binaries directory for Flatcar Container Linux by Kinvolk] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : check if booted with ostree] *********************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : set is_fedora_coreos] ****************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : set is_fedora_coreos] ****************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : check resolvconf] ********************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : check existence of /etc/resolvconf/resolv.conf.d] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : check status of /etc/resolv.conf] ****************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : get content of /etc/resolv.conf] *****************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : get currently configured nameservers] ************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : check systemd-resolved] **************************
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : set dns facts] ***********************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : check if kubelet is configured] ******************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : check if early DNS configuration stage] **********
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : target resolv.conf files] ************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : target temporary resolvconf cloud init file (Flatcar Container Linux by Kinvolk / Fedora CoreOS)] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] **************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhclient.conf] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] *********
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : target dhclient hook file for Red Hat family] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *****
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : generate search domains to resolvconf] ***********
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *****
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : generate nameservers for resolvconf, including cluster DNS] ***
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : generate nameservers for resolvconf, not including cluster DNS] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : gather os specific variables] ********************
ok: [dev-worker0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)
ok: [dev-master0] => (item=/home/avatar/dev/c7-d0/ansible/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml)

TASK [kubernetes/preinstall : set etcd vars if using kubeadm mode] *************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : check /usr readonly] *****************************
ok: [dev-worker0]
ok: [dev-master0]

TASK [kubernetes/preinstall : set alternate flexvolume path] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Ensure IPv6DualStack featureGate is set when enable_dual_stack_networks is true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Ensure IPv6DualStack kubeadm featureGate is set when enable_dual_stack_networks is true] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Create kubernetes directories] *******************
skipping: [dev-worker0] => (item=/etc/kubernetes) 
skipping: [dev-worker0] => (item=/etc/kubernetes/ssl) 
skipping: [dev-worker0] => (item=/etc/kubernetes/manifests) 
skipping: [dev-worker0] => (item=/usr/local/bin/kubernetes-scripts) 
skipping: [dev-worker0] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec) 
skipping: [dev-master0] => (item=/etc/kubernetes) 
skipping: [dev-master0] => (item=/etc/kubernetes/ssl) 
skipping: [dev-master0] => (item=/etc/kubernetes/manifests) 
skipping: [dev-master0] => (item=/usr/local/bin/kubernetes-scripts) 
skipping: [dev-master0] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec) 

TASK [kubernetes/preinstall : Create other directories] ************************
skipping: [dev-worker0] => (item=/usr/local/bin) 
skipping: [dev-master0] => (item=/usr/local/bin) 

TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Create kubernetes kubeadm compat cert dir (kubernetes/kubeadm issue 1498)] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Create cni directories] **************************
skipping: [dev-worker0] => (item=/etc/cni/net.d) 
skipping: [dev-worker0] => (item=/opt/cni/bin) 
skipping: [dev-worker0] => (item=/var/lib/calico) 
skipping: [dev-master0] => (item=/etc/cni/net.d) 
skipping: [dev-master0] => (item=/opt/cni/bin) 
skipping: [dev-master0] => (item=/var/lib/calico) 

TASK [kubernetes/preinstall : Create local volume provisioner directories] *****
skipping: [dev-worker0] => (item=local-storage) 
skipping: [dev-master0] => (item=local-storage) 

TASK [kubernetes/preinstall : create temporary resolveconf cloud init file] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Add domain/search/nameservers/options to resolv.conf] ***
changed: [dev-master0]
changed: [dev-worker0]

TASK [kubernetes/preinstall : Remove search/domain/nameserver options before block] ***
ok: [dev-worker0] => (item=['/etc/resolv.conf', 'search '])
ok: [dev-master0] => (item=['/etc/resolv.conf', 'search '])
ok: [dev-worker0] => (item=['/etc/resolv.conf', 'nameserver '])
ok: [dev-master0] => (item=['/etc/resolv.conf', 'nameserver '])
ok: [dev-worker0] => (item=['/etc/resolv.conf', 'domain '])
ok: [dev-master0] => (item=['/etc/resolv.conf', 'domain '])
ok: [dev-worker0] => (item=['/etc/resolv.conf', 'options '])
ok: [dev-master0] => (item=['/etc/resolv.conf', 'options '])

TASK [kubernetes/preinstall : Remove search/domain/nameserver options after block] ***
ok: [dev-worker0] => (item=['/etc/resolv.conf', 'search '])
ok: [dev-master0] => (item=['/etc/resolv.conf', 'search '])
ok: [dev-worker0] => (item=['/etc/resolv.conf', 'nameserver '])
ok: [dev-master0] => (item=['/etc/resolv.conf', 'nameserver '])
ok: [dev-worker0] => (item=['/etc/resolv.conf', 'domain '])
ok: [dev-master0] => (item=['/etc/resolv.conf', 'domain '])
ok: [dev-worker0] => (item=['/etc/resolv.conf', 'options '])
ok: [dev-master0] => (item=['/etc/resolv.conf', 'options '])

TASK [kubernetes/preinstall : get temporary resolveconf cloud init file content] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : persist resolvconf cloud init file] **************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Write resolved.conf] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : NetworkManager | Ensure NetworkManager conf.d dir] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : NetworkManager | Prevent NetworkManager from managing Calico interfaces (cali*/tunl*/vxlan.calico)] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : NetworkManager | Prevent NetworkManager from managing K8S interfaces (kube-ipvs0/nodelocaldns)] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : NetworkManager | Add nameservers to NM configuration] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : NetworkManager | Add DNS search to NM configuration] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : NetworkManager | Add DNS options to NM configuration] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Update package management cache (zypper) - SUSE] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Update package management cache (APT)] ***********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Remove legacy docker repo file] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Install python3-dnf for latest RedHat versions] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Install epel-release on RHEL derivatives] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Update common_required_pkgs with ipvsadm when kube_proxy_mode is ipvs] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Install packages requirements] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Install ipvsadm for ClearLinux] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Confirm selinux deployed] ************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Set selinux policy] ******************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Disable IPv6 DNS lookup] *************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Clean previously used sysctl file locations] *****
skipping: [dev-worker0] => (item=ipv4-ip_forward.conf) 
skipping: [dev-worker0] => (item=bridge-nf-call.conf) 
skipping: [dev-master0] => (item=ipv4-ip_forward.conf) 
skipping: [dev-master0] => (item=bridge-nf-call.conf) 

TASK [kubernetes/preinstall : Stat sysctl file configuration] ******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] ********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Enable ip forwarding] ****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Enable ipv6 forwarding] **************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Check if we need to set fs.may_detach_mounts] ****
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Set fs.may_detach_mounts if needed] **************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Ensure kube-bench parameters are set] ************
skipping: [dev-worker0] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000}) 
skipping: [dev-worker0] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000}) 
skipping: [dev-worker0] => (item={'name': 'kernel.panic', 'value': 10}) 
skipping: [dev-worker0] => (item={'name': 'kernel.panic_on_oops', 'value': 1}) 
skipping: [dev-worker0] => (item={'name': 'vm.overcommit_memory', 'value': 1}) 
skipping: [dev-worker0] => (item={'name': 'vm.panic_on_oom', 'value': 0}) 
skipping: [dev-master0] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000}) 
skipping: [dev-master0] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000}) 
skipping: [dev-master0] => (item={'name': 'kernel.panic', 'value': 10}) 
skipping: [dev-master0] => (item={'name': 'kernel.panic_on_oops', 'value': 1}) 
skipping: [dev-master0] => (item={'name': 'vm.overcommit_memory', 'value': 1}) 
skipping: [dev-master0] => (item={'name': 'vm.panic_on_oom', 'value': 0}) 

TASK [kubernetes/preinstall : Check dummy module] ******************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Hosts | create list from inventory] **************
skipping: [dev-worker0]

TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] ******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Hosts | populate kubernetes loadbalancer address into hosts file] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] *************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] ***
skipping: [dev-worker0] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}}) 
skipping: [dev-worker0] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}}) 
skipping: [dev-master0] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}}) 
skipping: [dev-master0] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}}) 

TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] ********
skipping: [dev-worker0] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain']}) 
skipping: [dev-worker0] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']}) 
skipping: [dev-master0] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain']}) 
skipping: [dev-master0] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']}) 

TASK [kubernetes/preinstall : Update facts] ************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] ***
changed: [dev-master0]
changed: [dev-worker0]

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] ***
ok: [dev-master0]
ok: [dev-worker0]

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (RH-only)] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Remove kubespray specific config from dhclient config] ***
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Remove kubespray specific dhclient hook] *********
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Flush handlers] **********************************

RUNNING HANDLER [kubernetes/preinstall : Preinstall | propagate resolvconf to k8s components] ***
changed: [dev-worker0]
changed: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | reload kubelet] **********
changed: [dev-worker0]
changed: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | kube-apiserver configured] ***
skipping: [dev-worker0]
ok: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | kube-controller configured] ***
skipping: [dev-worker0]
ok: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | restart kube-controller-manager docker] ***
skipping: [dev-worker0]
skipping: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | restart kube-controller-manager crio/containerd] ***
skipping: [dev-worker0]
skipping: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | restart kube-apiserver docker] ***
skipping: [dev-worker0]
skipping: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | restart kube-apiserver crio/containerd] ***
skipping: [dev-worker0]
changed: [dev-master0]

RUNNING HANDLER [kubernetes/preinstall : Preinstall | wait for the apiserver to be running] ***
skipping: [dev-worker0]
FAILED - RETRYING: [dev-master0]: Preinstall | wait for the apiserver to be running (60 retries left).
ok: [dev-master0]

TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] *******
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : install growpart] ********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Gather mounts facts] *****************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : Search root filesystem device] *******************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : check if growpart needs to be run] ***************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : check fs type] ***********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : run growpart] ************************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [kubernetes/preinstall : run xfs_growfs] **********************************
skipping: [dev-worker0]
skipping: [dev-master0]

TASK [Run calico checks] *******************************************************

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] ***
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] ***
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Stop if incompatible network plugin and cloudprovider] ***
skipping: [dev-worker0]

TASK [network_plugin/calico : Stop if supported Calico versions] ***************
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Get current calico cluster version] **************
ASYNC OK on dev-worker0: jid=582621819302.46661
ok: [dev-worker0 -> dev-master0(192.168.33.14)]

TASK [network_plugin/calico : Check that current calico version is enough for upgrade] ***
skipping: [dev-worker0]

TASK [network_plugin/calico : Check that cluster_id is set if calico_rr enabled] ***
skipping: [dev-worker0]

TASK [network_plugin/calico : Check that calico_rr nodes are in k8s_cluster group] ***
skipping: [dev-worker0]

TASK [network_plugin/calico : Check vars defined correctly] ********************
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Check calico network backend defined correctly] ***
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *****
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***
skipping: [dev-worker0]

TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Get Calico default-pool configuration] ***********
ok: [dev-worker0 -> dev-master0(192.168.33.14)]

TASK [network_plugin/calico : Set calico_pool_conf] ****************************
ok: [dev-worker0 -> dev-master0(192.168.33.14)]

TASK [network_plugin/calico : Check if inventory match current cluster configuration] ***
ok: [dev-worker0 -> dev-master0(192.168.33.14)] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [network_plugin/calico : Check kdd calico_datastore if calico_apiserver_enabled] ***
skipping: [dev-worker0]

TASK [network_plugin/calico : Check kdd calico_datastore if typha_enabled] *****
skipping: [dev-worker0]

TASK [network_plugin/calico : Check ipip mode is Nerver for calco ipv6] ********
skipping: [dev-worker0]

PLAY [SF ansible tasks - get k8s configs] **************************************

TASK [Gathering Facts] *********************************************************
ok: [dev-master0]
ok: [dev-bastion0l]

TASK [k8s_save_conf : Create dir for k8s configs] ******************************
changed: [dev-bastion0l]

TASK [k8s_save_conf : Fetch k8s cluster config] ********************************
changed: [dev-bastion0l]
changed: [dev-master0]

TASK [k8s_save_conf : Edit k8s cluseter config] ********************************
ok: [dev-bastion0l]
changed: [dev-master0]

TASK [k8s_save_conf : Adapt microk8s cluseter name in config] ******************
changed: [dev-bastion0l]
ok: [dev-master0]

TASK [k8s_save_conf : Create dir for k8s cluster configs] **********************
skipping: [dev-master0]
changed: [dev-bastion0l]

TASK [k8s_save_conf : Copy k8s cluster configs to dev-bastion0l] ***************
skipping: [dev-master0]
changed: [dev-bastion0l]

TASK [k8s_save_conf : Delete tmp dir for k8s configs] **************************
changed: [dev-bastion0l]

PLAY RECAP *********************************************************************
dev-bastion0e              : ok=32   changed=16   unreachable=0    failed=0    skipped=17   rescued=0    ignored=0   
dev-bastion0l              : ok=42   changed=28   unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
dev-master0                : ok=761  changed=162  unreachable=0    failed=0    skipped=1195 rescued=0    ignored=9   
dev-worker0                : ok=598  changed=109  unreachable=0    failed=0    skipped=928  rescued=0    ignored=2   
localhost                  : ok=5    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

